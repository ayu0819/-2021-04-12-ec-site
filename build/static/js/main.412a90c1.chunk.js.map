{"version":3,"sources":["reducks/users/actions.js","reducks/store/initialState.js","reducks/users/reducers.js","reducks/products/actions.js","reducks/products/reducers.js","reducks/Contacts/reducers.js","reducks/Notification/actions.js","reducks/Notification/reducers.js","components/common/Header.jsx","components/UIkit/PrimaryButton.jsx","components/UIkit/SignInput.jsx","components/UIkit/Search.jsx","components/UIkit/IconText.jsx","components/UIkit/AccountButton.jsx","components/UIkit/TextInput.jsx","components/UIkit/SelectBox.jsx","components/UIkit/CategoryChip.jsx","assets/img/no_image.png","components/UIkit/Modal.jsx","components/UIkit/ModalItem.jsx","firebase/index.js","firebase/config.js","reducks/users/operations.js","components/UIkit/LogoutButton.jsx","components/UIkit/TextArea.jsx","components/UIkit/Snackbars.jsx","components/UIkit/Pagenation.jsx","components/UIkit/Page.jsx","components/UIkit/Page2.jsx","components/UIkit/TextDetail.jsx","components/Products/ImagePreview.jsx","components/UIkit/ImageUpload.jsx","components/UIkit/ProductOther.jsx","components/UIkit/ProductInput.jsx","components/Products/ImagePre.jsx","components/UIkit/ImageUp.jsx","reducks/users/selectors.js","components/common/CategoryBar.jsx","assets/img/logo.png","components/common/Nav.jsx","components/common/Footer.jsx","components/common/FooterLink.jsx","components/common/IconMenu.jsx","components/common/UserMenu.jsx","components/common/SidebarData.jsx","assets/img/site-top.jpg","assets/img/site-top-mb.jpg","components/Home/Main.jsx","reducks/loading/actions.js","components/Products/ImageArea.jsx","components/Products/ProductCard.jsx","components/Products/ProductButton.jsx","components/Products/CartItem.jsx","components/Products/ProductTable.jsx","components/Products/ImageSwiper.jsx","components/Products/SetSizesArea.jsx","reducks/products/operations.js","components/Products/ProductMenu.jsx","components/Products/LikeItem.jsx","components/Products/ProductEdit.jsx","components/Products/SizeTable.jsx","components/Products/OrderHistoryItem.jsx","components/Products/OrderedProducts.jsx","reducks/products/selectors.js","components/Home/NewProduct.jsx","components/Home/PopularProduct.jsx","assets/img/site-bottom.png","components/Home/Advertising.jsx","components/Home/Sell.jsx","components/Home/PopularCategory.jsx","components/Home/Campaign.jsx","assets/img/banner-1.jpg","assets/img/banner-2.jpg","assets/img/banner-3.jpg","components/Home/Carousel.jsx","components/User/UserMenu.jsx","components/User/UserButton.jsx","components/User/UserImage.jsx","components/User/NotificationItem.jsx","components/User/UserMenus.jsx","components/User/UserEditButton.jsx","components/User/TestButtonModal.jsx","components/User/NotificationBar.jsx","components/User/NotificationChip.jsx","templates/Home.jsx","templates/Reset.jsx","templates/SignIn.jsx","templates/SignUp.jsx","templates/ProductEdit.jsx","templates/ProductDetail.jsx","templates/ProductList.jsx","assets/img/mypage-img.jpg","templates/User.jsx","assets/img/cart-img.jpg","templates/CartList.jsx","templates/LikeList.jsx","templates/Error.jsx","reducks/Notification/operations.js","reducks/Notification/selectors.js","templates/Notification.jsx","templates/Category.jsx","templates/UserEdit.jsx","templates/JsonList.jsx","reducks/Contacts/operations.js","templates/Contact.jsx","templates/TestPage.jsx","templates/UserProductsHistory.jsx","templates/SampleCard.jsx","templates/UserProducts.jsx","templates/OrderConfirm.jsx","templates/Products.jsx","templates/UserInfo.jsx","templates/NotificationForm.jsx","templates/OrderHistory.jsx","reducks/payments/operations.js","components/Payment/PaymentEdit.jsx","templates/CheckoutWrapper.jsx","templates/Test.jsx","Auth.jsx","Router.jsx","App.js","reducks/store/store.js","reportWebVitals.js","index.js"],"names":["FETCH_ORDERS_HISTORY","FETCH_PRODUCT_IN_CART","fetchProductsInCartAction","products","type","payload","FETCH_PRODUCTS_IN_LIKE","fetchProductsInLikeAction","SIGN_IN","signInAction","userState","isSignedIn","role","uid","username","email","post","images","prefecture","city","other","description","customer_id","payment_method_id","SIGN_OUT","UPDATE_USER_STATE","updateUserStateAction","initialState","loading","state","text","notifications","list","contacts","categories","id","users","like","cart","orders","UsersReducer","action","Actions","DELETE_PRODUCT","FETCH_PRODUCTS","ProductsReducer","ContactsReducer","FETCH_NOTIFICATIONS","NotificationsReducer","Headers","styled","div","Header","useState","open","setOpen","useCallback","event","key","className","Button","button","PrimaryButton","props","style","onClick","label","Form","Input","input","SignInput","placeholder","name","class","required","autocomplete","complete","onChange","value","Navbar","IconText","sidebar","setSidebar","showSidebar","Provider","color","AccountButton","href","path","TextInput","FlexItem","Select","select","SelectBox","console","log","target","options","map","option","media","Items","Icon","CategoryChip","dispatch","useDispatch","push","icon","img","MdClose","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","storage","FirebaseTimestamp","functions","Timestamp","usersRef","collection","LogoutButton","a","signOut","then","Area","textarea","TextArea","cols","rows","maxlength","Contents","Flex","Page2","showPerPage","onPaginationChange","total","counter","setCounter","Math","ceil","numberOfButtons","useEffect","onButtonClick","Array","fill","el","index","MainText","p","Number","TextDetail","PreviewImg","ImagePreview","delete","src","alt","ImagePre","Images","DropBox","dragEnter","css","ImageUp","setDragEnter","handleDrop","e","file","files","blob","Blob","S","fileName","from","crypto","getRandomValues","Uint32Array","n","length","join","uploadTask","ref","child","put","snapshot","getDownloadURL","downloadURL","newImage","setImages","prevState","uploadImage","deleteImage","window","confirm","newImages","filter","image","htmlFor","onDragEnter","stopPropagation","preventDefault","onDragLeave","onDragOver","onDrop","multiple","usersSelector","getCustomerId","createSelector","getPaymentMethodId","getOrdersHistory","getProductsInCart","getProductsInLike","getIsSignedIn","getUserId","getUsername","getUserRole","Size","Categorys","CategoryBar","selector","useSelector","Lists","List","NavBar","header","Nav","logo","width","FooterBar","footer","Footer","FooterLink","Icons","IconMenu","dropdown","setDropdown","userId","productsInCart","productsInLike","unsubscribe","doc","onSnapshot","snapshots","docChanges","forEach","change","product","data","findIndex","cartId","likeId","Badge","badgeContent","onMouseEnter","innerWidth","onMouseLeave","DropMenu","ul","UserMenu","click","setClick","title","item","Category","li","SidebarData","selectMenu","func","filters","setFilters","orderBy","get","category","slice","MainImage","top","topMb","Home","showLoadingAction","ImageArea","catch","Card","Price","ProductCard","isAdministrator","NoImage","price","toLocaleString","ProductButton","addProduct","onclick","Item","PcIcon","CartItem","removeProductFromCart","Image","ImageSwiper","React","pagination","clickable","dynamicBullets","navigation","nextEl","prevEl","loop","params","useStyles","makeStyles","checkIcon","float","iconCell","padding","height","Inputs","SetSizesArea","classes","setIndex","size","setSize","quantity","setQuantity","inputSize","inputQuantity","sizes","aria-label","TableContainer","component","Paper","TableHead","TableRow","TableCell","TableBody","i","scope","IconButton","editSize","deleteIndex","newSizes","setSizes","deleteSize","fullWidth","multiline","addSize","productsRef","fetchProducts","query","where","productList","ProductMenu","getState","nextProducts","LikeItem","removeLikeFromCart","Table","CartIcon","ItemSide","SizeTable","OrderHistoryItem","date","order","orderedDatetime","updated_at","toDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","shippingDate","dateToString","shipping_date","amount","SideArea","OrderedProducts","goToProductDetail","productsSelector","getProducts","Products","NewProduct","router","location","search","test","split","product1","AdvertisingImage","Advertising","PopularCategory","Campaign","Carousel","Swiper","modules","Navigation","Pagination","spaceBetween","banner1","banner2","banner3","Menu","link","UserButton","BackStyle","CartList","day","User","Modal","setAppElement","Chip","Btn","ModalItem","NotificationChip","modalIsOpen","setModalIsOpen","subject","isOpen","shouldCloseOnOverlayClick","onRequestClose","overlay","backGroundColor","content","maxWidth","borderRadius","HTMLReactParser","replace","Main","Texts","Reset","setEmail","inputEmail","alert","sendPasswordResetEmail","ResetPassword","SignIn","password","setPassword","inputPassword","signInWithEmailAndPassword","result","user","isSignedin","signIn","SignUp","setUsername","confirmPassword","setConfirmPassword","inputUsername","inputConfirmPassword","createUserWithEmailAndPassword","timestamp","now","userInitialData","created_at","set","signUp","ProductEdit","pathname","setDescription","setName","setPrice","setCategories","setCategory","setState","shippingFee","setShippingFee","shippingMethod","setShippingMethod","shippingDay","setShippingDay","shippingArea","setShippingArea","inputDescription","inputName","inputPrice","parseInt","merge","error","Error","saveProduct","CenterSpacer","Text","Head","ContentsPage","ProductDetail","setProduct","isLiked","setIsLiked","selectedSize","addedProduct","added_at","productId","cartRef","addLike","likeRef","ProductList","Container","Sidebar","aside","Title","h3","main","MbMenu","setUser","UserMenus","goToOder","goToHome","ButtonArea","LikeList","notificationsRef","getNotifications","Chips","Notification","notificationList","notification","UserEdit","setPrefecture","setCity","setOther","setPost","inputCity","inputOther","inputPost","userEdit","App","JsonList","JsonDate","pageNumber","setPageNumber","pagesVisited","displayUsers","firstName","lastName","pageCount","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousClassName","nextLinkClassName","disableInitialCallback","activeClassName","contactsRef","setType","setSubject","setText","inputSubject","inputText","saveContact","TestPage","posts","start","end","setPagination","Notifications","UserProductsHistory","NotificationItem","CartDetail","OrderConfirm","subTotal","useMemo","reduce","sum","tax","userRef","soldOutProducts","batch","updatedSizes","update","errorMessage","commit","orderRef","fromDate","Date","setDate","history","orderProduct","Center","Informations","UserInfo","NotificationForm","saveNotification","OrderHistory","headers","BASE_URL","createCustomer","paymentMethodId","fetch","method","body","JSON","stringify","paymentMethod","response","json","customerResponse","parse","retrievePaymentMethod","paymentMethodResponse","card","updatePaymentMethod","customerId","prevPaymentMethodId","nextPaymentMethodId","PaymentEdit","stripe","useStripe","elements","useElements","setCard","register","cardElement","getElement","CardElement","createPaymentMethod","customerData","updateUserState","registerCard","goBackToMyPage","cardData","cardNumber","last4","brand","base","fontSize","invalid","stripePromise","loadStripe","CheckoutWrapper","Test","Auth","children","isSingedIn","onAuthStateChanged","Router","exact","Contact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","History","store","reduxCreateStore","combineReducers","connectRouter","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.412a90c1.chunk.js","sourcesContent":["export const FETCH_ORDERS_HISTORY = \"FETCH_ORDERS_HISTORY\";\nexport const fetchOrdersHistoryAction = (orders) => {\n    return {\n        type: \"FETCH_ORDERS_HISTORY\",\n        payload: orders\n    }\n}\n\nexport const FETCH_PRODUCT_IN_CART = \"FETCH_PRODUCT_IN_CART\";\nexport const fetchProductsInCartAction = (products) => {\n    return {\n        type: \"FETCH_PRODUCT_IN_CART\",\n        payload: products\n    }\n}\n\nexport const FETCH_PRODUCTS_IN_LIKE = \"FETCH_PRODUCTS_IN_LIKE\";\nexport const fetchProductsInLikeAction = (products) => {\n    return {\n        type: \"FETCH_PRODUCTS_IN_LIKE\",\n        payload: products\n    }\n}\n\n// signInAction\nexport const SIGN_IN = \"SIGN_IN\";\nexport const signInAction = (userState) => {\n    return {\n        type: \"SIGN_IN\",\n        payload:  {\n            isSignedIn: true,\n            role: userState.role,\n            uid: userState.uid,\n            username: userState.username,\n            email: userState.email,\n            post: userState.post,\n            images: userState.images,\n            prefecture: userState.prefecture,\n            city: userState.city,\n            other: userState.other,\n            description: userState.description,\n            images: userState.images,\n            customer_id: userState.customer_id,\n            payment_method_id: userState.payment_method_id\n        }\n    }\n};\n\n// signOutAction\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const signOutAction = () => {\n    return {\n        type: \"SIGN_OUT\",\n        payload:  {\n            isSignedIn: false,\n            role: \"\",\n            uid: \"\",\n            username: \"\",\n            email: \"\",\n            post: \"\",\n            images: \"\",\n            prefecture: \"\",\n            city: \"\",\n            other: \"\",\n            description: \"\",\n            images: \"\"\n        }\n    }\n};\n\n// updateUserStateAction\nexport const UPDATE_USER_STATE = \"UPDATE_USER_STATE\";\nexport const updateUserStateAction = (userState) => {\n    return {\n        type: \"UPDATE_USER_STATE\",\n        payload:  {\n            userState\n        }\n    }\n};","const initialState = {\n   loading: {\n      state: false,\n      text: \"\"\n  },\n   notifications: {\n       list: [],\n   },\n    contacts: {\n       list: []\n    },\n    categories: {\n        id: \"\"\n     },\n    products: {\n        list: []\n     },\n    users: {\n       like: [],\n       customer_id: \"\",\n       payment_method_id: \"\",\n       cart: [],\n       orders: [],\n       isSignedIn: false,\n       uid: \"\",\n       username: \"\",\n       email: \"\",\n       prefecture: \"\",\n       city: \"\",\n       other: \"\",\n       post: \"\",\n       description: \"\",\n       images: \"\"\n    }\n};\n\nexport default initialState","import * as Actions from './actions';\nimport initialState from '../store/initialState';\n\n// UsersReducer\nexport const UsersReducer = (state = initialState.users, action) => {\n    switch (action.type) {\n\n        // 購入履歴\n        case Actions.FETCH_ORDERS_HISTORY:\n            return {\n                ...state,\n                orders: [...action.payload]\n            };\n\n        // お気に入り追加\n        case Actions.FETCH_PRODUCTS_IN_LIKE:\n             return {\n                  ...state,\n                //   list: [...action.payload]\n                  like: [...action.payload]\n            };        \n\n            // カートに追加\n        case Actions.FETCH_PRODUCT_IN_CART:\n             return {\n                  ...state,\n                //   list: [...action.payload]\n                  cart: [...action.payload]\n            }; \n\n            // サインイン  \n        case Actions.SIGN_IN:\n            return {\n                ...state,\n                ...action.payload\n            };\n\n            // サインアウト\n            case Actions.SIGN_OUT:\n            // 初期状態に戻す\n            return {\n                ...action.payload\n            };\n\n            // アップデートアクション\n            case Actions.UPDATE_USER_STATE:\n            // 初期状態に戻す\n            return {\n                ...state,\n                ...action.payload\n            };\n        \n            default:\n                return state\n    }\n}","export const DELETE_PRODUCT = \"DELETE_PRODUCT\";\nexport const deleteProductsAction = (products) => {\n    return {\n        type: \"DELETE_PRODUCT\",\n        payload: products\n    }\n}\nexport const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\nexport const fetchProductsAction = (products) => {\n    return {\n        type: \"FETCH_PRODUCTS\",\n        payload: products\n    }\n}","import * as Actions from './actions';\nimport initialState from '../store/initialState';\n\n// UsersReducer\nexport const ProductsReducer = (state = initialState.products, action) => {\n    switch (action.type) {\n        case Actions.DELETE_PRODUCT:\n            return {\n                ...state,\n                list: [...action.payload]\n            };\n        case Actions.FETCH_PRODUCTS:\n             return {\n                  ...state,\n                  list: [...action.payload]\n            }; \n            default:\n                return state\n    }\n}","import * as Actions from './actions';\nimport initialState from '../store/initialState';\n\n// UsersReducer\nexport const ContactsReducer = (state = initialState.contacts, action) => {\n    switch (action.type) {\n\n            default:\n                return state\n    }\n}","export const FETCH_NOTIFICATIONS = \"FETCH_NOTIFICATIONS\";\nexport const fetchNotificationsAction = (notifications) => {\n    return {\n        type: \"FETCH_NOTIFICATIONS\",\n        payload: notifications\n    }\n};","import * as Actions from './actions';\nimport initialState from '../store/initialState';\n\n// UsersReducer\nexport const NotificationsReducer = (state = initialState.notifications, action) => {\n    switch (action.type) {\n          case Actions.FETCH_NOTIFICATIONS :\n              return {\n                ...state,\n                  // 配列をまた入れ込む 新しい配列としている\n                  list: [...action.payload]\n              };\n            default:\n                return state\n    }\n}","import React,{useCallback,useState} from 'react';\nimport {Nav,CategoryBar} from '../common';\n// import {ClosableDrawer,HeaderMenus,Menu} from './';\nimport styled from 'styled-components';\n\nconst media = {\n    sp: '@media(max-width: 650px)'\n}\n\nconst Headers = styled.div`\n\n    ${media.sp} {\n        padding: 0 0 1em 0 ;\n   }\n`;\n\nconst Header = () => {\n\n    const [open, setOpen] = useState(false);\n\nconst handleDrawerToggle = useCallback((event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n    }\n    setOpen(!open);\n}, [setOpen,open]);\n\n return(\n    <div className=\"common__center\">\n        <Headers>\n        <Nav />\n        \n    <CategoryBar />\n    {/* ClosableDrawer には open onClose 関数を受け取る */}\n    {/* <Menu />\n    <HeaderMenus handleDrawerToggle={handleDrawerToggle} />\n    <ClosableDrawer open={open} onClose={handleDrawerToggle} /> */}\n     </Headers>\n    </div>\n \n )\n}\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  \n  background-color: #ddd;\n  margin: 1.5em auto 0;\n  padding: 1.1em 3em;\n  transition: all ease-out .3s;\n  width: 100%;\n  max-width: 20em;\n\n    /* margin: 0 auto;\n    padding: 1.1em 3em;\n    background: #ea352d;\n    transition: all ease-out .3s;\n    color: #fff;\n    border-radius:2em;\n    width:100%;\n    max-width: 15em;\n    margin-bottom:1em; \n    label{\n      font-size: 1.2em;\n    }\n    :hover{\n    padding: 1.1em 3em;\n    background: #aa2e28;\n    color: #fff;\n    transition: all ease-out .3s;\n    border-radius:2em;\n    label{\n      font-size: 1.2em;\n    }\n    } */\n    label{\n      font-size: 1.2em;\n      cursor:pointer;\n    }\n    :hover{\n    transition: all ease-out .3s;\n    }\n`;\n\nconst PrimaryButton = (props) => {\n    \n return(\n    <Button className={props.style} onClick={() => props.onClick()}>\n      <label>{props.label}</label>\n    </Button>\n )\n}\n\nexport default PrimaryButton;","import React from 'react';\nimport styled from 'styled-components';\n\nconst media = {\n  sp: '@media(max-width: 650px)'\n}\n\nconst Form = styled.div`\n    p {\n        text-align:left;\n        padding:0;\n        font-weight:bold;\n    }\n    ${media.sp} {\n      width: 100%;\n      margin: 1em auto 0;\n   }\n`;\n\nconst Input = styled.input`\n    color: #8a8a8a;\n    display: block;\n    width: 90%;\n    height: 44px;\n    padding: 5px 5%;\n    border: 1px solid #ccc;\n    border-radius: 27px;\n    background-clip: padding-box;\n    background-color: #fff;\n    font-family: 'HelveticaNeue','Arial', sans-serif;\n    font-size: 105%;\n    letter-spacing: .8px;\n    margin: 1em 0 2.5em 0;\n\n`;\n\nconst SignInput = (props) => {\n return(\n<Form>\n<p>{props.label}</p>\n  <Input\n  placeholder={props.placeholder}\n//   label={props.label}\n  type={props.type}\n  name={props.name}\n  id={props.id}\n  className={props.class}\n  required={props.required}\n  autocomplete={props.complete}\n  onChange={props.onChange}\n  value={props.value}\n  />\n</Form>\n )\n}\n\nexport default SignInput;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import TextField from \"@material-ui/core/TextField\";\n\n// const TextInput = (props) => {\n//  return(\n\n//      <TextField \n//        fullWidth={props.fullWidth}\n//        label={props.label}\n//        margin={props.margin}\n//        multiline={props.multiline}\n//        required={props.required}\n//        rows={props.rows}\n//        value={props.value}\n//        type={props.type}\n//        onChange={props.onChange}\n//      />\n\n//  )\n// }\n\n// export default TextInput;","import React,{useState,useCallback} from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport {push} from 'connected-react-router';\n\nconst Button = styled.button`\n   background: #f5f5f5;\n    border-radius: 4px;\n    width: 6em;\n    padding: 1em 0.5em;\n    margin-left: 1.5em;\n`;\n\nconst SearchContents = styled.div`\nwidth:100%;\n   display: flex;\n   padding: 0.7em 0;\n   align-items:center;\n   input {\n    background: #f5f5f5;\nborder-radius: 4px;\n\nwidth: 100%;\nheight: 40px;\nline-height: 1.5;\n    font-size: 16px;\n    border: 1px solid #ccc;\n   }\n   \n`;\n\n\n\nconst Search = (props) => {\n   const dispatch = useDispatch();\n\n   const [keyword, setKeyword] = useState(\"\");\n\n   const inputKeyword = useCallback((event) => {\n      setKeyword(event.target.value)\n    }, [setKeyword]);\n\n   // ②searchKeyword\n   const searchKeyword = (event, keyword) => {\n      const url = '/products/?search=' + keyword;\n      dispatch(push(url));\n      // props.onClose(event,false);\n    }\n    \n return(\n   <SearchContents>\n        <input \n        type=\"search\" \n        id=\"site-search\" \n        name=\"search\"\n        aria-label=\"Search\" \n        value={keyword}\n        onChange={inputKeyword}\n        />\n\n<Button onClick={(event) => searchKeyword(event,keyword)}>Search</Button>\n   </SearchContents>\n\n )\n}\n\nexport default Search;","// import React from 'react';\n// import styled from 'styled-components';\n\n// const Contents = styled.div`\n//     display: flex;\n//     align-items:center;\n//     padding-right: 1.5em;\n\n//     i {\n//         color: red;\n//     }\n//     p {\n//         margin-left:0.5em;\n//         font-weight:bold;\n//     }\n// `;\n\n// const SignInput = (props) => {\n//  return(\n// <Contents>\n// {props.icon}\n//  <p>{props.text}</p>\n// </Contents>\n//  )\n// }\n\n// export default SignInput;\n\nimport React,{useState} from 'react';\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport {SidebarData} from '../common';\nimport {IconContext} from 'react-icons';\nimport styled from 'styled-components';\n// \n// import NavCategory from './NavCategory';\n// import {Link} from 'react-router-dom';\n\nconst media = {\n    sp: '@media(max-width: 650px)'\n}\n\nconst Navbar = styled.div`\n    height: 80;\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    cursor: pointer;\n\n    li {\n        cursor: pointer;\n    }\n    p{\n        margin-left: 1em;\n        ${media.sp} {\n       display: none !important;\n   }\n    }\n`;\n\nconst IconText = () => {\n    const [sidebar, setSidebar] = useState(false)\n\n    const showSidebar = () => setSidebar(!sidebar)\n return(\n  <>\n  <IconContext.Provider value={{color: '#383838'}}>\n   <Navbar>\n\n         <FaIcons.FaBars className=\"category-icon\" onClick={showSidebar} />\n         <p onClick={showSidebar}>カテゴリーから探す</p>\n\n   </Navbar>\n   <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n       <ul className='nav-menu-items' onClick={showSidebar}>\n           <li className='navbar-toggle'>\n           \n                   <AiIcons.AiOutlineClose className='menu-bars' />\n           \n           </li>\n\n           <SidebarData />\n           {/* {sidebarData.map((item, index) => {\n               return (\n                   <li key={index} className={item.cName}>\n                       <a href={item.path}>\n                         {item.icon}\n                         <span>{item.title}</span>\n                       </a>\n                   </li>\n               );\n           })} */}\n\n           \n       </ul>\n       {/* <div className=\"nav-back\" onClick={showSidebar} /> */}\n       {/* <NavCategory /> */}\n   </nav>\n   </IconContext.Provider>\n  </>\n )\n}\n\nexport default IconText;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n    background-color: rgb(234, 53, 45);\n    border-radius: 4px;\n    color: rgb(255, 255, 255);\n    display: block;\n    font-size: 14px;\n    padding: 8px 10px;\n    margin-left:1em;\n    transition: all ease-out .3s;\n\n    :hover {\n    background-color: rgb(129, 33, 28);\n    border-radius: 4px;\n    color: rgb(255, 255, 255);\n    display: block;\n    font-size: 14px;\n    padding: 8px 10px;\n    margin-left:1em;\n    transition: all ease-out .3s;\n    }\n`;\n\n\nconst AccountButton = (props) => {\n return(\n<a href={props.path}>\n<Button>\n  {props.text}\n</Button>\n</a>\n )\n}\n\nexport default AccountButton","// import React from 'react';\n// import styled from 'styled-components';\n\n// const FlexItem = styled.div`\n// text-align: left;\n// label{\n//     font-size:1em;\n//     margin: 1em 0;\n// }\n// `;\n\n// const Input = styled.input`\n//     color: #8a8a8a;\n//     display: block;\n//     width: 100%;\n//     height: 44px;\n//     padding: 5px 5%;\n//     border: 1px solid #ccc;\n//     border-radius: 27px;\n//     background-clip: padding-box;\n//     background-color: #fff;\n//     font-family: 'HelveticaNeue','Arial', sans-serif;\n//     font-size: 105%;\n//     letter-spacing: .8px;\n// `;\n\n// const TextInput = (props) => {\n//  return(\n//     <FlexItem>\n// <label className=\"product__label\">{props.label}</label>\n//   <Input\n//   placeholder={props.placeholder}\n//   type={props.type}\n//   name={props.name}\n//   id={props.id}\n//   className={props.class}\n//   required={props.required}\n//   autocomplete={props.complete}\n//   onChange={props.onChange}\n//   value={props.value}\n//   />\n//     </FlexItem>\n//  )\n// }\n\n// export default TextInput;\n\n\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst media = {\n  sp: '@media(max-width: 650px)'\n}\n\nconst Form = styled.div`\n    p {\n        text-align:left;\n        padding:0;\n        font-weight:bold;\n    }\n    ${media.sp} {\n      width: 100%;\n      margin: 1em auto 0;\n   }\n`;\n\nconst Input = styled.input`\n    color: #8a8a8a;\n    display: block;\n    width: 90%;\n    height: 44px;\n    padding: 5px 5%;\n    border: 1px solid #ccc;\n    border-radius: 27px;\n    background-clip: padding-box;\n    background-color: #fff;\n    font-size: 105%;\n    letter-spacing: .8px;\n    margin: 1em 0 2.5em 0;\n\n`;\n\nconst TextInput = (props) => {\n return(\n<Form>\n<p>{props.label}</p>\n  <Input\n  placeholder={props.placeholder}\n//   label={props.label}\n  type={props.type}\n  name={props.name}\n  id={props.id}\n  className={props.class}\n  required={props.required}\n  autocomplete={props.complete}\n  onChange={props.onChange}\n  value={props.value}\n  />\n</Form>\n )\n}\n\nexport default TextInput;","import React from 'react';\nimport styled from 'styled-components';\n\nconst media = {\n  sp: '@media(max-width: 650px)'\n}\n\nconst FlexItem = styled.div`\n\np{\n  text-align:left;\n        padding:0;\n        font-weight:bold;\n}\n`;\n\nconst Select = styled.select`\n    color: #8a8a8a;\n    display: block;\n    width: 100%;\n    height: 44px;\n    padding: 5px 5%;\n    border: 1px solid #ccc;\n    border-radius: 27px;\n    background-clip: padding-box;\n    background-color: #fff;\n    font-family: 'HelveticaNeue','Arial', sans-serif;\n    font-size: 105%;\n    letter-spacing: .8px;\n    margin: 1em 0 2.5em 0;\n    ${media.sp} {\n      width: 100%;\n      /* margin: 1em auto 0; */\n   }\n`;\n\n\nconst SelectBox = (props) => {\n  console.log(props)\n return(\n    <FlexItem>\n       <p className=\"product__label\">{props.label}</p>\n        <Select value={props.value} id={props.id} name={props.name} onChange={(event) => props.select(event.target.value)}>\n            {props.options.map((option) => (\n              <option key={option.id} value={option.id}>{option.name}</option>\n            ))}\n        </Select>\n   </FlexItem>\n )\n}\n\nexport default SelectBox;","import React from 'react';\nimport styled from 'styled-components';\nimport {useDispatch} from \"react-redux\";\nimport {push} from 'connected-react-router';\n\nconst media = {\n  sp: '@media(max-width: 650px)'\n}\n\nconst Items = styled.div`\nmargin: 1.5em;\ntext-align: center;\n    i {\n     position:absolute;\n     left: 0;\n  right: 0;\n  margin: auto;\n  top: 0.3em;\n\n    }\n    p {\n      padding-top: 0.5em;\n      width: 5em;\n      font-weight: bold;\n    }\n    ${media.sp} {\n      margin: 0.7em 0.8em;\n   }\n`;\n\nconst Icon = styled.div`\ncursor: pointer;\n   position: relative;\nfont-size: 3em;\npadding: 0;\nbackground-color: #ea352d;\nborder-radius: 50%;\npadding: 0.4em;\ncolor: #ffffff;\ntext-align: center;\ntransition: all ease-out .3s;\n      width: 1em;\n      height: 1em;\n:hover {\n  transition: all ease-out .3s;\n    background-color: #aa2e28;\n}\n${media.sp} {\n  font-size: 2.5em;\n  width: 1em;\n      height: 1em;\n   }\n`;\n\n\n\nconst CategoryChip = (props) => {\n  const dispatch = useDispatch();\n\n return(\n<Items onClick={() => dispatch(push(props.path))}>\n{/* <a href={props.path}> */}\n{/* <Chip onClick={() => dispatch(push(props.path))}> */}\n<Icon>\n<i>{props.icon}</i>\n</Icon>\n    <p>{props.name}</p>\n  {/* </a> */}\n</Items>\n )\n}\n\nexport default CategoryChip;","export default __webpack_public_path__ + \"static/media/no_image.1a2d0029.png\";","import React,{useState} from 'react';\nimport styled from 'styled-components';\nimport {ModalItem} from '../UIkit';\n\n    \n\nconst Container = styled.div`\n    display:flex;\n    justify-content: center;\n    align-items:center;\n    height: 100vh;\n`;\n\nconst Button = styled.div`\nmin-width: 100px;\npadding: 16px 32px;\nborder-radius: 4px;\nborder: none;\nbackground-color: #141414;\ncolor:#fff;\nfont-size:24px;\ncursor:pointer;\n`\n\n\n\nconst Modal = () => {\n    const [showModal, setShowModal] = useState(false)\n\n    const openModal = () => {\n        setShowModal(prev => !prev)\n    }\n\n return(\n     <Container>\n         <Button onClick={openModal}>I'm button</Button>\n         <ModalItem showModal={showModal} setShowModal={setShowModal} />\n     </Container>\n )\n}\n\nexport default Modal","import React,{useRef,useEffect,useCallback} from 'react';\nimport {useSpring, animated} from 'react-spring';\nimport styled from 'styled-components';\nimport {MdClose} from 'react-icons/md';\n\nconst Background = styled.div`\n width: 100%;\n height: 100%;\n background-color: rgba(0,0,0,0.8);\n position: fixed;\n display: flex;\n justify-content: center;\n align-items: center;\n top: 0;\n`\n\nconst ModalWrapper = styled.div`\n width: 800px;\n height: 500px;\n box-shadow: 0 5px 16px rgba(0,0,0,0.2);\n background-color: #fff;\n color: #000;\n display: grid;\n grid-template-columns: 1fr 1fr;\n position: relative;\n z-index: 10;\n border-radius: 10px;\n`\n\nconst ModalImg = styled.img`\n width: 100%;\n height: 100%;\n border-radius: 10px 0 0 10px;\n background: #000;\n`\n\nconst ModalContent = styled.div`\n display: flex;\n flex-direction: column;\n justify-content: center;\n align-items: center;\n line-height: 1.8;\n color: #141414;\n\n  p{\n      margin-bottom: 1rem;\n  }\n\n  button {\n      padding:10px 24px;\n      background-color: #141414;\n      color: #fff;\n      border: none;\n  }\n`\n\nconst CloseModalButton = styled(MdClose)`\n cursor: pointer;\n position: absolute;\n top:20px;\n right: 20px;\n width: 32px;\n padding: 0;\n z-index: 10;\n`\n\nconst ModalItem = ({ showModal, setShowModal}) => {\n\n    const modalRef = useRef()\n\n    const animation = useSpring({\n        config: {\n            duration: 250\n        },\n        opacity: showModal ? 1:0,\n        transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n    })\n\n    const closeModal = e => {\n        if(modalRef.current === e.target) {\n            setShowModal(false)\n        }\n    }\n\n    const keyPress = useCallback (e => {\n      if(e.key === 'Escape' && showModal) {\n          setShowModal(false)\n      }\n    }, [setShowModal, showModal])\n\n    useEffect(() => {\n        document.addEventListener('keydown', keyPress);\n        return () => document.removeEventListener('keydown', keyPress);\n    },\n     [keyPress]\n    );\n    \n return(\n   <>\n     {showModal ? (\n         <Background ref={modalRef} onClick={closeModal}>\n             <animated.div style={animation}>\n             <ModalWrapper showModal={showModal}>\n               <ModalImg src=\"https://placehold.jp/600x600.png\" alt=\"カメラ\" />\n               <ModalContent>\n                   <h1>Are you ready?</h1>\n                   <p>text</p>\n                   <button>Join Now</button>\n               </ModalContent>\n               <CloseModalButton aria-label='Close Modal' onClick={() => setShowModal(prev => !prev)} />\n             </ModalWrapper>\n             </animated.div>\n         </Background>\n     ) : null}\n   </>\n )\n}\n\nexport default ModalItem;","import firebase from 'firebase/app';\n\n// 機能のimport\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\nimport 'firebase/functions'\n\n// config の import\nimport {firebaseConfig} from './config';\n\n// ↓ importしたconfig を使って firebase を初期化し、サービスを初めるようにする\nfirebase.initializeApp(firebaseConfig);\n\n// メソッドを定数にして省略する\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const functions = firebase.functions();\n\n// データの作成日時を作る メソッド\nexport const FirebaseTimestamp = firebase.firestore.Timestamp;","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyAhfVp6wPUPV9un9ZPPBszhggy7VjrfY3w\",\n    authDomain: \"ec-site-903fe.firebaseapp.com\",\n    projectId: \"ec-site-903fe\",\n    storageBucket: \"ec-site-903fe.appspot.com\",\n    messagingSenderId: \"571120215965\",\n    appId: \"1:571120215965:web:f83d4a92bbefcce16d3174\",\n    measurementId: \"G-D2Z318HNSR\"\n  };","import {fetchOrdersHistoryAction,fetchProductsInLikeAction,fetchProductsInCartAction,signInAction,signOutAction} from './actions';\nimport {push} from 'connected-react-router';\nimport {auth, db, FirebaseTimestamp} from '../../firebase/index'\n\nconst usersRef = db.collection('users')\n\n    // -------------------------------------\n    //  fetchOrdersHistory 関数\n    // -------------------------------------\n//   export const fetchOrdersHistory = () => {\n//       return async (dispatch, getState) => {\n//           const uid = getState().users.uid;\n//           const list = [];\n\n//           db.collection('users').doc(uid)\n//           .collection('orders')\n//           .orderBy('updated_at','desc')\n//           .get()\n//           .then((snapshots) => {\n//               snapshots.forEach( snapshot => {\n//              const data = snapshot.data()\n//               list.push(data)\n//           })\n//           // fetchOrdersHistoryAction は Action で作り・使う\n//           dispatch(fetchOrdersHistoryAction(list))\n//       })\n//   }\n// }\n\nexport const fetchOrdersHistory = () => {\n    return async (dispatch, getState) => {\n        const uid = getState().users.uid;\n        const list = []\n\n        db.collection('users').doc(uid)\n            .collection('orders').get()\n            // .orderBy('updated_at', \"desc\")\n            .then(snapshots => {\n                snapshots.forEach(snapshot => {\n                    const data = snapshot.data();\n                    list.push(data)\n                    console.log(data)\n                });\n                dispatch(fetchOrdersHistoryAction(list))\n                \n            })\n    }\n}\n\n    // -------------------------------------\n    //  getUserInfomations 関数\n    // -------------------------------------\n// userEdit関数\n\n\n    // -------------------------------------\n    //  addProductToCart 関数\n    // ProductEdit(AddProduct関数) の 関数として使う\n    // -------------------------------------\n    export const addProductToCart = (addedProduct) => {\n        return async (dispatch,getState) => {\n            const uid = getState().users.uid;\n            // 新しくuserコレクションにさぶコレクションとしてCartを作ることができる\n            const cartRef = db.collection('users').doc(uid).collection('cart').doc();\n            // 今回追加するデータの中にサブコレクションのidをフィールドとして持たせることができる。\n            addedProduct['cartId'] = cartRef.id;\n            await cartRef.set(addedProduct);\n            // 本来ならば、Cartページに移動したい\n            dispatch(push('/cart'))\n        }\n    };\n\n        // -------------------------------------\n    //  addLikeToContents 関数\n    // ProductEdit(AddProduct関数) の 関数として使う\n    // -------------------------------------\n    export const addProductToLike = (addedProduct) => {\n        return async (dispatch,getState) => {\n            const uid = getState().users.uid;\n            // 新しくuserコレクションにさぶコレクションとしてCartを作ることができる\n            const likeRef = usersRef.doc(uid).collection('like').doc();\n            // 今回追加するデータの中にサブコレクションのidをフィールドとして持たせることができる。\n            addedProduct['likeId'] = likeRef.id;\n            await likeRef.set(addedProduct);\n            // 本来ならば、Cartページに移動したい\n            dispatch(push('/user/like'))\n        }\n    };\n\n    // -------------------------------------\n    // fetchProductsInCart 関数\n    // IconMenu(unsubscribe関数) の 関数として使う\n    // -------------------------------------\nexport const fetchProductsInCart = (products) => {\n    return async (dispatch) => {\n       dispatch(fetchProductsInCartAction(products))\n    }\n   };\n\n    // // ユーザーのLike情報のActionを呼び出すのみ\nexport const fetchProductsInLike = (products) => {\n    return async (dispatch) => {\n        dispatch(fetchProductsInLikeAction(products))\n    }\n  }\n\n\n// 認証リッスン関数 Authで認証\nexport const listenAuthState = () => {\n    return async (dispatch) => {\n        return auth.onAuthStateChanged(user => {\n            if(user) {\n               //認証されててる データーベースから取得した情報をStoreのStateとして持たせる 関数で切り出してもいい\n               const uid = user.uid\n\n               db.collection('users').doc(uid).get()\n               .then(snapshot => {\n                   const data = snapshot.data()\n\n                   dispatch(signInAction({\n                       customer_id: (data.customer_id) ? data.customer_id : \"\",\n                       payment_method_id: (data.payment_method_id) ? data.payment_method_id : \"\",\n                       isSignedin: true,\n                       role: data.role,\n                       uid: uid,\n                       username: data.username,\n                       email: data.email,\n                       prefecture: data.prefecture,\n                       city: data.city,\n                       other: data.other,\n                       description: data.description,\n                       post: data.post,\n                    //    images: data.images,\n                       \n                   }))\n\n                //    dispatch(push('/'))\n               })\n\n            } else {\n                // 認証されてない\n                dispatch(push('/signin'))\n            }\n        })\n\n    }\n}\n\n// userEdit関数\nexport const userEdit = ({id,username, email, prefecture, city, other, post, description,images}) => {\n    return async (dispatch) => {\n      const timestamp = FirebaseTimestamp.now()\n\n      if (username === \"\" || email === \"\" || prefecture === \"\" || city === \"\" || other === \"\" || post === \"\" || description === \"\") {\n        alert(\"必須項目が見入力です\")\n        return false\n    }\n\n      const data = {\n        created_at: timestamp,\n        email: email,\n        role: \"customer\",\n        // uid: uid,\n        updated_at:  timestamp,\n        username: username,\n        prefecture: prefecture,\n        city: city,\n        other: other,\n        post: post,\n        description: description,\n        images: images\n      }\n      \n\n      // 新規商品の時に処理を実行 id がない時\n//   if (id === \"\") {\n//         //   新規データを作るけれど、自動idを採番したい\n//         const ref = usersRef.doc();\n//         //   自動idを取得\n//         id = ref.id\n//         //   データの中に今作成したidを入れる\n//           data.id = id\n//         //   新規作成の時にtimestampを入れたい\n//           data.created_at = timestamp\n//   }\n\n    //   Firebaseにデータをsetしたらdispatchでhomeに戻る、失敗したら 例外処理 をする {marge: true} で更新する部分の身を更新させる\n      // return productsRef.doc(id).set(data, {marge: true})\n      // 第2引数 .set(data) は商品を完全に上書きしてしまう 更新した部分だけを更新する方法\n      return usersRef.doc(id).set(data, {merge: true})\n      .then(()=>{\n          dispatch(push('/user'))\n      }).catch((error) => {\n          throw new Error(error)\n      })\n    }\n}\n// validation thuck型\n// export const userEdit = (username, email, password, confirmPassword) => {\n//     return async (dispatch) => {\n//      if (username === \"\" || email === \"\" ) {\n//          alert(\"必須項目が見入力です\")\n//          return false\n//      }\n\n//     //  auth の設定\n//     return auth.createUserWithEmailAndPassword(email,password)\n//       .then(result => {\n//           const user = result.user\n          \n//         //   ユーザーが存在していたら\n//         //   if(user) {\n//              const uid = user.uid\n//              const timestamp = FirebaseTimestamp.now()\n\n//              const userInitialData = {\n//                  created_at: timestamp,\n//                  email: email,\n//                  role: \"customer\",\n//                  uid: uid,\n//                  updated_at:  timestamp,\n//                  username: username\n//              }\n//              db.collection('users').doc(uid).set(userInitialData)\n//           .then(() => {\n//               dispatch(push('/user'))\n//           })\n//         //   }\n          \n//       })\n//     }\n// }\n\n\n\n\n\n// signUp関数\n// validation thuck型\nexport const signUp = ({username, email, password, confirmPassword}) => {\n    return async (dispatch) => {\n     if (username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\") {\n         alert(\"必須項目が見入力です\")\n         return false\n     }\n\n     if (password !== confirmPassword) {\n         alert(\"パスワードが一致しません\")\n         return false\n     }\n\n    //  auth の設定\n    return auth.createUserWithEmailAndPassword(email,password)\n      .then(result => {\n          const user = result.user\n          \n        //   ユーザーが存在していたら\n          if(user) {\n             const uid = user.uid\n             const timestamp = FirebaseTimestamp.now()\n\n             const userInitialData = {\n                 created_at: timestamp,\n                 email: email,\n                 role: \"customer\",\n                 uid: uid,\n                 updated_at:  timestamp,\n                 username: username\n             }\n             db.collection('users').doc(uid).set(userInitialData)\n          .then(() => {\n              dispatch(push('/admin'))\n          })\n          }\n          \n      })\n    }\n}\n\n// Firebase での signOutを行う\nexport const signOut = () => {\n    return async (dispatch) => {\n        auth.signOut()\n        .then(()=> {\n            // ReduxのStoreのログイン情報を変更\n            dispatch(signOutAction());\n            // signInに移動\n            dispatch(push('/signin'))\n        })\n    }\n}\n\nexport const ResetPassword = (email) => {\n    return async (dispatch) => {\n        if(email === \"\") {\n            alert(\"必須項目が見入力です\")\n            return false\n        } else {\n            auth.sendPasswordResetEmail(email)\n            .then(() => {\n                alert('メールを送りました')\n                dispatch(push('/signin'))\n            }).catch(() => {\n                alert('失敗しました')\n            })\n        }\n    }\n}\n\n//signIn 関数\nexport const signIn = ({email, password}) => {\n    return async (dispatch) => {\n       //  Validation\n        if (email === \"\" || password === \"\") {\n           alert(\"必須項目が見入力です\")\n           return false\n        }\n   \n       //  signInWithEmailAndPassword で ログイン処理を設定する\n        return auth.signInWithEmailAndPassword(email,password)\n        .then(result => {\n           //  ユーザー情報\n         const user = result.user;\n   \n       //   もしもユーザーが存在したら\n         if(user) {\n             const uid = user.uid\n             db.collection('users').doc(uid).get()\n             .then(snapshot => {\n                 const data = snapshot.data()\n   \n               //   siginInaction を呼び出して以下の情報に変更する\n                 dispatch(signInAction({\n                    customer_id: (data.customer_id) ? data.customer_id : \"\",\n                    payment_method_id: (data.payment_method_id) ? data.payment_method_id : \"\",\n                     isSignedin: true,\n                     role: data.role,\n                     uid: uid,\n                     email: data.email,\n                     post: data.post,\n                     username: data.username,\n                     prefecture: data.prefecture,\n                     city: data.city,\n                     other: data.other,\n                     description: data.description,\n                     images: data.images,\n                 }))\n   \n                 //認証後に移動\n                 dispatch(push('/user'))\n             })\n         }\n        })\n    }\n   }","import React from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { signOutAction } from '../../reducks/users/actions';\nimport {signOut} from \"../../reducks/users/operations\";\n\nconst media = {\n    sp: '@media(max-width: 650px)'\n  }\n\nconst Button = styled.button`\n    width: 100%;\n        background-color: #ea352d;\n        padding: 1em;\n        font-size: 1em;\n        color:#fff;\n        transition: all ease-out .3s;\n\n        ${media.sp} {\n    margin: 0.8em auto 0;\n   }\n        \n        :hover {\n            transition: all ease-out .3s;\n            background-color: rgb(129, 33, 28);\n        }\n`;\n\n\nconst LogoutButton = (props) => {\n    const dispatch = useDispatch();\n return(\n<Button onClick={() => dispatch(signOut())}>\n    ログアウトする\n</Button> \n )\n}\n\nexport default LogoutButton;","import React from 'react';\nimport styled from 'styled-components';\n\nconst media = {\n    sp: '@media(max-width: 650px)'\n  }\n\nconst Area = styled.textarea`\n    color: #8a8a8a;\n    width: 100%;\n    height: 10em;\n    padding: 1em;\n    border: 1px solid #ccc;\n    border-radius: 15px;\n    background-clip: padding-box;\n    background-color: #fff;\n    font-size: 105%;\n    letter-spacing: .8px;\n    margin: 1em 0 0 0;\n    ${media.sp} {\n      width: 100%;\n      padding: 0;\n   }\n`;\n\nconst Form = styled.div`\n  p{\n    text-align:left;\n    padding:0;\n    font-weight:bold;\n}\n`;\n\nconst TextArea = (props) => {\n return(\n<Form>\n<p className=\"product__label\">{props.label}</p>\n    <Area id=\"textarea\" autocomplete={\"off\"} name=\"textarea\" cols=\"40\" rows=\"4\" maxlength=\"20\" onChange={props.onChange} value={props.value} label={props.label} />\n</Form>\n )\n}\n\nexport default TextArea;","import React from 'react';\n// import * as AiIcons from \"react-icons/ai\";\nimport {IconContext} from 'react-icons';\nimport styled from 'styled-components';\n\nconst Body = styled.div`\n width:100%;\n margin: 0 auto 3em auto ;\n /* background-color: red; */\n display:flex;\n justify-content: center;\n border-radius: 0.5em;\n align-items:center;\n p {\n     padding:0.3em 0 0 0.5em;\n     color: #fff;\n }\n`;\n\nconst Snackbars = (props) => {\n\n return(\n    <IconContext.Provider value={{color: '#fff'}}>\n   <Body className={props.color}>\n\n      {props.icon}\n       {/* <AiIcons.AiFillNotification /> */}\n       <p>{props.text}</p>\n  \n   </Body>\n   </IconContext.Provider>\n )\n}\n\nexport default Snackbars;","import React,{useState} from 'react';\n// import JsonDate from \"../MOCK_DATA.json\";\nimport styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nconst App = styled.div`\n text-align:center;\n`;\n\nconst User = styled.div`\nmargin: 2em auto;\n background-color: #ddd;\n width: 100%;\n max-width: 600px;\n border-radius: 0.5em;\n padding: 1em;\n border: solid 2px #bcbcbc;\n`;\n\n    // .slice で ファイルをスライスする\n    const Pagenation = () => {\n    const [users, setUsers] = useState();\n    const [pageNumber, setPageNumber] = useState(0);\n\n    const usersPerPage = 10;\n    // const pagesVisited = pageNumber * usersPerPage;\n\n    // const displayUsers = users.slice(pagesVisited, pagesVisited + usersPerPage)\n    // .map((user) => {\n    //     return(\n    //     <User>\n    //       <h3>{user.firstName}</h3>\n    //       <h3>{user.lastName}</h3>\n    //       <h3>{user.email}</h3>\n    //     </User>\n    //     );\n    // });\n\n    const pageCount = Math.ceil(users.length / usersPerPage);\n    const changePage = ({selected}) => {\n     setPageNumber(selected)\n    };\n\n return(\n   <App>\n       {/* {displayUsers} */}\n       <ReactPaginate \n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"}\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousClassName={\"previousBttn\"}\n        nextLinkClassName={\"nextBttn\"}\n        disableInitialCallback={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"}\n       />\n   </App>\n );\n}\n\nexport default Pagenation;","import React,{ useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n\nconst Button = styled.button`\n text-align:center;\n background-color: green;\n`;\n\nconst Contents = styled.div`\n display:flex;\n justify-content:space-around;\n`;\n\nconst Page = ({showPerPage,onPaginationChange,total}) => {\n    const [counter, setCounter] = useState(1);\n    // console.log(showPerPage);\n    \n\n    useEffect(() => {\n        // console.log(\"counter changed...\");\n        const value = showPerPage * counter;\n        // console.log(\"start value:\",value - showPerPage);\n        // console.log(\"end value:\", value)\n        onPaginationChange(value - showPerPage, value)\n    }, [counter])\n\n    const onButtonClick = (type) => {\n        // code\n        if(type === \"prev\") {\n         if(counter === 1) {\n             setCounter(1)\n         } else {\n             setCounter(counter -1);\n         }\n        }else if (type === \"next\") {\n            // setCounter(counter +1);\n            if(Math.ceil(total / showPerPage) === counter){\n                setCounter(counter);\n        } else {\n            setCounter(counter + 1);\n        }\n        \n};\n\n    };\n\n return(\n<Contents>\n{/* <Button\n      onClick={()=>setCounter(counter +1)}\n     >Next</Button> */}\n     <Button\n      onClick={()=>onButtonClick('prev')}\n     >Pre</Button>\n     {/* <Button\n      onClick={()=>setCounter(counter +1)}\n     >Next</Button> */}\n     <Button\n      onClick={()=>onButtonClick('next')}\n     >Next</Button>\n</Contents>    \n )\n}\n\nexport default Page;","import React,{ useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport * as MdIcons from \"react-icons/md\";\nimport * as GrIcons from \"react-icons/gr\";\n\nconst Button = styled.button`\n text-align:center;\n background-color: green;\n`;\n\nconst Contents = styled.div`\n margin-top:2em;\n display:flex;\n justify-content:space-around;\n align-items:center;\n`;\n\nconst Flex = styled.div`\n display:flex;\n justify-content:center;\n align-items: center;\n /* li {\n     cursor: pointer;\n     list-style: none;\n     padding:0.1em 0.5em;\n     border: solid 2px #ea352d;\n     color: #ea352d;\n     border-radius: 0.3em;\n     margin: 0 0.5em;\n     transition: all ease-out .3s;\n     :hover {\n         background-color: #ea352d;;\n         color: #fff;\n         transition: all ease-out .3s;\n     } */\n\n li:nth-child(n+2):nth-last-child(n+2) {\n  background: #ea352d;\n  color: #fff;\n  width: 2em;\n  height: 2em;\n  border-radius: 50%;\n  text-align: center;\n  display: inline-block;\n  margin: 0.3em;\n  padding: 0.5em;\n  transition: all ease-out .3s;\n\n  /* :hover{\n    background-color: #ea352d;\n    transition: all ease-out .3s;\n  } */\n\n}\n \n`;\n\nconst Page2 = ({showPerPage,onPaginationChange,total}) => {\n    const [counter, setCounter] = useState(1);\n    const [numberOfButtons, setNumberOfButtons] = useState(Math.ceil(total / showPerPage))\n    // console.log(showPerPage);\n    \n\n    useEffect(() => {\n        // console.log(\"counter changed...\");\n        const value = showPerPage * counter;\n        // console.log(\"start value:\",value - showPerPage);\n        // console.log(\"end value:\", value)\n        onPaginationChange(value - showPerPage, value)\n    }, [counter])\n\n    const onButtonClick = (type) => {\n        // code\n        if(type === \"prev\") {\n         if(counter === 1) {\n             setCounter(1)\n         } else {\n             setCounter(counter -1);\n         }\n        }else if (type === \"next\") {\n            setCounter(counter +1);\n            if(Math.ceil(total / showPerPage) === counter){\n                setCounter(counter);\n        } else {\n            setCounter(counter + 1);\n        }\n        \n};\n    };\n return(\n<Contents>\n{/* <Button\n      onClick={()=>setCounter(counter +1)}\n     >Next</Button> */}\n\n     <Flex>\n         <li onClick={()=>onButtonClick('prev')}><GrIcons.GrFormPrevious className=\"Icon-size\" /></li>\n         {\n       new Array(numberOfButtons).fill(\"\").map((el,index) => (\n        <li><a onClick={()=>setCounter(index+1)}>\n            {index + 1}\n            </a></li>\n       ))\n   }\n         <li onClick={()=>onButtonClick('next')}><MdIcons.MdNavigateNext className=\"Icon-size\" /></li>\n         \n     </Flex>\n     {/* <Button\n      onClick={()=>onButtonClick('prev')}\n     >Pre</Button> */}\n     {/* <Button\n      onClick={()=>setCounter(counter +1)}\n     >Next</Button> */}\n     {/* <Button\n    //   onClick={()=>onButtonClick('next')}\n     >Next</Button> */}\n</Contents>    \n )\n}\n\nexport default Page2;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Items = styled.div`\n    display:flex;\n    justify-content: space-between;\n`;\n\nconst MainText = styled.p`\n    font-weight:bold;\n    padding:0.2em;\n`;\n\nconst Number = styled.p`\n    padding-left:0.5em;\n    padding:0.2em;\n`;\n\n\nconst TextDetail = (props) => {\n\n return(\n   <Items>\n    <MainText>\n        {props.label}\n    </MainText>\n    <Number>\n        {props.value}\n    </Number>\n   </Items>\n )\n}\n\nexport default TextDetail;","import React from 'react';\nimport styled from 'styled-components';\n\nconst PreviewImg  = styled.img`\n  width: 300px;\n  height: 300px;\n  border-radius: 1em;\n  object-fit: cover; /* この一行を追加するだけ！ */\n`;\n\nconst ImagePreview = (props) => {\n  \n return(\n  <div onClick={() => props.delete(props.id)}>\n      <PreviewImg src={props.path} alt=\"商品画像\"/>\n  </div>\n )\n}\n\nexport default ImagePreview;","import React, {useState,useCallback} from 'react'\nimport {storage} from '../../firebase';\nimport {useDropzone} from 'react-dropzone'\nimport ImagePreview from '../Products/ImagePreview';\nimport styled from 'styled-components';\nimport * as BiIcons from \"react-icons/bi\";\n\nconst Images = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    img {\n        margin: 0 0.6em 1em 0.6em;\n        width: 250px;\n        height: 250px;\n        object-fit: cover; /* この一行を追加するだけ！ */\n        border-radius: 1em;\n    }\n`;\n\nconst ImageArea = styled.div`\n    background-color: #f5f5f5;\n    border-radius: 1em;\n    padding: 3em 0;\n    p {\n        padding: 0;\n    }\n`;\n\nconst ImageUpload = (props) => { \n     // -----------------\n    // deleteImage\n    // -----------------\n    // 引数 として 画像id をもつ\n    const deleteImage = useCallback(async (id) => {\n        const ret = window.confirm('この画像を削除しますか？');\n        // false にしたら処理は行わない\n        if (!ret) {\n            return false\n        // それ以外ならば、.filter() を使用して、選択した 画像id 以外を抽出する newImage定数 を作成\n        } else {\n            const newImages = props.images.filter(image => image.id !== id)\n            // props.setImage に newImage は再配列にする\n            props.setImages(newImages);\n            // storageCloudのimagesから画像idを削除する\n            return storage.ref('images').child(id).delete()\n        }\n    }, [props.images])\n\n\n    // 画像アップロード機能の作成\n    const uploadImage = useCallback((event) => {\n        // dispatch(showLoadingAction(\"uploading...\"))\n        const file = event.target.files;\n        let blob = new Blob(file, { type: \"image/jpeg\" });\n\n        // Generate random 16 digits strings\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n        const N=16;\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\n\n        const uploadRef = storage.ref('images').child(fileName);\n        const uploadTask = uploadRef.put(blob);\n\n        uploadTask.then(() => {\n            // Handle successful uploads on complete\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                const newImage = {id: fileName, path: downloadURL};\n                props.setImages((prevState => [...prevState, newImage]))\n                // dispatch(hideLoadingAction())\n            });\n        })\n        // .catch(() => {\n        //     dispatch(hideLoadingAction())\n        // });\n    }, [props.setImages])\n\n\n\n    //    seyFilesに初期値空白のオブジェクトを渡す\nconst [files, setFiles] = useState([]);\n\nconst {getRootProps, getInputProps} = useDropzone({\n    const: \"image/*\",\n    onDrop: (acceptedFiles) => {\n        setFiles(\n            acceptedFiles.map((file) => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            }))\n        )\n    }\n})\n\nconst preImage = files.map((file) => (\n    <div key={file.name}>\n        <div>\n            <img src={file.preview} style={{width: '200px'}} alt=\"preview\"/>\n        </div>\n    </div>\n))\n\n\n    return(\n        <div>\n\n<Images>\n         {/* props で渡ってきた images が 1枚以上あれば <ImagePreview /> を .map として回す  (props で pathをもつ)*/}\n         {props.images.length > 0 && (\n                 props.images.map(image => <ImagePreview delete={deleteImage} id={image.id} path={image.path} key={image.id} />)\n             )}\n      </Images>\n\n        <ImageArea {...getRootProps()}>\n            <input {...getInputProps()} onChange={(e) => uploadImage(e)}/>\n            <BiIcons.BiImageAdd className=\"UploadIcon\" />\n            <p>ここにファイルをドロップしてアップロード</p>\n        </ImageArea>\n        {preImage}\n        {/* <ImagePreview delete={deleteImage} id={image.id} path={image.path} key={image.id} /> */}\n    </div>\n    )\n   \n}\n\nexport default ImageUpload;\n\n","import React, {useState,useCallback} from 'react'\nimport {ProductInput,PrimaryButton} from '../../components/UIkit';\nimport * as CgIcons from \"react-icons/cg\";\nimport * as GrIcons from \"react-icons/gr\";\nimport styled from 'styled-components';\n\nconst Item = styled.div`\ndisplay:flex;\nalign-items:center;\njustify-content: center;\n`;\n\nconst Button = styled.button`\nmargin: 0 auto;\npadding:1em;\n`;\n\nconst Center = styled.div`\ntext-align:center;\n`;\n\nconst ProductOther = (props) => { \n    const [inputFields, setInputFields] = useState([\n        { firstName: '',lastName: ''},\n    ]);\n    const [firstName, setFirstName] = useState(0);\n    const [lastName, setLastName] = useState(0);\n\n    const inputFirstName = useCallback((event) => {\n        setFirstName(event.target.value)\n    }, [setFirstName]);\n\n    const inputLastName = useCallback((event) => {\n        setLastName(event.target.value)\n    }, [setLastName]);\n\n    // エラー関数処理\n    const handleSubmit = (e) => {\n        // console.log に入力された値を出力する\n        e.preventDefault(); \n        console.log(\"InputFields\", inputFields);\n    };\n\n    const handleChangeInput = (index,event) => {\n       console.log(index,event.target.name);\n    //    入力フィールドの追加\n    const values = [...inputFields];\n    values[index][event.target.name] = event.target.value;\n    setInputFields(values);\n    }\n\n    // index を追加する関数\n    const handleAddFields = () => {\n        // 取得したい フォールド\n        setInputFields([...inputFields, { firstName: '', lastName: '' }])\n    }\n\n        // index を削除する関数\n    const handleRemoveFields = (index) => {\n        const values = [...inputFields]\n        values.splice(index,1);\n        setInputFields(values);\n    }\n\n    return(\n    <div>\n        {/* 送信の処理 onSubmit onClick で呼び出せる */}\n        <form onSubmit={handleSubmit}>\n            { inputFields.map((inputField, index) => (\n                <Item key={index}>\n                    {/* <input type=\"text\"/> */}\n                    <ProductInput\n                    label={\"自由項目\"}\n                    placeholder={\"入力してください\"}\n                    type={\"text\"}\n                    required={true}\n                    name={\"firstName\"}\n                    id={\"firstName\"}\n                    className={\"firstName\"}\n                    autocomplete={\"off\"}\n                    value={inputField.firstName,firstName}\n                    onChange={event => handleChangeInput(index,event),inputFirstName}\n                    />\n                    \n                    <ProductInput\n                    label={\"個数\"}\n                    placeholder={\"入力してください\"}\n                    type={\"text\"}\n                    required={true}\n                    name={\"lastName\"}\n                    id={\"lastName\"}\n                    className={\"lastName\"}\n                    autocomplete={\"off\"}\n                    value={inputField.lastName,lastName}\n                    onChange={event => handleChangeInput(index,event),inputLastName}\n                    />\n\n                    {/* <ProductInput\n                    label={\"LastName\"}\n                    placeholder={\"LastName\"}\n                    type={\"text\"}\n                    required={true}\n                    name={\"LastName\"}\n                    id={\"LastName\"}\n                    className={\"LastName\"}\n                    autocomplete={\"off\"}\n                    value={inputField.lastName}\n                    onChange={event => handleChangeInput(index,event)}\n                    /> */}\n                    {/* index 追加関数作成 onClick={() => handleAddFields()} */}\n                    <CgIcons.CgRemove className=\"InputIcon\" onClick={(index) => handleRemoveFields()}/>\n                    {/* index 追加関数作成 onClick={() => handleAddFields()} */}\n                    <GrIcons.GrAddCircle className=\"InputIcon\" onClick={() => handleAddFields()} />\n                </Item>\n            )) }\n        </form>\n      <Center>\n      <Button onClick={handleSubmit}>追加する</Button>\n      </Center>\n    </div>\n    )\n   \n}\n\nexport default ProductOther;\n\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FlexItem = styled.div`\nmargin: 1em 0;\n\nlabel{\n    font-weight:bold;\n    margin: 1em 0;\n    font-size:1em;\n    width: 6.5em;\n}\n`;\n\nconst Input = styled.input`\n    color: #8a8a8a;\n    display: block;\n    width: 25em;\n    /* max-width: 30em; */\n    height: 44px;\n    padding: 0.3em 1.5em;\n    border: 1px solid #ccc;\n    border-radius: 27px;\n    background-clip: padding-box;\n    background-color: #fff;\n    font-family: 'HelveticaNeue','Arial', sans-serif;\n    font-size: 105%;\n    letter-spacing: .8px;\n    margin: 0 1em 0 0 ;\n`;\n\nconst ProductInput = (props) => {\n return(\n    <FlexItem>\n<label className=\"product__label\">{props.label}</label>\n  <Input\n  placeholder={props.placeholder}\n  type={props.type}\n  name={props.name}\n  id={props.id}\n  className={props.class}\n  required={props.required}\n  autocomplete={props.complete}\n  onChange={props.onChange}\n  value={props.value}\n  />\n    </FlexItem>\n )\n}\n\nexport default ProductInput;","import React from 'react';\nimport styled from 'styled-components';\n\nconst PreviewImg  = styled.img`\n  width: 300px;\n  height: 300px;\n  border-radius: 1em;\n  object-fit: cover; /* この一行を追加するだけ！ */\n`;\n\nconst ImagePre = (props) => {\n  \n return(\n  <div>\n  <PreviewImg onClick={() => props.delete(props.id)} src={props.path} alt=\"商品画像\"/>\n</div>\n )\n}\n\nexport default ImagePre;","import React, {useState,useCallback} from 'react';\nimport {storage} from '../../firebase';\nimport * as RiIcons from \"react-icons/ri\";\nimport ImagePre from '../Products/ImagePre';\nimport styled,{css} from 'styled-components';\n\nconst Images = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    img {\n        margin: 0 0.6em 1em 0.6em;\n    }\n`;\n\nconst TextArea = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    transition: all ease-out .3s;\n    :hover {\n        color: #ea352d;\n        transition: all ease-out .3s;\n    }\n    p {\n        padding-right: 0.8em;\n    }\n`;\n\nconst DropBox = styled.div`\n input {\n     position:absolute;\n     height: 1px;\n     width: 1px;\n     overflow: hidden;\n     clip: rect(1px, 1px, 1px, 1px);\n     opacity: 0;\n }\n label{\n     display: flex;\n    width: 300px;\n height: 200px;\n border: #ccc 2px dotted;\n margin: 20px;\n align-items: center;\n justify-content: center;\n cursor: pointer;\n ${({dragEnter}) => dragEnter && css`\n border-color: #666;\n `}\n }\n`;\n\nconst ImageUp = (props) => {\n    \n    // -----------------\n    // uploadImage\n    // -----------------\n    const [dragEnter, setDragEnter] = useState(false);\n\n    // const handleFile = (e) => {\n    //     console.log(e.target.files);\n    // }\n\n    const handleDragEnter = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        setDragEnter(true);\n    }\n\n    const handleDragOver = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        setDragEnter(true);\n    }\n\n    const handleDragLeave = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        setDragEnter(false);\n    }\n\n    // const handleDrop = (e) => {\n    //     e.stopPropagation();\n    //     e.preventDefault();\n    //     console.log(e.dataTransfer.files);\n    //     const dropFile = e.dataTransfer.dropFiles;\n    //     let blob = new Blob(file, { type: \"image/jpeg\" });\n\n    //      // Generate random 16 digits strings\n    //      const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    //      const N=16;\n    //      const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\n \n    //      const uploadRef = storage.ref('images').child(fileName);\n    //      const uploadTask = uploadRef.put(blob);\n\n    //      uploadTask.then(() => {\n    //         // Handle successful uploads on complete\n    //         uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n    //             const newImage = {id: fileName, path: downloadURL};\n    //             props.setImages((prevState => [...prevState, newImage]))\n    //             // dispatch(hideLoadingAction())\n    //         });\n    //     })\n    //     // e.dataTransfer.files;\n    // }\n\n    const handleDrop = useCallback((e) => {\n        // dispatch(showLoadingAction(\"uploading...\"))\n        const file = e.target.files;\n        let blob = new Blob(file, { type: \"image/jpeg\" });\n\n        // Generate random 16 digits strings\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n        const N=16;\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\n\n        const uploadRef = storage.ref('images').child(fileName);\n        const uploadTask = uploadRef.put(blob);\n\n        uploadTask.then(() => {\n            // Handle successful uploads on complete\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                const newImage = {id: fileName, path: downloadURL};\n                props.setImages((prevState => [...prevState, newImage]))\n                // dispatch(hideLoadingAction())\n            });\n        })\n        // .catch(() => {\n        //     dispatch(hideLoadingAction())\n        // });\n    }, [props.setImages])\n\n\n\n\n    // 画像アップロード機能の作成\n    const uploadImage = useCallback((e) => {\n        // dispatch(showLoadingAction(\"uploading...\"))\n        const file = e.target.files;\n        let blob = new Blob(file, { type: \"image/jpeg\" });\n\n        // Generate random 16 digits strings\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n        const N=16;\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\n\n        const uploadRef = storage.ref('images').child(fileName);\n        const uploadTask = uploadRef.put(blob);\n\n        uploadTask.then(() => {\n            // Handle successful uploads on complete\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                const newImage = {id: fileName, path: downloadURL};\n                props.setImages((prevState => [...prevState, newImage]))\n                // dispatch(hideLoadingAction())\n            });\n        })\n        // .catch(() => {\n        //     dispatch(hideLoadingAction())\n        // });\n    }, [props.setImages])\n\n\n\n    const deleteImage = useCallback(async (id) => {\n        const ret = window.confirm('この画像を削除しますか？');\n        if (!ret) {\n            return false\n        } else {\n            const newImages = props.images.filter(image => image.id !== id)\n            props.setImages(newImages);\n            return storage.ref('images').child(id).delete()\n        }\n    }, [props.images]);\n\n\n\n    return (\n        <>\n        <Images>\n                 {props.images.length > 0 && (\n                 props.images.map(image => <ImagePre delete={deleteImage} id={image.id} path={image.path} key={image.id} />)\n             )}\n             </Images>\n\n             <DropBox>\n             <TextArea>\n          <p><span>商品画像を登録する</span></p>\n          <label\n           dragEnter={dragEnter} \n           htmlFor=\"images-upload\"\n           onDragEnter={handleDragEnter}\n           onDragLeave={handleDragLeave}\n           onDragOver={handleDragOver}\n           onDrop={(e) => handleDrop(e)}\n          >\n          <RiIcons.RiImageAddFill className=\"add__Image\" />\n          <input className=\"icon-hide\" \n          type=\"file\"\n           multiple\n           name=\"images-upload\"\n          id=\"images-upload\"\n           onChange={(e) => uploadImage(e)}\n                //  onChange={handleFile}\n                  />\n          </label>\n          </TextArea>\n        </DropBox>\n        </>\n    );\n};\n\nexport default ImageUp;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import {createSelector} from 'reselect';\n\nconst usersSelector = (state) => state.users;\n\nexport const getCustomerId = createSelector(\n  [usersSelector],\n  state => state.customer_id\n);\n\nexport const getPaymentMethodId = createSelector(\n  [usersSelector],\n  state => state.payment_method_id\n);\n\nexport const getOrdersHistory = createSelector(\n  [usersSelector],\n  state => state.orders\n);\n\nexport const getProductsInCart = createSelector(\n    [usersSelector],\n    state => state.cart\n)\n\nexport const getProductsInLike = createSelector(\n  [usersSelector],\n  state => state.like\n)\n\nexport const getIsSignedIn = createSelector(\n    [usersSelector],\n    state => state.isSignedIn\n)\n\nexport const getUserId = createSelector(\n    [usersSelector],\n    state => state.uid\n)\n\nexport const getUsername = createSelector(\n    [usersSelector],\n    state => state.username\n)\n\n// export const getProductsInLike = createSelector(\n//     [usersSelector],\n//     state => state.like\n//   )\n\n  export const getUseremail = createSelector(\n    [usersSelector],\n    state => state.email\n)\n\n  export const getUserPost = createSelector(\n    [usersSelector],\n    state => state.post\n  )\n\n  export const getPrefecture = createSelector(\n    [usersSelector],\n    state => state.prefecture\n  )\n\n  export const getCity = createSelector(\n    [usersSelector],\n    state => state.city\n  )\n  \n  export const getOther = createSelector(\n    [usersSelector],\n    state => state.other\n  )\n\n  export const getDescription = createSelector(\n    [usersSelector],\n    state => state.description\n  )\n\n  export const getImages = createSelector(\n    [usersSelector],\n    state => state.images\n  )\n\n  export const getUserImages = createSelector(\n    [usersSelector],\n    state => state.images\n  )\n\n  // Role\n  export const getUserRole = createSelector(\n    [usersSelector],\n    state => state.role\n);","import React from 'react';\nimport * as FaIcons from \"react-icons/fa\";\nimport styled from 'styled-components';\nimport {IconText,AccountButton} from '../UIkit'\nimport {getIsSignedIn} from \"../../reducks/users/selectors\";\nimport {useSelector} from \"react-redux\";\nimport {IconMenu} from '../common';\n\n\nconst Size = styled.div`\nwidth: 100%;\n    margin: 0 auto;\n    max-width: 1100px;\n\npadding: 0 1em;\ndisplay:flex;\njustify-content: space-between;\n`;\n\nconst Categorys = styled.div`\nwidth: 100%;\nbackground-color: #fff;\ndisplay:flex;\njustify-content:center;\nalign-items: center;\n`;\n\nconst Contents = styled.div`\ndisplay:flex;\n`;\n\nconst CategoryBar = () => {\n    const selector = useSelector((state) => state);\n    // Selector から getIsSignedIn 関数を取得\n    const isSignedIn = getIsSignedIn(selector);\n\n    const ButtonLists = [\n        {\n          text: '新規会員登録',\n          path: '/signup'\n        },\n        {\n          text: 'ログイン',\n          path: '/signin'\n          }\n      ];\n\n    // const ContentsLists = [\n    //     {\n    //       text: 'カテゴリーから探す',\n    //       icon: <FaIcons.FaBars />\n    //     },\n    //     {\n    //       text: '人気ブランドから探す',\n    //       icon: <FaIcons.FaBars />\n    //       }\n    //   ];\n\n      \n\n return(\n     \n    <Categorys>\n    <Size>\n\n\n\n<Contents>\n<IconText />\n{/* {ContentsLists.map((Lists,List) => {\n        return <IconText key={List} text={Lists.text} icon={Lists.icon} />\n    })} */}\n    \n</Contents>\n\n\n\n{/* {isSignedIn && (\n           <Contents>\n           {ButtonLists.map((Lists,List) => {\n                   return <AccountButton key={List} text={Lists.text} icon={Lists.icon} path={Lists.path} />\n               })}\n           </Contents>\n)} */}\n\n{/* {isSignedIn && (\n           <Contents>\n               <IconMenu />\n           {ButtonLists.map((Lists,List) => {\n                   return <AccountButton key={List} text={Lists.text} icon={Lists.icon} path={Lists.path} />\n               })}\n           </Contents>\n)}\n\n{!isSignedIn && (\n           <Contents>\n           {ButtonLists.map((Lists,List) => {\n                   return <AccountButton key={List} text={Lists.text} icon={Lists.icon} path={Lists.path} />\n               })}\n           </Contents>\n)} */}\n\n{isSignedIn ? (\n    <IconMenu />\n):(\n    <Contents>\n    {ButtonLists.map((Lists,List) => {\n            return <AccountButton key={List} text={Lists.text} icon={Lists.icon} path={Lists.path} />\n        })}\n    </Contents>\n\n)}\n\n{/* <Contents>\n{ButtonLists.map((Lists,List) => {\n        return <AccountButton key={List} text={Lists.text} icon={Lists.icon} path={Lists.path} />\n    })}\n</Contents> */}\n\n{/* if(!isSignedIn) {\n    <Contents>\n{ButtonLists.map((Lists,List) => {\n        return <AccountButton key={List} text={Lists.text} icon={Lists.icon} path={Lists.path} />\n    })}\n</Contents>\n} else {\n    <Contents>\n     <p>サインイン</p>\n    </Contents>\n} */}\n\n\n    </Size>\n    </Categorys>\n\n \n )\n}\n\nexport default CategoryBar;\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/logo.59c87a46.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport {push} from 'connected-react-router';\n// import {Search} from '../UIkit'\nimport {useDispatch} from 'react-redux';\nimport logo from '../../assets/img/logo.png';\n\nconst media = {\n    sp: '@media(max-width: 650px)'\n}\n\nconst NavBar = styled.header`\nwidth: 100%;\nbackground-color: #fff;\ndisplay:flex;\njustify-content:center;\nalign-items: center;\nimg{\n    margin-right:2.5em;\n    padding: 1em 0 0.5em 0;\n    ${media.sp} {\n        margin-right: 0;\n   }\n}\n`;\n\nconst Size = styled.div`\npadding: 1em;\nwidth: 1000px;\ndisplay:flex;\njustify-content:center;\n img {\n     cursor: pointer;\n     ${media.sp} {\n        width: 12em;\n   }\n }\n`;\n\n\nconst Button = styled.button`\n   background: #f5f5f5;\n    border-radius: 4px;\n    width: 6em;\n    padding: 1em 0.5em;\n    margin-left: 1.5em;\n`;\n\nconst SearchContents = styled.div`\nwidth:100%;\n   display: flex;\n   padding: 0.7em 0;\n   align-items:center;\n   input {\n    background: #f5f5f5;\nborder-radius: 4px;\n\nwidth: 100%;\nheight: 40px;\nline-height: 1.5;\n    font-size: 16px;\n    border: 1px solid #ccc;\n   }\n   \n`;\n\nconst Nav = () => {\n    const dispatch = useDispatch();\n return(\n     <NavBar>\n        <Size>\n    <img onClick={() => dispatch(push('/'))} src={logo} alt=\"siteTitle\" width=\"250\"/>\n    {/* <Search /> */}\n    </Size>\n     </NavBar>\n )\n}\n\nexport default Nav;","import React from 'react';\nimport styled from 'styled-components';\n\nconst FooterBar = styled.footer`\n    background-color: rgb(34, 34, 34);\n    display:flex;\n    justify-content:left;\n    p {\n        color: #fff;\n    }\n`;\n\nconst Footer = () => {\n\n return(\n    <FooterBar>\n        <div className=\"common__size\">\n         <p>Game shop</p>\n        </div>\n    </FooterBar>\n )\n}\n\nexport default Footer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst media = {\n    sp: '@media(max-width: 650px)'\n}\n\nconst Footer = styled.div`\n    padding: 2.5em 0;\n    background-color: rgb(34, 34, 34);\n    width: 100%;\n    display: flex;\n    justify-content:cursor;\n    li {\n        color: #fff;\n    }\n    li a {\n        color: #fff;\n    }\n`;\n\nconst Size = styled.div`\nmargin: 0 auto;\npadding: 1em;\nwidth: 1100px;\n`;\n\nconst Flex = styled.div`\n   display: flex;\n   justify-content: space-around;\n   flex-wrap : wrap;\n   ul {\n       text-align:left;\n       ${media.sp} {\n        width: 130px;\n   }\n   }\n`;\n\n\nconst FooterLink = () => {\n\n return(\n     <Footer>\n        <Size>\n         <Flex>\n         <ul>\n             <li><strong>サービスについて</strong></li>\n             <li><a href=\"#\">会社概要 (運営会社)</a></li>\n             <li><a href=\"#\">採用情報</a></li>\n             <li><a href=\"#\">プレリリース</a></li>\n             <li><a href=\"#\">公式ブログ</a></li>\n             <li><a href=\"#\">ロゴのガイドライン</a></li>\n         </ul>\n\n         <ul>\n             <li><strong>各種情報</strong></li>\n             <li><a href=\"#\">ガイドライン</a></li>\n             <li><a href=\"#\">商品安全への取り組み</a></li>\n         </ul>\n\n         <ul>\n             <li><strong>プライバシーと利用規約</strong></li>\n             <li><a href=\"#\">プライバシーポリシー</a></li>\n             <li><a href=\"#\">利用規約</a></li>\n             <li><a href=\"#\">コンプライアンスポリシー</a></li>\n             <li><a href=\"#\">個人データの安全管理について</a></li>\n             <li><a href=\"#\">特定商取引に関する表記</a></li>\n             <li><a href=\"#\">資金決済法に基づく表示</a></li>\n             <li><a href=\"#\">法令遵守と犯罪防止のために</a></li>\n         </ul>\n         </Flex>\n     </Size>\n     </Footer>\n )\n}\n\nexport default FooterLink;\n","import React,{useState,useEffect} from 'react';\nimport styled from 'styled-components';\nimport * as AiIcons from \"react-icons/ai\";\nimport { useDispatch,useSelector } from 'react-redux';\nimport {push} from 'connected-react-router';\nimport {UserMenu} from '../common';\nimport Badge from '@material-ui/core/Badge';\nimport {getProductsInLike, getProductsInCart, getUserId} from '../../reducks/users/selectors';\nimport {db} from '../../firebase';\n// import { fetchProducts } from '../../reducks/products/operations';\nimport {fetchProductsInCart,fetchProductsInLike} from '../../reducks/users/operations';\n\nconst Icons = styled.div`\n    display: flex;\n    position:relative;\n    align-items: center;\n`;\n\nconst IconMenu = () => {\n    const [dropdown, setDropdown] = useState(false);\n    const dispatch = useDispatch();\n    const selector = useSelector((state)=>state);\n    const userId = getUserId(selector);\n\n    let productsInCart = getProductsInCart(selector);\n    let productsInLike = getProductsInLike(selector);\n\n        // DropDown Functions\n        const onMouseEnter = () => {\n            if (window.innerWidth < 960) {\n                setDropdown(false);\n            }else{\n                setDropdown(true);\n            }\n        }\n        const onMouseLeave = () => {\n            if (window.innerWidth < 960) {\n                setDropdown(false);\n            }else{\n                setDropdown(false);\n            }\n        }\n\n        useEffect(() => {\n            const unsubscribe = db.collection('users').doc(userId).collection('cart')\n                .onSnapshot(snapshots => {\n    \n                    snapshots.docChanges().forEach(change => {\n                        const product = change.doc.data();\n                        const changeType = change.type\n    \n                        switch (changeType) {\n                            case 'added':\n                                productsInCart.push(product);\n                                break;\n                            case 'modified':\n                                const index = productsInCart.findIndex(product => product.cartId === change.doc.id)\n                                productsInCart[index] = product;\n                                break;\n                            case 'removed':\n                                productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id);\n                                break;\n                            default:\n                                break;\n                        }\n                    });\n    \n                    dispatch(fetchProductsInCart(productsInCart))\n                });\n    \n            return () => unsubscribe()\n        },[]); \n\n        useEffect(() => {\n            const unsubscribe = db.collection('users').doc(userId).collection('like')\n              .onSnapshot(snapshots => {\n                snapshots.docChanges().forEach(change => {\n                  const product = change.doc.data();\n                  const changeType = change.type\n        \n                  switch (changeType) {\n                    case 'added':\n                      productsInLike.push(product);\n                      break;\n                    case 'modified':\n                      const index = productsInLike.findIndex(product => product.likeId === change.doc.id)\n                      productsInLike[index] = product;\n                      break;\n                    case 'removed':\n                      productsInLike = productsInLike.filter(product => product.likeId !== change.doc.id)\n                      break;\n                    default:\n                      break;\n                  }\n                })\n                dispatch(fetchProductsInLike(productsInLike))\n              })\n              return () => unsubscribe;\n          }, []);\n\n return(\n     <Icons>\n         <Badge badgeContent={productsInLike.length} color=\"secondary\">\n       <AiIcons.AiOutlineHeart className=\"menu__Icon\" onClick={() => dispatch(push('/user/like'))} />\n       </Badge>\n\n     <Badge badgeContent={productsInCart.length} color=\"secondary\">\n       <AiIcons.AiOutlineShoppingCart className=\"menu__Icon\" onClick={() => dispatch(push('/cart'))} />\n     </Badge>\n       \n       <div className=\"nav__item\"\nonMouseEnter={onMouseEnter}\nonMouseLeave={onMouseLeave}\n>\n<AiIcons.AiOutlineUser className=\"menu__Icon\" onClick={() => dispatch(push('/user'))} />\n       {dropdown && <UserMenu />}\n</div>\n\n     </Icons>\n\n\n )\n}\n\nexport default IconMenu;","import React,{useState} from 'react';\nimport styled from 'styled-components';\nimport {LogoutButton} from '../UIkit';\nimport {push} from \"connected-react-router\";\nimport {useDispatch} from \"react-redux\";\n\nconst DropMenu = styled.ul`\ntext-align: left;\n    /* padding-top:3em; */\n    padding-top:2em;\n    /* box-shadow: 0px 3px 15px rgb(0 0 0 / 20%); */\n    z-index:999;\n    position: absolute;\n    top:1em;\n    width:10em;\n    right:-7.5em;\n    background-color: transparent;\n    li {\n        font-size:14.5px;\n        padding:0.6em 0.9em;\n        background-color:#fff;\n        transition: all ease-out .3s;\n        cursor: pointer;\n    }\n    li a {\n        color: #747474;\n    }\n`;\n\nconst UserMenu = () => {\n    const dispatch = useDispatch();\n    const [click,setClick] = useState(false);\n    const handleClick = () => setClick(!click)\n\n    const DropMenuItems = [\n        {\n            title: 'マイページ',\n            path: '/user'\n        },\n        {\n            title: '購入履歴',\n            path: '/order/history'\n        },\n        {\n            title: 'パスワードリセット',\n            path: '/signin/reset'\n        },\n    ]\n\n   return(\n    <>\n    <DropMenu onClick={handleClick} className={click ? 'dropdown__menu' : 'dropdown__menu'}>\n      {DropMenuItems.map((item, index) => {\n          return(\n              <li key={index} onClick={() => dispatch(push(item.path))}>\n                  {/* <a \n                  href={item.path}\n                //   className={item.cName}\n                  onClick={() => setClick(false)}\n                  > */}\n                   {item.title}\n                  {/* </a> */}\n              </li>\n          )\n      })}\n      <LogoutButton />\n    </DropMenu>\n   </> \n  \n   )\n}\n\nexport default UserMenu;","import React,{useState,useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\n// import * as FaIcons from 'react-icons/fa';\n// import * as AiIcons from 'react-icons/ai';\n// import * as IoIcons from 'react-icons/io';\nimport {db} from '../../firebase/index';\nimport {push} from 'connected-react-router';\nimport styled from 'styled-components';\n\nconst Category = styled.li`\n    color: rgb(56, 56, 56);\n    transition: all ease-out .3s;\n    cursor: pointer;\n    line-height: 3.2em;\n    :hover {\n    background-color: #f5f5f5;\n    transition: all ease-out .3s;\n    }\n`;\n\n\nexport const sidebarData = [\n    // {\n    //     title: 'Home',\n    //     path: '/',\n    //     icon: <AiIcons.AiFillHome />,\n    //     cName: 'nav-text'\n    // },\n    // {\n    //     title: 'Reports',\n    //     path: '/reports',\n    //     icon: <IoIcons.IoIosPaper />,\n    //     cName: 'nav-text'\n    // },\n    // {\n    //     title: 'Peoducts',\n    //     path: '/products',\n    //     icon: <FaIcons.FaCartPlus />,\n    //     cName: 'nav-text'\n    // },\n    // {\n    //     title: 'tema',\n    //     path: '/team',\n    //     icon: <IoIcons.IoMdPeople />,\n    //     cName: 'nav-text'\n    // },\n    // {\n    //     title: 'Messages',\n    //     path: '/messages',\n    //     icon: <FaIcons.FaEnvelopeOpenText />,\n    //     cName: 'nav-text'\n    // },\n    // {\n    //     title: 'Support',\n    //     path: '/support',\n    //     icon: <IoIcons.IoMdHelpCircle />,\n    //     cName: 'nav-text'\n    // }\n]\n\n\n\n\n      \nconst SidebarData = (props) => {\n    const dispatch = useDispatch();\n\n    const selectMenu = (event, path) => {\n        dispatch(push(path));\n        // props.onClose(event)\n      }\n\n        // firebase の カテゴリーの初期値を設定 (useState) ②\n        const [filters, setFilters] = useState ([\n            {func: selectMenu, label: \"すべて\", id : \"all\", value:\"/\"}\n            // {func: selectMenu, label: \"メンズ\",    id: \"male\",   value: \"/?gender=male\"  },\n            // {func: selectMenu, label: \"レディース\", id: \"female\", value: \"/?gender=female\"},\n          ])\n      \n    \n     // ② fairebase と接続するために useEffect を使う\n     useEffect(() => {\n        db.collection('categories')\n        .orderBy('order' , 'asc')\n        .get()\n        .then(snapshots => {\n          const list = []\n          snapshots.forEach(snapshot => {\n            // バッククウォート を使って js の変数を使用している\n            const category = snapshot.data()\n            list.push({func: selectMenu, label: category.name, id: category.id, value: `/products/?category=${category.id}`})\n          })\n          setFilters(prevState => [...prevState, ...list])\n        })\n      }, []);\n    \n\n return(\n  <>\n     {filters.slice(2, 8).map(filter => (\n                   <Category\n                    key={filter.id}\n                    onClick={(e) => filter.func(e, filter.value)}\n                   >\n                   {filter.label}\n                   </Category>  \n                 ))}\n  </>\n )\n}\n\nexport default SidebarData;\n","export default __webpack_public_path__ + \"static/media/site-top.2d882613.jpg\";","export default __webpack_public_path__ + \"static/media/site-top-mb.f6d73b0f.jpg\";","import React from 'react';\nimport styled from 'styled-components';\nimport top from '../../assets/img/site-top.jpg';\nimport topMb from '../../assets/img/site-top-mb.jpg';\n\nconst media = {\n  sp: '@media(max-width: 650px)'\n}\n\nconst MainImage = styled.div`\n  width: 100%;\n  height: 0;\n  padding-top: calc(400 / 1200 * 100%); \n  background: url(${top}) center center / cover no-repeat;\n  ${media.sp} {\n    padding-top: calc(600 / 700 * 100%); \n    background: url(${topMb}) center center / cover no-repeat;\n   }\n`;\n\nconst Home = () => {\n\n\n return(\n     <MainImage />\n    \n )\n}\n\nexport default Home;\n","export const HIDE_LOADING = \"HIDE_LOADING\";\nexport const hideLoadingAction = () => {\n    return {\n        type: \"HIDE_LOADING\",\n        payload: {\n            state: false,\n            text: \"\"\n        }\n    }\n};\n\nexport const SHOW_LOADING = \"SHOW_LOADING\";\nexport const showLoadingAction = (text= \"loading...\") => {\n    return {\n        type: \"SHOW_LOADING\",\n        payload: {\n            state: true,\n            text: text\n        }\n    }\n};\n\n","import React, { useCallback } from 'react';\nimport {storage} from '../../firebase';\nimport ImagePreview from '../Products/ImagePreview';\nimport * as RiIcons from \"react-icons/ri\";\nimport styled from 'styled-components';\nimport {showLoadingAction, hideLoadingAction} from \"../../reducks/loading/actions\";\nimport {useDispatch} from \"react-redux\";\n\nconst Images = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    img {\n        margin: 0 0.6em 1em 0.6em;\n    }\n`;\n\nconst TextArea = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    transition: all ease-out .3s;\n    :hover {\n        color: #ea352d;\n        transition: all ease-out .3s;\n    }\n    p {\n        padding-right: 0.8em;\n    }\n`;\n\nconst ImageArea = (props) => {\n    const dispatch = useDispatch();\n\n    // -----------------\n    // deleteImage\n    // -----------------\n    const deleteImage = useCallback(async (id) => {\n        const ret = window.confirm('この画像を削除しますか？');\n        if (!ret) {\n            return false\n        } else {\n            const newImages = props.images.filter(image => image.id !== id)\n            props.setImages(newImages);\n            return storage.ref('images').child(id).delete()\n        }\n    }, [props.images])\n\n    // -----------------\n    // uploadImage\n    // -----------------\n    const uploadImage = useCallback((event) => {\n        dispatch(showLoadingAction(\"uploading...\"))\n        const file = event.target.files;\n        let blob = new Blob(file, { type: \"image/jpeg\" });\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n        const N = 16;\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\n    \n        const uploadRef = storage.ref('images').child(fileName);\n        const uploadTask = uploadRef.put(blob);\n                              \n        uploadTask.then(() => {\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                const newImage = {id: fileName, path: downloadURL};\n                props.setImages((prevState => [...prevState, newImage]))\n                dispatch(hideLoadingAction())\n            });\n        }).catch(() => {\n            dispatch(hideLoadingAction())\n        });\n    }, [props.setImages])\n\n\n return(\n  <div>\n\n      <Images>\n         {props.images.length > 0 && (\n                 props.images.map(image => <ImagePreview delete={deleteImage} id={image.id} path={image.path} key={image.id} />)\n             )}\n      </Images>\n\n      <TextArea>\n\n         <p> <span>商品画像を登録する</span></p>\n          <label>\n          <RiIcons.RiImageAddFill className=\"add__Image\" />\n          <input className=\"icon-hide\" type=\"file\" multiple\n                 onChange={(event) => uploadImage(event)}\n                  />\n          </label>\n\n      </TextArea>\n  </div>\n )\n}\n\nexport default ImageArea;","import React,{useState} from 'react';\nimport {push} from \"connected-react-router\"\nimport styled from 'styled-components';\nimport NoImage from '../../assets/img/no_image.png';\nimport {useDispatch,useSelector} from \"react-redux\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as BiIcons from \"react-icons/bi\";\nimport {ProductMenu} from '../Products';\n// import {getProducts} from '../../reducks/products/selectors';\n// import { getUserId } from '../../reducks/users/selectors';\nimport {getUserRole} from \"../../reducks/users/selectors\";\n\nconst media = {\n    sp: '@media(max-width: 650px)'\n}\n\nconst Icon = styled.div`\n    /* padding: 1em; */\n    position: absolute;\n    bottom: 1em;\n    left: 1em;\n    background-color: #ea352d;\n    transition: all ease-out .3s;\n    width: 47px;\n    height: 47px;\n    border-radius: 50%;\n    :hover {\n        background-color: #aa2e28;\n        transition: all ease-out .3s;\n    }\n`;\n\n\nconst Card = styled.div`\nposition: relative;\n    margin: 0 0.8em 1em 0;\n    background-color:#fff;\n    width: 100%;\n    max-width: 14.4em;\n    border-radius:1em;\n    border: solid 2px #eaeaea;\n    position: relative;\n    transition: all ease-out .3s;\n    cursor: pointer;\n    img {\n        border-radius: 0.8em 0.8em 0 0;\n        /* width: 100%; */\n        width: 230.7px;\n       height: 230.7px;\n       object-fit: cover;\n    }\n    :hover{\n        transition: all ease-out .3s;\n        background-color: #f5f5f5;;\n    }\n    ${media.sp} {\n        margin: 0.5em;\n   }\n`;\n\nconst TextArea = styled.div`\n    padding: 1em;\n`;\n\nconst Price = styled.div`\n    align-items: center;\n    background: rgba(0,0,0,.4);\n    border-radius: 0 14px 14px 0;\nposition: absolute;\ntop: 190px;\nleft: 0;\n    p {\n        color: #fff;\n        font-size: 1em;\n        padding: 0.3em 1em;\n    }\n`;\n\n\nconst ProductCard = (props) => {\n\n    const selector = useSelector(state => state);\n    const userRole = getUserRole(selector)\n    const isAdministrator = (userRole === \"administrator\");\n\n    const [dropdown, setDropdown] = useState(false);\n    const dispatch = useDispatch()\n\n    const images = (props.images.length > 0) ? props.images : [{path:NoImage}]\n    const price = props.price.toLocaleString();\n  \n        // DropDown Functions\n        const onMouseEnter = () => {\n            if (window.innerWidth < 960) {\n                setDropdown(false);\n            }else{\n                setDropdown(true);\n            }\n        }\n        const onMouseLeave = () => {\n            if (window.innerWidth < 960) {\n                setDropdown(false);\n            }else{\n                setDropdown(false);\n            }\n        }\n\n\n return(\n     <Card>\n         {isAdministrator && (\n         <Icon\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n         >\n           <BiIcons.BiDotsHorizontalRounded className=\"product__Icon\" />\n           {dropdown && <ProductMenu id={props.id}/>}\n      </Icon>\n        )}\n        <figure>\n         <img\n            src={images[0].path}\n            onClick={() => dispatch(push('/product/'+props.id))}\n            />\n        </figure>    \n          <TextArea>\n             <p>{props.name}</p>\n         </TextArea>\n         <Price>\n         <p>￥{price}</p>\n         </Price>\n     </Card>\n )\n}\n\nexport default ProductCard;\n\n\n\n\n// import React,{useState} from 'react';\n// import {push} from \"connected-react-router\"\n// import styled from 'styled-components';\n// import NoImage from '../../assets/img/no_image.png';\n// import {useDispatch, useSelector} from \"react-redux\";\n// import * as AiIcons from \"react-icons/ai\";\n// import * as BiIcons from \"react-icons/bi\";\n// import {ProductMenu} from '../Products';\n// // import {ProductMenu} from '../Products';\n// import {getUserRole} from \"../../reducks/users/selectors\";\n\n\n// const Card = styled.div`\n//     margin: 0 0.8em 1em 0;\n//     background-color:#fff;\n//     width: 100%;\n//     max-width: 16em;\n//     border-radius:1em;\n//     border: solid 2px #eaeaea;\n//     position: relative;\n//     transition: all ease-out .3s;\n//     cursor: pointer;\n//     img {\n//         border-radius: 0.8em 0.8em 0 0;\n//         /* width: 100%; */\n//         width: 255.7px;\n//     　　height: 255.7px;\n//     　　object-fit: cover;\n//     }\n//     :hover{\n//         transition: all ease-out .3s;\n//         background-color: #f5f5f5;;\n//     }\n// `;\n\n// const TextArea = styled.div`\n//     padding: 1em;\n// `;\n\n// const Price = styled.div`\n//     align-items: center;\n//     background: rgba(0,0,0,.4);\n//     border-radius: 0 14px 14px 0;\n// position: absolute;\n// top: 190px;\n// left: 0;\n//     p {\n//         color: #fff;\n//         font-size: 1em;\n//         padding: 0.3em 1em;\n//     }\n// `;\n\n// const Icon = styled.div`\n//     /* padding: 1em; */\n//     position: absolute;\n//     bottom: 1em;\n//     left: 1em;\n//     background-color: #ea352d;\n//     transition: all ease-out .3s;\n//     width: 47px;\n//     height: 47px;\n//     border-radius: 50%;\n//     :hover {\n//         background-color: #aa2e28;\n//         transition: all ease-out .3s;\n//     }\n// `;\n\n\n// const ProductCard = (props) => {\n//     const selector = useSelector(state => state);\n//     const userRole = getUserRole(selector)\n//     const isAdministrator = (userRole === \"administrator\");\n\n//     const [click,setClick] = useState(false);\n//     const handleClick = () => setClick(!click)\n//     // const [sidebar, setSidebar] = useState(null)\n//     const dispatch = useDispatch()\n\n//      // DropDown Functions\n//     //  const showSidebar = () => setSidebar(!sidebar)\n\n//     const images = (props.images.length > 0) ? props.images : [{path:NoImage}]\n//     const price = props.price.toLocaleString();\n  \n\n\n//  return(\n     \n// <>\n// <Card>\n// <Icon>\n//            <BiIcons.BiDotsHorizontalRounded className=\"product__Icon\" />\n// </Icon>\n//          <img\n//             src={images[0].path}\n//             onClick={() => dispatch(push('/product/'+props.id))}\n//             />\n//           <TextArea>\n//              <p>{props.name}</p>\n//          </TextArea>\n//          <Price>\n//          <p>￥{price}</p>\n//          </Price>\n         \n//      </Card>\n\n//      {/* {isAdministrator && ( */}\n//      <nav onClick={handleClick} className={click ? 'dropdown__menu' : 'dropdown__menu'}>\n// <ul className='nav-menu2-items'>\n//     <li className='navbar-toggle'>\n//         <a className='menu-bars2'>\n//             <AiIcons.AiOutlineClose />\n//         </a>\n//     </li>\n\n//     <ProductMenu />\n\n    \n// </ul>\n// </nav>\n//  {/* )} */}\n\n\n\n// </>\n// )\n// }\n\n// export default ProductCard;\n\n{/* <nav className={sidebar ? 'nav-menu2 active' : 'nav-menu2'}>\n<ul className='nav-menu2-items' onClick={showSidebar}>\n    <li className='navbar-toggle'>\n        <a className='menu-bars2'>\n            <AiIcons.AiOutlineClose />\n        </a>\n    </li>\n\n    <ProductMenu />\n\n    \n</ul>\n</nav> */}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  width: 100%;\n  display: flex;\n  align-items:center;\n  justify-content:center;\n  border-radius: 0.5em;\n  color: #fff;\n  padding:0.8em 0;\n  font-size: 15.5px;\n  margin-bottom:1em;\n  transition: all ease-out .3s;\n  :hover{\n    transition: all ease-out .3s;\n  }\n  label{\n      padding-left:0.5em;\n  }\n`;\n\nconst ProductButton = (props) => {\n\n return(\n    <Button onClick={() => props.addProduct()} className={props.color} onclick=\"location.href={props.path}\">\n      {props.icon}<label>{props.label}</label>\n    </Button>\n )\n}\n\nexport default ProductButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as AiIcons from \"react-icons/ai\";\nimport {useSelector} from \"react-redux\";\nimport {getUserId} from '../../reducks/users/selectors';\nimport {db} from '../../firebase/index';\n\nconst media = {\n  sp: '@media(max-width: 650px)'\n}\n\nconst ProductCard = styled.div`\nposition: relative;\n/* height: 22.2vh; */\n/* height: 12.5em; */\n      border: 1px solid #ccc;\n      width: 100%;\n      border-radius:0.5em;\n      max-width:35em;\n      margin: 1.5em auto 0;\n      background-color: #fff;\n      transition: all ease-out .3s;\n     cursor: pointer;\n   :hover {\n       background-color: #f5f5f5;\n       transition: all ease-out .3s; \n   }\n   /* ${media.sp} {\n            height: 20.5vh;\n   } */\n   img {\n\n\n       width: 100%;\n       height: 100%;\n       max-width: 200px;\n       max-height: 200px;\n       \n\n       object-fit: cover;\n       border-radius: 0.5em 0 0 0.5em;\n\n   }\n   h3 {\n\n       font-size:1em;\n       font-weight:bold;\n       padding: 0;\n   }\n   /* ${media.sp} {\n    height: 8.95em;\n   } */\n`;\n\nconst TextArea = styled.div`\n /* padding: 0 5vw; */\n width:15em;\n margin: 0 1em;\n P {\n   padding: 0;\n }\n`;\n\nconst Item = styled.div`\n /* position: absolute; */\n display: flex;\n      /* justify-content: center; */\n      align-items: center;\n      figure{\n        height: 100%;\n        width: 100%;\n        max-height: 200px;\n        max-width: 200px;\n\n      }\n\n`;\n\nconst Icon = styled.div`\n/* position: absolute;\nright: 1em; */\n   ${media.sp} {\n     display: none;\n   }\n`;\n\nconst PcIcon = styled.div`\ndisplay: none;\n${media.sp} {\n  margin-top: 0.3em;\n     display: block;\n     font-size: 2.1em;\n    cursor: pointer;\n    transition: all ease-out .3s;\n   }\n`;\n\nconst CartItem = (props) => {\n    const selector = useSelector((state) => state);\n    const uid = getUserId(selector);\n\n    const image = props.product.images[0].path;\n    const name = props.product.name;\n    const price = props.product.price.toLocaleString();\n    // const size = props.product.size;\n\n    // console.log(size)\n\n  const removeProductFromCart = (id) => {\n    return db.collection('users').doc(uid)\n             .collection('cart').doc(id)\n             .delete()\n};\n\nconsole.log(name)\n// console.log(size)\n return(\n     <ProductCard>\n      <Item>\n        <figure>\n      <img src={image} alt=\"商品画像\" />\n      </figure>\n         <TextArea>\n             <h3>{name}</h3>\n             <p>{\"￥\" + price}</p>\n             {/* <p>{'sizeは' + size}</p> */}\n             <PcIcon>\n         <AiIcons.AiFillDelete onClick={() => removeProductFromCart(props.product.cartId)}  />\n         </PcIcon>\n         </TextArea>\n         <Icon>\n         <AiIcons.AiFillDelete className=\"product-delete-icon\" onClick={() => removeProductFromCart(props.product.cartId)}  />\n         </Icon>\n      </Item>\n   </ProductCard>\n )\n}\n\nexport default CartItem;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Table = styled.div`\n display:flex;\n align-items: center;\n text-align:center;\n`;\n\nconst Head = styled.div`\n display:flex;\n align-items: center;\n  p{\n      padding-left:0.5em;\n  }\n`;\n\n// const Text = styled.p`\n//  padding-left:0.7em;\n// `;\n\n\nconst ProductTable = (props) => {\n\n return(\n   <Table>\n       <Head>\n       {props.icon}\n       <p><strong>{props.name}</strong></p>\n       </Head>\n    \n   </Table>\n )\n}\n\nexport default ProductTable;\n","import React,{useState} from 'react';\nimport Swiper from 'react-id-swiper';\nimport NoImage from '../../assets/img/no_image.png';\nimport 'swiper/css/swiper.css';\nimport styled from 'styled-components';\n\nconst Image = styled.div`\n  position: relative;\n    overflow: hidden;\n    /* width: 100%; */\n    width: 500px;\n    height: 500px;\n    ::before {\n    content: \"\";\n    display: block;\n    padding-top: 100%;\n    }\n    img {\n        position: absolute;\n    object-fit: cover;\n    object-position: center;\n    top: 0;\n    left: 0;\n    width: 100%;\n    /* width: 500px; */\n    height: 500px;\n    object-fit: cover;\n    /* height: auto; */\n    }\n`;\n\n    const ImageSwiper = (props) => {\n        const [params] = React.useState({\n            pagination: {\n                el: '.swiper-pagination',\n                type: 'bullets',\n                clickable : true,\n                dynamicBullets: true\n            },\n            navigation: {\n                nextEl: '.swiper-button-next',\n                prevEl: '.swiper-button-prev'\n            },\n            loop: true\n        })\n   \n        const images = props.images;\n\n        return (\n            <Swiper {...params}>\n            {images.length === 0 ? (\n                <Image>\n                     <img src={NoImage} alt=\"no image\" />\n                </Image>\n            ) : (\n                images.map(image => (\n                    <Image>\n                       <img src={image.path} alt=\"商品画像\" />\n                    </Image>\n            ))\n            )}\n          </Swiper>\n        )\n}\n\nexport default ImageSwiper;","import React, {useCallback, useEffect, useState} from 'react';\nimport {TextInput} from \"../UIkit\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {makeStyles} from \"@material-ui/styles\";\nimport styled from 'styled-components';\n\nconst media = {\n    sp: '@media(max-width: 650px)'\n  }\n\nconst useStyles = makeStyles({\n    checkIcon: {\n        float: 'right'\n    },\n    iconCell: {\n        padding: 0,\n        height: 48,\n        width: 48\n    }\n})\n\nconst Inputs = styled.div`\n display: flex;\n flex-wrap : wrap;\n justify-content: space-around;\n ${media.sp} {\n    justify-content: center;\n      /* margin: 1em auto 0; */\n   }\n input {\n     width: 26em;\n     padding:0 1.5em;\n     margin:1em;\n     ${media.sp} {\n        width: 80%;\n   }\n }\n\n`;\n\nconst SetSizesArea = (props) => {\n    const classes = useStyles()\n\n    const [index, setIndex] = useState(0),\n          [size, setSize] = useState(\"\"),\n          [quantity, setQuantity] = useState(0);\n\n    const inputSize = useCallback((event) => {\n        setSize(event.target.value)\n    }, [setSize]);\n\n    const inputQuantity = useCallback((event) => {\n        setQuantity(event.target.value)\n    }, [setQuantity]);\n\n    const addSize = (index, size, quantity) => {\n        if (size === \"\" || quantity === 0) {\n            return false\n        } else {\n            if (index === props.sizes.length) {\n            props.setSizes(prevState => [...prevState, {size: size, quantity: quantity}]);\n            setIndex(index + 1);\n            setSize(\"\");\n            setQuantity(0)\n            } else {\n                const newSizes = props.sizes;\n                newSizes[index] = {size: size, quantity: quantity};\n                props.setSizes(newSizes);\n                setIndex(newSizes.length);\n                setSize(\"\");\n                setQuantity(0);\n            }\n        }\n    }\n\n    const editSize = (index, size, quantity) => {\n        setIndex(index)\n        setSize(size)\n        setQuantity(quantity)\n    }\n\n    const deleteSize = (deleteIndex) => {\n        const newSizes = props.sizes.filter((item, i) => i !== deleteIndex)\n        props.setSizes(newSizes);\n    }\n\n    useEffect(() => {\n        setIndex(props.sizes.length)\n    },[props.sizes.length])\n\n    return (\n        <div aria-label=\"サイズ展開\">\n            <TableContainer component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>商品詳細</TableCell>\n                            <TableCell className={classes.iconCell} />\n                            <TableCell className={classes.iconCell} />\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {props.sizes.length > 0 && (\n                            props.sizes.map((item, i) => (\n                                <TableRow key={item.size}>\n                                    <TableCell component=\"th\" scope=\"row\">{item.size}</TableCell>\n                                    <TableCell>{item.quantity}</TableCell>\n                                    <TableCell>\n                                    <IconButton className={classes.iconCell} onClick={()=> editSize(i,item.size, item.quantity)}>\n                                            <EditIcon />\n                                        </IconButton>\n                                    </TableCell>\n                                    <TableCell className={classes.iconCell} onClick={() => deleteSize(i)}>\n                                        <IconButton className={classes.iconCell}>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        )}\n                    </TableBody>\n                </Table>\n                <Inputs>\n                    <TextInput\n                        placeholder={\"サイズ・カラー\"}\n                        fullWidth={false} multiline={false}\n                        onChange={inputSize} rows={1} value={size} type={\"text\"}\n                    />\n                    <TextInput\n                        placeholder={\"数量\"}\n                        fullWidth={false} multiline={false}\n                        onChange={inputQuantity} rows={1} value={quantity} type={\"number\"}\n                    />\n                </Inputs>\n                <IconButton className={classes.checkIcon} onClick={() => addSize(index,size, quantity)}>\n                    <CheckCircleIcon/>\n                </IconButton>\n            </TableContainer>\n            <div className=\"module-spacer--small\"/>\n        </div>\n\n    );\n};\n\nexport default SetSizesArea;\n","import { db, FirebaseTimestamp } from \"../../firebase\"\nimport {push} from 'connected-react-router'\nimport {deleteProductsAction,fetchProductsAction} from \"./actions\"\nimport { SetSizeArea } from \"../../components/Products\"\n\nconst productsRef = db.collection('products')\n\n// -------------------------------------\n// 商品情報のイテレート用関数 (where条件文)\n// -------------------------------------\nexport const fetchProducts = (category) => {\n  return async (dispatch) => {\n\n    let query = productsRef.orderBy('updated_at', 'desc');\n    query = category !== '' ? query.where('category', '==', category) : query;\n    \n    query.get()\n      .then(snapshots => {\n        const productList = [];\n        snapshots.forEach(snapshot => {\n          const product = snapshot.data();\n          productList.push(product);\n        })\n        dispatch(fetchProductsAction(productList))\n    })\n  }\n}\n\nexport const orderProduct = (productsInCart,amount) => {\n  console.log(productsInCart)\n  return async (dispatch, getState) => {\n    const uid = getState().users.uid;\n    const userRef = db.collection('users').doc(uid);\n    const timestamp = FirebaseTimestamp.now();\n\n    let products = [],\n        soldOutProducts = [];\n\n     const batch = db.batch()\n     \n     for (const product of productsInCart) {\n       const snapshot = await productsRef.doc(product.productId).get()\n       const sizes = snapshot.data().sizes;\n       console.log(sizes)\n       console.log(product)\n       console.log(product.sizes) // sizes が出てくる\n       console.log(snapshot)\n       console.log(product.size) // sizes が出てくる\n\n       const updatedSizes = sizes.map(size => {\n         if(size.size === product.size) {\n          console.log(product.size) // undfind\n          console.log(size.size) // S M\n          console.log(size.quantity) // 数量出てくる\n          alert('商品処理')\n           // 売り切れだったら 無効\n           if(size.quantity === 0) {\n             alert('商品がありません')\n             soldOutProducts.push(product.name);\n             return size\n           }\n           return{\n             size: size.size,\n             quantity: size.quantity -1\n           }\n\n         } else {\n          console.log('何もしなてないよ')\n          console.log(size.name)\n          console.log(product)\n          console.log(product.name)\n          console.log(size)\n           return size\n         }\n       })\n\n      // 配列にする\n      products.push ({\n        id: product.productId,\n        images: product.images,\n        name: product.name,\n        price: product.price,\n        size: product.size\n      });\n\n      batch.update(\n        productsRef.doc(product.productId),\n        {sizes: updatedSizes}\n      )\n\n      batch.delete(\n        userRef.collection('cart').doc(product.cartId)\n      )\n     }\n     \n     if (soldOutProducts.length > 0) {\n      const errorMessage = (soldOutProducts.length > 1) ?\n                            soldOutProducts.join('と'):\n                            soldOutProducts[0];\n      alert ('大変申し訳ありません。' + errorMessage + 'が在庫切れになったため、注文処理を中断しました。')     \n      return false                 \n   } else {\n      batch.commit()\n      .then(() => {\n        const orderRef = userRef.collection('orders').doc();\n\n        // ------------------------------------------------------\n        // (エラー原因)Failed to add order history TypeError: timestamp.toDate is not a function\n        // ------------------------------------------------------\n        const date = timestamp.toDate();\n        const shippingDate = FirebaseTimestamp.fromDate(new Date(date.setDate(date.getDate() + 3)));\n        alert('注文処理に成功しました。やったね。') \n        const history = {\n          amount: amount,\n          created_at: timestamp,\n          id: orderRef.id,\n          products: products,\n          shipping_date: shippingDate,\n          updated_at: timestamp\n        }\n        alert('注文処理に成功しました。やったね。') \n\n        orderRef.set(history);\n        console.log(history)\n        dispatch(push('/user/order'))\n        // orderRef.set(history).catch(error => console.error(\"Failed to add order history\", error));\n        // console.log('成功')\n\n        // dispatch(push('/order/complete'))\n      })\n      // .catch(error => console.error(\"Failed to add order history\", error));\n      .catch(()=> {\n        alert('注文に失敗しました。通信環境をご確認の上、もう一度おねがいします。')\n        return false\n      })\n   }\n\n  }\n}\n\n\nexport const saveProduct = ({id,name,description,state,category,shippingArea,shippingFee,shippingMethod,shippingDay,images,price,sizes}) => {\n    return async (dispatch) => {\n      const timestamp = FirebaseTimestamp.now()\n\n      const data = {\n        name: name,\n        description: description,\n        state: state,\n        images: images,\n        category: category,\n        shippingArea: shippingArea,\n        shippingFee: shippingFee,\n        shippingMethod: shippingMethod,\n        shippingDay: shippingDay,\n        updated_at: timestamp,\n        price: parseInt(price, 10),\n        sizes: sizes\n      }\n\n  if (id === \"\") {\n        const ref = productsRef.doc();\n        id = ref.id\n          data.id = id\n          data.created_at = timestamp\n  }\n\n      return productsRef.doc(id).set(data, {merge: true})\n      .then(()=>{\n          dispatch(push('/'))\n      }).catch((error) => {\n          throw new Error(error)\n      })\n    }\n}\n\n// deleteMenu\nexport const deleteProduct =  (id) => {\n  return async (dispatch, getState) => {\n    productsRef.doc(id).delete()\n    .then(() => {\n      const prevProducts = getState().products.list;\n      const nextProducts = prevProducts.filter(product => product.id !== id)\n      dispatch(deleteProductsAction(nextProducts))\n    })\n  }\n}","import React,{useState} from 'react';\nimport styled from 'styled-components';\nimport {LogoutButton} from '../UIkit';\nimport {push} from \"connected-react-router\";\nimport {useDispatch} from \"react-redux\";\nimport {deleteProduct} from '../../reducks/products/operations';\n\nconst DropMenu = styled.ul`\ntext-align: left;\n    /* padding-top:3em; */\n    padding-left:1.5em;\n    /* box-shadow: 0px 3px 15px rgb(0 0 0 / 20%); */\n    z-index:999;\n    position: absolute;\n    top:-3em;\n    left: 1.5em;\n    width:10em;\n    right:-7.5em;\n    cursor: pointer;\n    background-color: transparent;\n    li {\n        font-size:14.5px;\n        padding:0.6em 0.9em;\n        background-color:#fff;\n        transition: all ease-out .3s;\n        cursor: pointer;\n    }\n    li a {\n        color: #747474;\n    }\n`;\n\n\n      \nconst ProductMenu = (props) => {\n \n    const dispatch = useDispatch();\n    const [click,setClick] = useState(false);\n    const handleClick = () => setClick(!click)\n\n    // const DropMenuItems = [\n    //     {\n    //         title: '編集する',\n    //         path: '/user'\n    //     },\n    //     {\n    //         title: '削除する',\n    //         path: '/history'\n    //     },\n    // ]\n\n   return(\n    <>\n    <DropMenu onClick={handleClick} className={click ? 'dropdown__menu' : 'dropdown__menu'}>\n      <ul>\n          <li onClick={() => dispatch(push('/product/edit/'+props.id))} >編集する</li>\n          <li onClick={() => dispatch(deleteProduct(props.id)) }>削除する</li>\n      </ul>\n    </DropMenu>\n   </> \n  \n   )\n\n}\n\nexport default ProductMenu;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as AiIcons from \"react-icons/ai\";\nimport {useSelector} from \"react-redux\";\nimport {getUserId} from '../../reducks/users/selectors';\nimport {db} from '../../firebase/index';\n\nconst media = {\n  sp: '@media(max-width: 650px)'\n}\n\nconst ProductCard = styled.div`\nposition: relative;\n/* height: 22.2vh; */\n/* height: 12.5em; */\n      border: 1px solid #ccc;\n      width: 100%;\n      border-radius:0.5em;\n      max-width:35em;\n      margin: 1.5em auto 0;\n      background-color: #fff;\n      transition: all ease-out .3s;\n     cursor: pointer;\n   :hover {\n       background-color: #f5f5f5;\n       transition: all ease-out .3s; \n   }\n   /* ${media.sp} {\n            height: 20.5vh;\n   } */\n   img {\n\n\n       width: 100%;\n       height: 100%;\n       max-width: 200px;\n       max-height: 200px;\n       \n\n       object-fit: cover;\n       border-radius: 0.5em 0 0 0.5em;\n\n   }\n   h3 {\n\n       font-size:1em;\n       font-weight:bold;\n       padding: 0;\n   }\n   /* ${media.sp} {\n    height: 8.95em;\n   } */\n`;\n\nconst TextArea = styled.div`\n /* padding: 0 5vw; */\n width:15em;\n margin: 0 1em;\n P {\n   padding: 0;\n }\n`;\n\nconst Item = styled.div`\n /* position: absolute; */\n display: flex;\n      /* justify-content: center; */\n      align-items: center;\n      figure{\n        height: 100%;\n        width: 100%;\n        max-height: 200px;\n        max-width: 200px;\n\n      }\n\n`;\n\nconst Icon = styled.div`\n/* position: absolute;\nright: 1em; */\n   ${media.sp} {\n     display: none;\n   }\n`;\n\nconst PcIcon = styled.div`\ndisplay: none;\n${media.sp} {\n  margin-top: 0.3em;\n     display: block;\n     font-size: 2.1em;\n    cursor: pointer;\n    transition: all ease-out .3s;\n   }\n`;\n\nconst LikeItem = (props) => {\n    const selector = useSelector((state) => state);\n    const uid = getUserId(selector);\n\n    const image = props.product.images[0].path;\n    const name = props.product.name;\n    const price = props.product.price.toLocaleString();\n    // const size = props.product.size;\n\n    // console.log(size)\n\n  const removeLikeFromCart = (id) => {\n    return db.collection('users').doc(uid)\n             .collection('like').doc(id)\n             .delete()\n};\n\nconsole.log(name)\n// console.log(size)\n return(\n     <ProductCard>\n      <Item>\n        <figure>\n      <img src={image} alt=\"商品画像\" />\n      </figure>\n         <TextArea>\n             <h3>{name}</h3>\n             <p>{\"￥\" + price}</p>\n             {/* <p>{'sizeは' + size}</p> */}\n             <PcIcon>\n         <AiIcons.AiFillDelete onClick={() => removeLikeFromCart(props.product.likeId)}  />\n         </PcIcon>\n         </TextArea>\n         <Icon>\n         <AiIcons.AiFillDelete className=\"product-delete-icon\" onClick={() => removeLikeFromCart(props.product.likeId)}  />\n         </Icon>\n      </Item>\n   </ProductCard>\n )\n}\n\nexport default LikeItem;\n","import React,{useState,useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\n// import * as FaIcons from 'react-icons/fa';\n// import * as AiIcons from 'react-icons/ai';\n// import * as IoIcons from 'react-icons/io';\nimport {db} from '../../firebase/index';\nimport {push} from 'connected-react-router';\nimport styled from 'styled-components';\n\nconst Card = styled.div`\n    cursor: pointer;\n    background-color: #ea352d;\n    border-radius: 0.5em;\n    width: 500px;\n    position: fixed;\n    bottom: 2em;\n    left: 2em;\n    z-index: 9999;\n    p {\n        color: #fff;\n        }\n`;\n      \nconst ProductEdit = (props) => {\n    \n return(\n  <Card>\n    <p>商品情報を修正</p>\n  </Card>\n )\n}\n\nexport default ProductEdit;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as FaIcons from \"react-icons/fa\";\n\nconst Table = styled.div`\n text-align: center;\n`;\n\nconst Flex = styled.div`\n display:flex;\n align-items: center;\n background-color: #f6f6f6;\n border-radius: 0.5em;\n justify-content: space-between;\n padding: 1.5em 2em;\n margin-bottom: 1em;\n`;\n\nconst Item = styled.div`\n display: flex;\n align-items: center;\n margin-left: 1.5em;\n`;\n\nconst CartIcon = styled.div`\n font-size: 1.2em;\n  background-color: #ea352d;\n  transition: all ease-out .3s;\n  text-align: center;\n  border-radius: 50%;\n  width: 2.5em;\n  height: 2.5em;\n  position: relative;\n  cursor: pointer;\n  :hover {\n    background: #aa2e28;\n    transition: all ease-out .3s;\n  }\n`;\n\nconst ItemSide = styled.div`\n display: flex;\n`;\n\nconst SizeTable = (props) => {\n    const sizes = props.sizes\n return(\n    \n\n     <Table>\n     {sizes.length > 0 && (\n         sizes.map(size => (\n             <Flex key={size.size}>\n                <ItemSide>\n                <Item>\n                       {size.size}\n                   </Item>\n                   <Item>\n                     <p> <span>在庫</span> {size.quantity + '個'}</p>\n                   </Item>\n                   </ItemSide>\n                   <Item>\n                       {/* {'残り' + size.quantity > 0 ? (\n                        <AiIcons.AiFillDelete />\n                       ) : (\n                           <p>売り切れです</p>\n                       )\n                    } */}\n                               {size.quantity > 0 ? (\n                                 <CartIcon>\n                                     {/* addProduct関数 では選択されたサイズを入れたいから、mapいてれーとした size.size を引数にもち、引数に渡される*/}\n                                 <FaIcons.FaShoppingCart className=\"cartIcon-size\" onClick={() => props.addProduct(size.size)} />\n                                 </CartIcon>\n                               ) : (\n                                   <div>売り切れです。</div>\n                               )}\n                               \n                      \n\n                   </Item>\n                   {/* <Item>\n                   <AiIcons.AiFillDelete />\n                   </Item> */}\n             </Flex>\n         )))\n     }\n   </Table>\n )\n}\n\nexport default SizeTable;\n\n\n","import React from 'react';\nimport {TextDetail} from '../UIkit';\nimport {OrderedProducts} from '../Products';\nimport styled from 'styled-components';\n\nconst Card = styled.div`\n border-bottom: solid 2px #ddd;\n margin: 0.5em 0;\n\n p {\n     padding:0;\n }\n`;\n\n// date 型で受け取ったデータをStringとして受け取る関数\nconst datetimeToString = (date) => {\n return date.getFullYear() + '_'\n  +('00' + (date.getMonth() + 1)).slice(-2) + \"_\"\n  +('00' + date.getDate()).slice(-2) + \"\"\n  +('00' + date.getHours()).slice(-2) + \":\"\n  +('00' + date.getMinutes()).slice(-2) + \":\"\n  +('00' + date.getSeconds()).slice(-2) + \"\"\n}\n\nconst dateToString = (date) => {\n    return date.getFullYear() + '_'\n    +('00' + (date.getMonth() + 1)).slice(-2) + \"_\"\n    +('00' + date.getDate()).slice(-2) + \"\"\n}\n\nconst OrderHistoryItem = (props) => {\n    const order = props.order;\n    const orderedDatetime = datetimeToString(order.updated_at.toDate());\n    const shippingDate = dateToString(order.shipping_date.toDate());\n    const price = \"¥\" + order.amount.toLocaleString();\n return(\n    //  <div className=\"common__item\">\n    //     <div className=\"common__center\">\n  <Card>\n      <TextDetail label={'注文ID:'} value={order.id} />\n      <TextDetail label={'注文日時:'} value={orderedDatetime} />\n      <TextDetail label={'発送予定日:'} value={shippingDate} />\n      <TextDetail label={'注文金額:'} value={price} />\n      {order.products.length > 0 && (\n          <OrderedProducts products={order.products} />\n      )}\n      \n  </Card>\n//   </div>\n//   </div>\n )\n}\n\nexport default OrderHistoryItem;\n","import React, {useCallback} from 'react';\nimport {push} from 'connected-react-router';\nimport {useDispatch} from 'react-redux';\nimport styled from 'styled-components';\nimport {PrimaryButton} from '../../components//UIkit';\n\nconst media = {\n    sp: '@media(max-width: 650px)'\n  }\n\nconst Card = styled.div`\n /* display: flex;\n justify-content: space-around;\n align-items: center; */\n background-color: #f6f6f6;\n border-radius: 0.5em;\n width: 100%;\n padding: 1.5em 0;\n margin: 2em 0;\n img {\n     max-width: 9em;\n     width: 100%;\n     border-radius: 0.5em;\n }\n`;\n\nconst ButtonArea = styled.div`\n /* padding-left: 8em; */\n`;\nconst SideArea = styled.div`\n display: flex;\n justify-content: space-around;\n align-items: center;\n padding: 0 1em;\n p,h4 {\n  padding:0;\n }\n div {\n    \n }\n`;\n\nconst TextArea = styled.div`\n padding-left: 1.5em;\n`;\n\nconst Button = styled.button`\n    width: 100%;\n        background-color: #ea352d;\n        padding: 1em;\n        font-size: 1em;\n        color:#fff;\n        transition: all ease-out .3s;\n        \n        :hover {\n            transition: all ease-out .3s;\n            background-color: rgb(129, 33, 28);\n        }\n`;\n\nconst PcIcon = styled.div`\n    ${media.sp} {\n     display:none;\n   }\n`;\n\nconst Icon = styled.div`\ndisplay:none;\n    ${media.sp} {\n     display:block;\n   }\n`;\n\nconst OrderedProducts = (props) => {\n    const dispatch = useDispatch();\n    const products = props.products;\n\n    const goToProductDetail = useCallback((id) => {\n        dispatch(push('/product/' +id))\n    }, [])\n\n return(\n   <div>\n       {products.map(product => (\n         <>\n           <Card key={product.id}>\n               \n               <SideArea>\n               <figure>\n                   <img src={product.images[0].path} alt=\"ordered product\"/>\n              </figure>     \n            \n          \n                   <TextArea>\n                       <h4>{product.name}</h4>\n                       <p>{\"サイズ\" + product.size}</p>\n                       <p><strong>{\"¥\" + product.price.toLocaleString()}</strong></p>\n                   </TextArea> \n                   <PcIcon>\n               <PrimaryButton \n      style={'primary__red'} onClick={() => goToProductDetail(product.id)} label={'商品の詳細を見る'}\n     />\n               </PcIcon>\n                 </SideArea>\n<Icon>\n<PrimaryButton \n      style={'primary__red'} onClick={() => goToProductDetail(product.id)} label={'商品の詳細を見る'}\n     />\n</Icon>\n                 \n           </Card>\n         </>\n       ))}\n   </div>\n )\n}\n\nexport default OrderedProducts;\n","import { createSelector } from \"reselect\";\n\nconst productsSelector = (state) => state.products;\n\nexport const getProducts = createSelector(\n    [productsSelector],\n    state => state.list\n);\n\nexport const getProductsId = createSelector(\n    [productsSelector],\n    state => state.id\n);","import React, { useEffect } from 'react';\nimport {useSelector,useDispatch} from \"react-redux\";\nimport styled from 'styled-components';\nimport {ProductCard} from '../Products';\nimport {getProducts} from '../../reducks/products/selectors';\nimport {fetchProducts} from '../../reducks/products/operations';\n\n\nconst Products = styled.div`\n    display:flex;\n    justify-content:center;\n    padding-top:3em;\n    flex-wrap : wrap;\n`;\n\nconst NewProduct = () => {\n  const selector = useSelector((state) => state);\n    const dispatch = useDispatch();\n\n    // products定数 に getProductsのselector を入れることにより、prodicts は現在のproductStateを持っている\n    const products= getProducts(selector)\n\n    const query = selector.router.location.search;\n        // gender・category .testメソッド で 正規表現(?gender=) の後ろに値を取り出せるか を検証\n// 　　const gender = /^\\?gender=/.test(query) ? query.split('?gender=')[1] : \"\";\n　　const category = /^\\?category=/.test(query) ? query.split('?category=')[1] : \"\";\n//    const search = /^\\?search=/.test(query) ? query.split('?search=')[1] : '';\n    \n\n    // 商品情報をイテレートする\n    useEffect(() => {\n        dispatch(fetchProducts(category))\n        // dispatch(fetchProducts(gender,category))\n    },[query])\n\n    console.log(products);\n\n\n return(\n     <div className=\"common__item back__color-gray\">\n       <div className=\"common__center\">\n       <h2>新着商品</h2>\n       <Products>\n                {products.length > 0 && (\n                    products.slice(0, 4).map(product1 => (\n                        <ProductCard\n                            key={product1.id} id={product1.id} name={product1.name} images={product1.images} price={product1.price}\n                        />\n                    ))\n                )}\n       </Products>\n     </div>\n     </div>\n )\n}\n\nexport default NewProduct;\n\n","import React, { useEffect } from 'react';\nimport {useSelector,useDispatch} from \"react-redux\";\nimport styled from 'styled-components';\nimport {ProductCard} from '../Products';\nimport {getProducts} from '../../reducks/products/selectors';\nimport {fetchProducts} from '../../reducks/products/operations';\n\n\nconst Products = styled.div`\n    display:flex;\n    justify-content:center;\n    padding-top:3em;\n`;\n\nconst PopularProduct = () => {\n  const selector = useSelector((state) => state);\n    const dispatch = useDispatch();\n\n    // products定数 に getProductsのselector を入れることにより、prodicts は現在のproductStateを持っている\n    const products= getProducts(selector)\n\n    const query = selector.router.location.search;\n        // gender・category .testメソッド で 正規表現(?gender=) の後ろに値を取り出せるか を検証\n// 　　const gender = /^\\?gender=/.test(query) ? query.split('?gender=')[1] : \"\";\n　　const category = /^\\?category=/.test(query) ? query.split('?category=')[1] : \"\";\n//    const search = /^\\?search=/.test(query) ? query.split('?search=')[1] : '';\n    \n\n    // 商品情報をイテレートする\n    useEffect(() => {\n        // dispatch(fetchProducts(category,search))\n        // dispatch(fetchProducts(gender,category))\n    },[query])\n\n    console.log(products);\n\n\n return(\n     <div className=\"common__item\">\n       <div className=\"common__center\">\n       <h2>人気プロダクト</h2>\n       <Products>\n                {products.length > 0 && (\n                    products.map(product => (\n                        <ProductCard\n                            key={product.id} id={product.id} name={product.name} images={product.images} price={product.price}\n                        />\n                    ))\n                )}\n       </Products>\n     </div>\n     </div>\n )\n}\n\nexport default PopularProduct;\n","export default __webpack_public_path__ + \"static/media/site-bottom.1497c7ca.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport footer from '../../assets/img/site-bottom.png';\n\nconst AdvertisingImage = styled.div`\n  width: 100%;\n  height: 0;\n  padding-top: calc(180 / 1200 * 100%); \n  background: url(${footer}) center center / cover no-repeat;\n`;\n\nconst Advertising = () => {\n\n\n return(\n     <div className=\"common__area\">\n         <AdvertisingImage />\n     </div>\n )\n}\n\nexport default Advertising;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {useDispatch} from 'react-redux';\nimport {push} from 'connected-react-router';\nimport * as AiIcons from \"react-icons/ai\";\nimport {IconContext} from 'react-icons';\n\n\nconst Contents = styled.div`\npadding: 1.5em 0.7em 0.7em 0.7em;\n    p {\n      color: #fff;\n      font-weight: bold;\n      font-size:1.6em;\n      padding-bottom:0.8em;\n      line-height: 0;\n    }\n`;\n\n\nconst Button = styled.button`\n\nwidth:160px;\nheight:160px;\noutline:0;\nposition: fixed;\n bottom: 1.5em;\n right:2em;\n background-color: #ea352d;\n z-index: 99;\n box-shadow: 0px 3px 15px rgb(0 0 0 / 20%);\n border-radius: 50%;\n transition: all ease-out .3s;\n cursor: pointer;\n text-align: center;\n    justify-content: center;\n    /* p {\n      color: #fff;\n      font-weight: bold;\n      font-size:1.15em;\n      padding-bottom:1em;\n      line-height: 0;\n    } */\n :hover {\n    transition: all ease-out .3s;\n    background-color: #aa2e28;\n }\n`;\n\nconst Sell = () => {\n const dispatch = useDispatch();\n\n return(\n \n     <Button onClick={() => dispatch(push('/product/edit'))}>\n        <Contents>\n        <IconContext.Provider value={{color: '#fff'}}>\n       <p>出品</p>\n       <AiIcons.AiFillCamera className=\"sell-Icon\" />\n       </IconContext.Provider>  \n          </Contents>\n     </Button>\n )\n}\n\nexport default Sell;\n","import React from 'react';\nimport {CategoryChip} from '../UIkit';\nimport styled from 'styled-components';\nimport * as CgIcons from \"react-icons/cg\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as GiIcons from \"react-icons/gi\";\n\nconst Contents = styled.div`\n  padding-top:2em;\n  display: flex;\n  flex-wrap        : wrap;\n  justify-content: center;\n`;\n\nconst PopularCategory = () => {\n\n    const Lists = [\n        {\n            icon: <CgIcons.CgGames/>,\n            name: 'ゲーム本体',\n            path: '/products/?category=games'\n        },\n        {\n            icon: <GiIcons.GiOpenChest/>,\n            name: 'ソフト',\n            path: '/products/?category=software'\n        },\n        {\n            icon: <FaIcons.FaRobot/>,\n            name: 'アクセサリ',\n            path: '/products/?category=accessories'\n        },\n        {\n            icon: <GiIcons.GiGems/>,\n            name: 'その他',\n            path: '/products/?category=other'\n        }\n    ]\n   \n return(\n    <div className=\"common__item\">\n    <div className=\"common__center\">\n     <h2>人気のカテゴリー</h2>\n     <Contents>\n     {Lists.map(list => (\n                   <CategoryChip key={list.id} icon={list.icon}  name={list.name} path={list.path} />\n                 ))}\n    </Contents>\n     </div>\n    </div>\n )\n}\n\nexport default PopularCategory;","import React from 'react';\nimport {Carousel} from '../Home';\n\nconst Campaign = () => {\n return(\n    <div className=\"common__item\">\n     <div className=\"common__center\">\n      <h2>開催中のキャンペーン</h2>\n      <Carousel />\n    </div>\n   </div>\n )\n}\n\nexport default Campaign;\n","export default __webpack_public_path__ + \"static/media/banner-1.da2181ad.jpg\";","export default __webpack_public_path__ + \"static/media/banner-2.ba71051b.jpg\";","export default __webpack_public_path__ + \"static/media/banner-3.09a0d84c.jpg\";","import React from 'react';\nimport ReactIdSwiperCustom from 'react-id-swiper/lib/ReactIdSwiper.custom';\nimport { Swiper, Navigation, Pagination } from 'swiper/js/swiper.esm';\nimport 'swiper/css/swiper.css';\nimport styled from 'styled-components';\nimport banner1 from '../../assets/img/banner-1.jpg';\nimport banner2 from '../../assets/img/banner-2.jpg';\nimport banner3 from '../../assets/img/banner-3.jpg';\n\nconst Image = styled.div`\n  position: relative;\n    overflow: hidden;\n    width: 300px;\n    height: 300px;\n    margin: 0 1em;\n    ::before {\n    content: \"\";\n    display: block;\n    padding-top: 100%;\n    }\n    img {\n        position: absolute;\n    object-fit: cover;\n    object-position: center;\n    top: 0;\n    left: 0;\n    /* width: 100%; */\n    width: 300px;\n    height: 300px;\n    object-fit: cover;\n    /* height: auto; */\n    }\n`;\n\n    const Carousel = (props) => {\n        const params = {\n            // Provide Swiper class as props\n            Swiper,\n            // Add modules you need\n            modules: [Navigation, Pagination],\n            pagination: {\n              el: '.swiper-pagination',\n              type: 'bullets',\n              clickable: true\n            },\n            navigation: {\n              nextEl: '.swiper-button-next',\n              prevEl: '.swiper-button-prev'\n            },\n            spaceBetween: '1em',\n            loop: true\n          }\n\n        return (\n            <div className=\"common__item\">\n            <div className=\"common__center\">\n            <ReactIdSwiperCustom {...params}>\n            <Image><img src={banner1} /></Image>\n            <Image><img src={banner2} /></Image>\n            <Image><img src={banner3} /></Image>\n          </ReactIdSwiperCustom>\n          </div>\n          </div>\n        )\n}\n\nexport default Carousel;\n\n{/* <ReactIdSwiperCustom {...params}>\n<Image><img src={props.image} /></Image>\n</ReactIdSwiperCustom> */}","import React from 'react';\nimport styled from 'styled-components';\nimport {push} from \"connected-react-router\";\nimport {useDispatch} from \"react-redux\";\n\nconst media = {\n   sp: '@media(max-width: 650px)'\n }\n \n\nconst Menu = styled.div`\n background-color: #fff;\n border: solid 2px #efefef;\n margin-bottom:0.8em;\n transition: all ease-out .3s;\n padding:1em;\n cursor: pointer;\n\n ${media.sp} {\n    margin: 0.8em auto 0;\n   }\n\n :hover {\n    background-color: #efefef;\n    transition: all ease-out .3s;\n }\n`;\n\nconst UserMenu = (props) => {\n   const dispatch = useDispatch();\n return(\n  <div>\n {/* <h3>{props.title}</h3> */}\n  <Menu onClick={() => dispatch(push(props.link))}>\n     {props.text}\n  </Menu>\n  </div>\n )\n}\n\nexport default UserMenu;","import React from 'react';\nimport styled from 'styled-components';\nimport {push} from \"connected-react-router\"\nimport {useDispatch} from \"react-redux\";\n\nconst media = {\n   sp: '@media(max-width: 650px)'\n }\n \n\nconst Button = styled.button`\n background-color: #fff;\n border: solid 2px #efefef;\n margin-bottom:0.8em;\n transition: all ease-out .3s;\n padding:1em;\n cursor: pointer;\n width: 100%;\n font-size: 1em;\n\n ${media.sp} {\n    margin: 0.8em auto 0;\n   }\n\n :hover {\n    background-color: #efefef;\n    transition: all ease-out .3s;\n }\n`;\n\n\n    const UserButton = (props) => {\n        const dispatch = useDispatch()\n        return (\n        <div>\n           <Button onClick={() => dispatch(push('/user/info/'+props.id))}>\n              ユーザー情報\n           </Button>\n        </div>\n        )\n}\n\nexport default UserButton;","import React from 'react';\n// import Swiper from 'react-id-swiper';\nimport NoImage from '../../assets/img/no_image.png';\n// import 'swiper/css/swiper.css';\nimport styled from 'styled-components';\n\nconst Image = styled.div`\n  position: relative;\n    overflow: hidden;\n    /* width: 100%; */\n    width: 500px;\n    height: 500px;\n    ::before {\n    content: \"\";\n    display: block;\n    padding-top: 100%;\n    }\n    img {\n        position: absolute;\n    object-fit: cover;\n    object-position: center;\n    top: 0;\n    left: 0;\n    width: 100%;\n    /* width: 500px; */\n    height: 500px;\n    object-fit: cover;\n    /* height: auto; */\n    }\n`;\n\n    const UserImage = (props) => {\n        // const [params] = React.useState({\n        //     pagination: {\n        //         el: '.swiper-pagination',\n        //         type: 'bullets',\n        //         clickable : true,\n        //         dynamicBullets: true\n        //     },\n        //     navigation: {\n        //         nextEl: '.swiper-button-next',\n        //         prevEl: '.swiper-button-prev'\n        //     },\n        //     loop: true\n        // })\n   \n        const images = props.images;\n\n        return (\n        <>\n             {images.length === 0 ? (\n                <Image>\n                     <img src={NoImage} alt=\"no image\" />\n                </Image>\n            ) : (\n                images.map(image => (\n                    <Image>\n                       <img src={image.path} alt=\"商品画像\" />\n                    </Image>\n            ))\n            )}\n        </>\n            // <Swiper {...params}>\n        //   </Swiper>\n        )\n}\n\nexport default UserImage;","import React from 'react';\nimport styled from 'styled-components';\nimport * as AiIcons from \"react-icons/ai\";\nimport {IconContext} from 'react-icons';\n\nconst BackStyle = styled.div`\n background-color: #efefef;\n width: 100%;\n border-radius: 0.5em;\n padding: 0.5em;\n text-align:center;\n display: flex;\n justify-content:center;\n align-items: center;\n margin-bottom: 1em;\n p {\n     padding:0 0 0 0.5em;\n     font-size:13.5px;\n }\n`;\n\nconst CartList = (props) => {\n\n return(\n    <IconContext.Provider value={{color: '#363636'}}>\n   <BackStyle>\n    <AiIcons.AiFillNotification />\n    <p>{props.day}</p>\n    <p>{props.text}</p>\n   </BackStyle>\n   </IconContext.Provider>\n )\n}\n\nexport default CartList;","import React,{useCallback} from 'react';\nimport {UserMenu,UserButton} from '../User';\nimport {LogoutButton} from '../UIkit';\nimport { getUserId } from '../../reducks/users/selectors';\nimport {useSelector,useDispatch} from \"react-redux\";\nimport {push} from 'connected-react-router';\n\n\nconst User = (props) => {\n  const selector = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const uid = getUserId(selector);\n\n  // 第二引数に disptach は描かなくても良いが ワーニング を吐いてしまう\n  const transition = useCallback((path) => {\n    dispatch(push(path))\n}, [dispatch]);\n  \n return(\n     <> \n   <h3 className=\"UserMenu__title\">マイページメニュー</h3>\n   <UserButton id={uid} />\n   {/* <button onClick={() => dispatch(push('/product/edit/'+id))}>内容を修正する</button> */}\n   <UserMenu text={\"お知らせ\"} link={'/user/notification'} />\n   {/* <UserMenu text={\"カード情報編集\"} onClick={() => transition('/user/payment/edit')} /> */}\n   <UserMenu text={\"カード情報編集\"} link={'/user/payment/edit'} />\n   <UserMenu text={\"いいねした商品\"} link={'/user/like'} />\n\n   <h3 className=\"UserMenu__title\">商品を出品する</h3>\n   <UserMenu text={\"商品を出品する\"} link={'/product/edit'} />\n   <UserMenu text={\"購入履歴\"} link={'/order/history'} />\n\n   <h3 className=\"UserMenu__title\">設定・その他</h3>\n   <UserMenu text={\"お問い合わせ\"} link={'/contact'} />\n   <LogoutButton />\n     </>\n )\n}\n\nexport default User;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {push} from \"connected-react-router\"\nimport {useDispatch} from \"react-redux\";\n\nconst Button = styled.button`\n    background-color: rgb(234, 53, 45);\n    border-radius: 4px;\n    color: rgb(255, 255, 255);\n    display: block;\n    width: 70%;\n    font-size: 14px;\n    margin: 0 auto;\n    padding: 15px 10px;\n    transition: all ease-out .3s;\n\n    :hover {\n        background-color: rgb(129, 33, 28);\nborder-radius: 4px;\ncolor: rgb(255, 255, 255);\ndisplay: block;\nwidth: 70%;\nfont-size: 14px;\nmargin: 0 auto;\npadding: 15px 10px;\ntransition: all ease-out .3s;\n    }\n`;\n\n\n    const UserEditButton = (props) => {\n        const dispatch = useDispatch()\n        return (\n        <>\n           <Button onClick={() => dispatch(push('/user/edit/'+props.id))}>\n              編集する\n           </Button>\n        </>\n        )\n}\n\nexport default UserEditButton;","import React,{useState} from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nModal.setAppElement('#root')\n\nconst TestButtonModal = () => {\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    \n return(\n\n<div>\n<button onClick={() => setModalIsOpen(true)}>Open Modal</button>\n    <Modal isOpen={modalIsOpen} shouldCloseOnOverlayClick={false} \n           onRequestClose={() => setModalIsOpen(false)}\n           style={\n            {\n              overlay: {\n                backGroundColor: 'grey'\n              },\n              content: {\n                color: 'orange'\n            }\n           }\n          }\n           \n           >\n      <h2>Modal Title</h2>\n      <p>modal text</p>\n      <div>\n        <button onClick={() => setModalIsOpen(false)}>Close</button>\n      </div>\n    </Modal>\n</div>\n )\n}\n\nexport default TestButtonModal;","import React,{useState} from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nModal.setAppElement('#root')\n\nconst NotificationBar = () => {\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    \n return(\n\n<div>\n<button onClick={() => setModalIsOpen(true)}>Open Modal</button>\n    <Modal isOpen={modalIsOpen} shouldCloseOnOverlayClick={false} \n           onRequestClose={() => setModalIsOpen(false)}\n           style={\n            {\n              overlay: {\n                backGroundColor: 'grey'\n              },\n              content: {\n                color: 'orange'\n            }\n           }\n          }\n           \n           >\n      <h2>Modal Title</h2>\n      <p>modal text</p>\n      <div>\n        <button onClick={() => setModalIsOpen(false)}>Close</button>\n      </div>\n    </Modal>\n</div>\n )\n}\n\nexport default NotificationBar;","import React,{useState} from 'react';\nimport * as AiIcons from \"react-icons/ai\";\nimport styled from 'styled-components';\nimport {push} from \"connected-react-router\"\nimport {useDispatch} from \"react-redux\";\nimport {PrimaryButton} from '../UIkit';\nimport HTMLReactParser from 'html-react-parser';\n\n// Modal\nimport Modal from 'react-modal';\nModal.setAppElement('#root')\n\nconst Chip = styled.div`\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items:center;\n    border: solid 2px #ea352d;\n    background-color: #fff;\n    border-radius:1em;\n\n    padding: 0.5em;\n    margin: 1em 0;\n\n    p {\n        padding-left: 0.5em;\n        color: #ea352d;\n    }\n\n`;\n\nconst Btn = styled.div`\n  background: #ea352d;\n  margin: 1.5em auto 0;\n  padding: 1.1em 3em;\n  transition: all ease-out .3s;\n  color: #fff;\n  text-align: center;\n  width: 100%;\n  max-width: 5em;\n  border-radius:2em;\n  :hover{\n    background: #aa2e28;\n    transition: all ease-out .3s;\n    label{\n      font-size: 1.2em;\n    }\n  }\n`;\n\nconst ModalItem = styled.div`\n    padding: 2em;\n    text-align:center;\n    p {\n        text-align: left;\n    }\n`;\n\nconst Icon = styled.p`\n    padding-left: 1em;\n`;\n\nconst ModalBack = styled.div`\n    text-align: center;\n`;\n\n    // -------------------------------------\n    //  returnCodeToBr関数\n    //  HTML-react-parser で 正規表現を使用して <br> タグを開業につける\n    // -------------------------------------  \n    const returnCodeToBr = (text) => {\n        if(text === \"\") {\n          return text\n        } else {\n          return HTMLReactParser(text.replace(/\\r?\\n/g,'<br />'))\n        }\n      };\n\nconst NotificationChip = (props) => {\n    const dispatch = useDispatch();\n\n    // -----------------------------------------\n    // Modal\n    // -----------------------------------------\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n\n return (\n<>\n {/* <Chip onClick={() => dispatch(push('/user/notification/'+props.id))}> */}\n        <Chip onClick={() => setModalIsOpen(true)}>\n            <Icon><AiIcons.AiFillNotification /></Icon>\n            <p>{props.subject}</p>\n        </Chip>\n        {/* <button onClick={() => setModalIsOpen(true)}>Open Modal</button> */}\n\n              {/* Modal */}\n<Modal isOpen={modalIsOpen} shouldCloseOnOverlayClick={false} \n      onRequestClose={() => setModalIsOpen(false)}\n      style={\n       {\n         overlay: {\n           backGroundColor: 'grey'\n         },\n         content: {\n           color: 'orange',\n           maxWidth: '100%',\n           width: '600px',\n           height: '620px',\n           borderRadius: '0.5em',\n            \n       }\n      }\n     }\n      \n      >\n          <ModalItem>\n <h2>{props.subject}</h2>\n <p>{returnCodeToBr(props.text)}</p>\n </ModalItem>\n <div>\n   <Btn onClick={() => setModalIsOpen(false)}>Close</Btn>\n   {/* <PrimaryButton \n      style={'primary__red'} onClick={() => dispatch(setModalIsOpen(false))} label={'閉じる'}\n     /> */}\n </div>\n</Modal>\n{/* /Modal */}\n</>\n    );\n};\n\nexport default NotificationChip;","import React,{useEffect} from 'react';\nimport { getUserId,getUsername } from '../reducks/users/selectors';\nimport {Main,PopularItem,NewProduct,Advertising,Sell, GameProduct,PopularCategory,Campaign} from '../components/Home';\n// import {Modal} from '../components/UIkit';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchProducts} from \"../reducks/products/operations\";\n// const Image = lazy(() => import('../assets/img/no_image.png'));\n\n\n\n\nconst Home = () => {\n\n    const dispatch = useDispatch()\n    const selector = useSelector((state) => state)\n    \n    // const uid = getUserId(selector)\n    // const username = getUsername(selector)\n\n    // // 表示のため のquery の設定\n    // const query = selector.router.location.seach;\n    // const category = /^\\?category=/.test(query) ? query.split('?category=')[1] : \"\";\n\n    // useEffect(() => {\n    //     dispatch(fetchProducts(category));\n    // },[query])\n\n\n return(\n     <div>\n         {/* <Suspense fallback={<h1>ローディング中</h1>} >\n             <Image />\n             </Suspense> */}\n      <Main />\n      {/* <Modal /> */}\n      <PopularCategory />\n      <NewProduct />\n      <Campaign />\n      {/* <PopularItem /> */}\n      <Advertising />\n      {/* <h2>Home</h2>\n      <p>ここはホームです。</p>\n      <p>id:{uid}</p>\n      <p>ユーザー名前:{username}</p> */}\n      {/* <Sell /> */}\n      {/* <ToggleButton /> */}\n     \n     </div>\n )\n}\n\nexport default Home;\n","import React,{useCallback,useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {ResetPassword} from \"../reducks/users/operations\"\nimport {SignInput,PrimaryButton} from '../components/UIkit';\nimport {push} from 'connected-react-router';\nimport styled from 'styled-components';\n\nconst Form = styled.div`\n    p {\n        padding: 0.8em 0;\n        line-height: 0.5em;\n        cursor: pointer;\n    }\n`;\n\nconst Texts = styled.div`\n        margin-top: 2em;\n`;\n\nconst Reset = () => {\n    const dispatch = useDispatch();\n\n    const [email, setEmail] = useState(\"\");\n\n    const inputEmail = useCallback((event) => {\n        setEmail(event.target.value)\n    },[setEmail]);\n\n return(\n    <div className=\"common__item\">\n     <div className=\"common__center back__gray\">\n     <Form>\n      <h2>パスワードリセット</h2>\n     <SignInput\n      label={\"メールアドレス\"}\n      placeholder={\"sample@email.com\"}\n      type={\"email\"}\n      required={true}\n      name={\"email\"}\n      id={\"email\"}\n      className={\"email\"}\n      autocomplete={\"off\"}\n      value={email}\n      onChange={inputEmail}\n     />\n\n     {/* <PrimaryButton \n     label={\"Sign In\"}\n     onClick={() => dispatch(ResetPassword(email))}\n     /> */}\n\n<PrimaryButton \n      style={'primary__red'} onClick={() => dispatch(ResetPassword(email))} label={'パスワードリセット'}\n     />\n\n<Texts>\n <p onClick={() => dispatch(push('/signin'))}>アカウントをお持ちの方はこちら</p>\n <p onClick={() => dispatch(push('/signup'))}>アカウントをお持ちでない方はこちら</p>\n</Texts>\n </Form>\n     </div>\n     </div>\n )\n}\n\nexport default Reset;","import React,{useCallback,useState} from 'react';\nimport {useDispatch} from \"react-redux\";\n// import { signInAction } from '../reducks/users/actions';\nimport {signIn} from \"../reducks/users/operations\"\nimport {SignInput,PrimaryButton} from '../components/UIkit';\nimport {push} from 'connected-react-router';\nimport styled from 'styled-components';\n\nconst Form = styled.div`\n    p {\n        padding: 0.8em 0;\n        line-height: 0.5em;\n        cursor: pointer;\n    }\n`;\n\nconst Button = styled.button`\n    background-color: rgb(234, 53, 45);\n    border-radius: 4px;\n    color: rgb(255, 255, 255);\n    display: block;\n    width: 70%;\n    font-size: 14px;\n    margin: 0 auto;\n    padding: 15px 10px;\n    transition: all ease-out .3s;\n\n    :hover {\n        background-color: rgb(129, 33, 28);\nborder-radius: 4px;\ncolor: rgb(255, 255, 255);\ndisplay: block;\nwidth: 70%;\nfont-size: 14px;\nmargin: 0 auto;\npadding: 15px 10px;\ntransition: all ease-out .3s;\n    }\n`;\n\nconst Texts = styled.div`\n        margin-top: 2em;\n`;\n\nconst SignIn = () => {\n    const dispatch = useDispatch();\n\n    const [email, setEmail] = useState(\"\"),\n          [password, setPassword] = useState(\"\");\n\n    const inputEmail = useCallback((event) => {\n        setEmail(event.target.value)\n    },[setEmail]);\n    const inputPassword = useCallback((event) => {\n        setPassword(event.target.value)\n    },[setPassword]);\n\n    // const selector = useSelector((state) => state);\n\n    // console.log(selector.router)\n\n return(\n    <div className=\"common__item\">\n    <div className=\"common__center\">\n    <Form>\n     <div className=\"common__center back__gray\">\n      <h2>サインイン</h2>\n     <SignInput\n      label={\"メールアドレス\"}\n      placeholder={\"sample@email.com\"}\n      type={\"email\"}\n      required={true}\n      name={\"email\"}\n      id={\"email\"}\n      className={\"email\"}\n      autocomplete={\"off\"}\n      value={email}\n      onChange={inputEmail}\n     />\n\n<SignInput\n      label={\"パスワード\"}\n      placeholder={\"入力してください\"}\n      type={\"password\"}\n      required={true}\n      name={\"password\"}\n      id={\"password\"}\n      className={\"password\"}\n      autocomplete={\"off\"}\n      value={password}\n      onChange={inputPassword}\n     />\n\n     <PrimaryButton \n      style={'primary__red'} onClick={() => dispatch(signIn({email, password}))} label={'ログインする'}\n     />\n\n     <Texts>\n     <p onClick={() => dispatch(push('/signout'))}>アカウントをお持ちでない方はこちら</p>\n     <p onClick={() => dispatch(push('/signin/reset'))}>パスワードをお忘れの方はこちら</p>\n     </Texts>\n     </div>\n  </Form>\n  </div>\n  </div>\n )\n}\n\nexport default SignIn;","import React,{useCallback,useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport styled from 'styled-components';\n// import {push} from \"connected-react-router\"\n// import { signInAction } from '../reducks/users/actions';\n// import {signIn} from \"../reducks/users/operations\"\nimport {SignInput,PrimaryButton} from '../components/UIkit';\nimport {push} from 'connected-react-router';\n\nimport {signUp} from '../reducks/users/operations';\n\nconst Form = styled.div`\n    p {\n        padding: 0.8em 0;\n        line-height: 0.5em;\n        cursor: pointer;\n    }\n`;\n\nconst Texts = styled.div`\n        margin-top: 2em;\n`;\n\nconst SignUp = () => {\n\n    const dispatch = useDispatch();\n\n    const [email, setEmail] = useState(\"\"),\n          [username, setUsername] = useState(\"\"),\n          [password, setPassword] = useState(\"\"),\n          [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const inputEmail = useCallback((event) => {\n        setEmail(event.target.value)\n    },[setEmail]);\n    const inputUsername = useCallback((event) => {\n        setUsername(event.target.value)\n    },[setUsername]);\n    const inputPassword = useCallback((event) => {\n        setPassword(event.target.value)\n    },[setPassword]);\n    const inputConfirmPassword = useCallback((event) => {\n        setConfirmPassword(event.target.value)\n    },[setConfirmPassword]);\n    \n\n    // const selector = useSelector((state) => state);\n\n    // console.log(selector.router)\n\n return(\n    <div className=\"common__item\">\n    <div className=\"common__center\">\n<Form>\n<div className=\"common__center back__gray\">\n      <h2>サインアップ</h2>\n     <SignInput\n      placeholder={\"sample@email.com\"}\n      label={\"メールアドレス\"}\n      type={\"email\"}\n      name={\"email\"}\n      id={\"email\"}\n      className={\"email\"}\n      autocomplete={\"off\"}\n      value={email}\n      onChange={inputEmail}\n     />\n\n<SignInput\n      placeholder={\"田中太郎\"}\n      label={\"ユーザー名\"}\n      type={\"text\"}\n      name={\"text\"}\n      id={\"text\"}\n      className={\"name\"}\n      autocomplete={\"off\"}\n      value={username}\n      onChange={inputUsername}\n     />\n\n<SignInput\n      placeholder={\"入力してください\"}\n      label={\"パスワード\"}\n      type={\"password\"}\n      name={\"password\"}\n      id={\"password\"}\n      className={\"password\"}\n      autocomplete={\"off\"}\n      value={password}\n      onChange={inputPassword}\n     />\n\n<SignInput\n      placeholder={\"入力してください\"}\n      label={\"パスワード(確認)\"}\n      type={\"password\"}\n      name={\"password\"}\n      id={\"password\"}\n      className={\"password\"}\n      autocomplete={\"off\"}\n      value={confirmPassword}\n      onChange={inputConfirmPassword}\n     />\n\n     <PrimaryButton \n     style={'primary__red'}\n     label={\"Sign In\"}\n     onClick={() => dispatch(signUp({\n        username: username,\n        email: email,\n        password: password, \n        confirmPassword: confirmPassword\n     }))}\n     />\n\n<Texts>\n<p onClick={() => dispatch(push('/signin'))}>アカウントをお持ちの方はこちら</p>\n<p onClick={() => dispatch(push('/signin/reset'))}>パスワードをお忘れの方はこちら</p>\n</Texts>\n\n     </div>\n</Form>\n</div>\n</div>\n )\n}\n\nexport default SignUp;","import React,{useCallback,useEffect,useState,useRef} from 'react';\nimport {TextInput,SelectBox,TextArea,PrimaryButton } from '../components/UIkit';\nimport styled from 'styled-components';\nimport {useDispatch} from 'react-redux';\nimport {saveProduct} from '../reducks/products/operations';\nimport {ImageArea,SetSizesArea} from '../components/Products';\nimport { db } from '../firebase';\n\nconst Item = styled.div`\n    margin: 3em 0;\n`;\n\nconst Button = styled.button`\n    background-color: rgb(234, 53, 45);\n    border-radius: 4px;\n    color: rgb(255, 255, 255);\n    display: block;\n    width: 70%;\n    font-size: 14px;\n    margin: 0 auto;\n    padding: 15px 10px;\n    transition: all ease-out .3s;\n\n    :hover {\n    background-color: rgb(129, 33, 28);\n    border-radius: 4px;\n    color: rgb(255, 255, 255);\n    display: block;\n    width: 70%;\n    font-size: 14px;\n    margin: 0 auto;\n    padding: 15px 10px;\n    transition: all ease-out .3s;\n    }\n`;\n\nconst ProductEdit = () => {\n    const dispatch = useDispatch();\n\n    // ----------------------------------\n    // DBデータ 出力 (URLからidを取得する)\n    // ----------------------------------\n    let id = window.location.pathname.split('/product/edit') [1];\n    console.log(\"Before split /\", id)\n    \n    if(id !== \"\") {\n        id = id.split('/')[1]\n        console.log(\"After split /\",id);\n    }\n\n    const [description, setDescription] = useState(\"\"),\n          [name, setName] = useState(\"\"),\n          [images, setImages] = useState([]),\n          [price, setPrice] = useState(\"\"),\n          [sizes, setSizes] = useState([]),\n          [categories, setCategories] = useState([]),\n          [category, setCategory] = useState(\"\"),\n          [state, setState] = useState(\"\"),\n          [shippingFee, setShippingFee] = useState(\"\"),\n          [shippingMethod, setShippingMethod] = useState(\"\"),\n          [shippingDay, setShippingDay] = useState(\"\"),\n          [shippingArea, setShippingArea] = useState(\"\");\n          \n\n    const inputDescription = useCallback((event) => {\n        setDescription(event.target.value)\n    },[setDescription]);\n\n    const inputName = useCallback((event) => {\n        setName(event.target.value)\n    },[setName]);\n\n     const inputPrice = useCallback((event) => {\n        setPrice(event.target.value)\n    },[setPrice]);\n\n    const states =  [\n        {id: \"select1\", name: '選択してください'},\n        {id: \"新品・未使用\", name: '新品・未使用'},\n        {id: \"未使用に近い\", name: '未使用に近い'},\n        {id: \"立った外傷なし\", name: '目立った外傷なし'},\n        {id: \"やや汚れあり\", name: 'やや汚れあり'},\n        {id: \"傷・汚れあり\", name: '傷・汚れあり'},\n        {id: \"全体的に状態が悪い\", name: '全体的に状態が悪い'}\n    ];\n\n    const shippingFees =  [\n        {id: \"選択してください\", name: '選択してください'},\n        {id: \"送料込み(出品者負担)\", name: '送料込み(出品者負担)'},\n        {id: \"着払い(購入者が負担)\", name: '着払い(購入者が負担)'}\n    ];\n\n    const shippingMethods =  [\n        {id: \"select3\", name: '選択してください'},\n        {id: \"レターパックライト\", name: 'レターパックライト'},\n        {id: \"レターパックプラス\", name: 'レターパックプラス'},\n        {id: \"クイックポスト\", name: 'クイックポスト'},\n        {id: \"宅急便コンパクト\", name: '宅急便コンパクト'},\n        {id: \"ゆうパック元払い\", name: 'ゆうパック元払い'},\n        {id: \"ヤマト宅急便\", name: 'ヤマト宅急便'},\n        {id: \"ゆうパケット\", name: 'ゆうパケット'},\n        {id: \"ゆうメール元払い\", name: 'ゆうメール元払い'},\n        {id: \"スマートレター\", name: 'スマートレター'},\n        {id: \"普通郵便\", name: '普通郵便'},\n        {id: \"ヤマト便\", name: 'ヤマト便'},\n    ];\n\n    const shippingDays =  [\n        {id: \"select4\", name: '選択してください'},\n        {id: \"支払い後、1~2日後\", name: '支払い後、1~2日後'},\n        {id: \"支払い後、2~3日後\", name: '支払い後、2~3日後'},\n        {id: \"支払い後、4~7日後\", name: '支払い後、4~7日後'}\n    ];\n\n    const shippingAreas  =  [\n        {id: \"select5\", name: '選択してください'},\n        {id: \"北海道\", name: '北海道'},\n        {id: \"青森県\", name: '青森県'},\n        {id: \"岩手県\", name: '岩手県'},\n        {id: \"宮城県\", name: '宮城県'},\n        {id: \"秋田県\", name: '秋田県'},\n        {id: \"山形県\", name: '山形県'},\n        {id: \"福島県\", name: '福島県'},\n        {id: \"茨城県\", name: '茨城県'},\n        {id: \"栃木県\", name: '栃木県'},\n        {id: \"群馬県\", name: '群馬県'},\n        {id: \"埼玉県\", name: '埼玉県'},\n        {id: \"千葉県\", name: '千葉県'},\n        {id: \"東京都\", name: '東京都'},\n        {id: \"神奈川県\", name: '神奈川県'},\n        {id: \"新潟県\", name: '新潟県'},\n        {id: \"富山県\", name: '富山県'},\n        {id: \"石川県\", name: '石川県'},\n        {id: \"福井県\", name: '福井県'},\n        {id: \"山梨県\", name: '山梨県'},\n        {id: \"長野県\", name: '長野県'},\n        {id: \"岐阜県\", name: '岐阜県'},\n        {id: \"静岡県a\", name: '静岡県'},\n        {id: \"愛知県\", name: '愛知県'},\n        {id: \"三重県\", name: '三重県'},\n        {id: \"滋賀県\", name: '滋賀県'},\n        {id: \"京都府\", name: '京都府'},\n        {id: \"大阪府\", name: '大阪府'},\n        {id: \"兵庫県\", name: '兵庫県'},\n        {id: \"奈良県\", name: '奈良県'},\n        {id: \"和歌山県\", name: '和歌山県'},\n        {id: \"鳥取県\", name: '鳥取県'},\n        {id: \"島根県\", name: '島根県'},\n        {id: \"岡山県\", name: '岡山県'},\n        {id: \"広島県\", name: '広島県'},\n        {id: \"山口県\", name: '山口県'},\n        {id: \"徳島県\", name: '徳島県'},\n        {id: \"香川県\", name: '香川県'},\n        {id: \"愛媛県\", name: '愛媛県'},\n        {id: \"高知県\", name: '高知県'},\n        {id: \"福岡県\", name: '福岡県'},\n        {id: \"佐賀県\", name: '佐賀県'},\n        {id: \"長崎県\", name: '長崎県'},\n        {id: \"熊本県\", name: '熊本県'},\n        {id: \"大分県\", name: '大分県'},\n        {id: \"宮崎県\", name: '宮崎県'},\n        {id: \"鹿児島県\", name: '鹿児島県'},\n        {id: \"沖縄県\", name: '沖縄県'}\n    ];\n\n    // ----------------------------------\n    // categories コレクション \n    // ----------------------------------\n useEffect(() => {\n    db.collection('categories')\n    .orderBy('order','asc')\n    .get()\n    .then(snapshots => {\n      const list = []\n      snapshots.forEach(snapshot => {\n       const data = snapshot.data()\n       console.log(data)\n       list.push({\n         id: data.id,\n         name: data.name\n       })\n       //  list.push(snapshot.data())\n      })\n      setCategories(list)\n    })\n  }, []);\n\n  useEffect(() => {\n    // id が空でない場合\n    if (id !== \"\") {\n      db.collection('products').doc(id).get()\n        .then(snapshot => {\n            const data = snapshot.data();\n            setImages(data.images);\n            setName(data.name);\n            setDescription(data.description);\n            setPrice(data.price);\n            setSizes(data.sizes); \n            setCategory(data.category);\n            setState(data.state);\n            setShippingFee(data.shippingFee);\n            setShippingMethod(data.shippingMethod);\n            setShippingDay(data.shippingDay);\n            setShippingArea(data.shippingArea);\n        })\n    }\n}, [id])\n\n    // ----------------------------------\n    // input number\n    // ----------------------------------\n    // const inputRef = useRef.current.blur();\n\n return(\n     <div className=\"common__item\">\n   <div className=\"common__center\">\n       <h2>商品登録</h2>\n       <Item>\n       <ImageArea images={images} setImages={setImages} />\n       </Item>\n      <Item>\n      <TextInput\n      label={\"商品名\"}\n      placeholder={\"入力してください\"}\n      type={\"text\"}\n      required={true}\n      name={\"name\"}\n      id={\"name\"}\n      className={\"name\"}\n      autocomplete={\"off\"}\n      value={name}\n      onChange={inputName}\n     />\n\n     <TextArea onChange={inputDescription} value={description} label={'商品説明'} />\n\n    <TextInput\n      label={\"商品価格\"}\n      placeholder={\"入力してください\"}\n      type={\"number\"}\n      required={true}\n      name={\"price\"}\n      id={\"price\"}\n      className={\"price\"}\n      autocomplete={\"off\"}\n      value={price}\n      onChange={inputPrice}\n     />  \n     <hr />\n     <SetSizesArea sizes={sizes} setSizes={setSizes}/>\n      </Item>   \n     <hr />\n     <Item>\n     <SelectBox \n     name={\"category\"}\n     id={\"category\"}\n     label={\"カテゴリー\"}\n     options={categories}\n     select={setCategory}\n     value={category}\n     />\n     <SelectBox \n     name={\"state\"}\n     id={\"state\"}\n     label={\"商品の状態\"}\n     options={states}\n     select={setState}\n     value={state}\n     />\n     </Item>\n     <hr />\n    <Item>\n\n\n      {/* ここから ↓ 出てこない */}\n    \n    <SelectBox \n     name={\"shippingFee\"}\n     id={\"shippingFee\"}\n     label={\"配送料の負担\"}\n     options={shippingFees}\n     select={setShippingFee}\n     value={shippingFee}\n     />\n     <SelectBox \n     name={\"shippingMethod\"}\n     id={\"shippingMethod\"}\n     label={\"配送方法\"}\n     options={shippingMethods}\n     select={setShippingMethod}\n     value={shippingMethod}\n     />\n    <SelectBox \n     name={\"shippingDay\"}\n     id={\"shippingDay\"}\n     label={\"配送日の目安\"}\n     options={shippingDays}\n     select={setShippingDay}\n     value={shippingDay}\n     />\n<SelectBox \n     name={\"shippingArea\"}\n     id={\"shippingArea\"}\n     label={\"配送日地域\"}\n     options={shippingAreas}\n     select={setShippingArea}\n     value={shippingArea}\n     /> \n      {/* ここ*/}\n\n\n     </Item>\n     {/* <Button \n     onClick={() => dispatch(saveProduct(id,name,description,state,category,shippingFee,shippingMethod,shippingDay,shippingArea,images,price,sizes))}>\n       商品情報を保存\n     </Button> */}\n     {/* <Button \nonClick={() => dispatch(saveProduct\n   ({\n      id: id,\n      name: name,\n      description: description,\n      state: state,\n      category: category,\n      shippingFee: shippingFee,\n      shippingMethod: shippingMethod,\n      shippingDay: shippingDay,\n      shippingArea: shippingArea,\n      images: images,\n      price: price,\n      sizes: sizes,\n     })\n  )}>\n  商品情報を保存\n</Button> */}\n\n\n<PrimaryButton \n      style={'primary__red'} onClick={() => dispatch(saveProduct({\n        id: id,\n        name: name,\n        description: description,\n        state: state,\n        category: category,\n        shippingFee: shippingFee,\n        shippingMethod: shippingMethod,\n        shippingDay: shippingDay,\n        shippingArea: shippingArea,\n        images: images,\n        price: price,\n        sizes: sizes,\n        }))} label={'商品情報を保存'}\n     />\n\n   </div>\n   </div>\n )\n}\n\nexport default ProductEdit;\n\n\n\n","import React, { useEffect,useState,useCallback } from 'react';\nimport { db, FirebaseTimestamp } from '../firebase/index';\nimport { useSelector,useDispatch } from \"react-redux\";\n// import {ImageArea} from '../components/UIkit';\nimport styled from 'styled-components';\nimport {ProductButton,ImageSwiper,SizeTable} from '../components/Products';\nimport * as AiIcons from \"react-icons/ai\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as MdIcons from \"react-icons/md\";\nimport * as RiIcons from \"react-icons/ri\";\nimport {IconContext} from 'react-icons';\nimport {addProductToCart, addProductToLike} from '../reducks/users/operations';\nimport {getUserId} from '../reducks/users/selectors';\nimport HTMLReactParser from 'html-react-parser';\n\nconst media = {\n  sp: '@media(max-width: 650px)'\n}\n\nconst CenterSpacer = styled.div`\n margin: 0 1em;\n`;\n\n\nconst Table = styled.div`\n display:flex;\n align-items: center;\n text-align:center;\n justify-content: center;\n`;\n\nconst Text = styled.p`\n padding-left:0.8em;\n`;\n\nconst Head = styled.div`\n display:flex;\n align-items: center;\n \n  p{\n      padding-left:0.5em;\n  }\n`;\n\nconst Contents = styled.div`\n   width: 50%;\n   ${media.sp} {\n    width: 100%;\n   }\n   h2 {\n       padding-top:0;\n   }\n`;\n\nconst ContentsPage = styled.div`\n   display:flex;\n   justify-content:center;\n   padding-top:5em;\n   ${media.sp} {\n    flex-wrap : wrap;\n   }\n`;\n\nconst Price = styled.p`\n  font-size: 2.5em;\n  font-weight:bold;\n`;\n\n\n\n\nconst ProductDetail = () => {\n    // 現在のStateを取得する\n    const selector = useSelector((state) => state);\n    const dispatch = useDispatch();\n    const uid = getUserId(selector);\n    // 現在の Syore の URL の pathname を取得する\n    const path = selector.router.location.pathname;\n    // 定数id には、2番目のpathname(id)を取得する\n    const id = path.split('/product/')[1];\n\n    // const ButtonLists = [\n    //     {\n    //       label: '購入手続き',\n    //       color: 'button__red',\n    //       path: '/signup',\n    //       icon: <FaIcons.FaCartPlus />\n    //     },\n    //     {\n    //       label: 'お気に入り',\n    //       path: '/signin',\n    //       color: 'button__pink',\n    //       icon: <AiIcons.AiOutlineHeart />\n    //       }\n    //   ];\n\n    // useState setProduct を使用して product を 更新させる\n    const [product,setProduct] = useState(null);\n\n    const [isLiked, setIsLiked] = useState(false)\n\n    // -------------------------------------\n    //  Firebase から ファイルを取得する\n    // (return をレンダーしてから useEffect を読み込む)\n    // -------------------------------------\n    useEffect(() => {\n        // collection の products から id を取得する\n        // id を取得するには、上記の selecor と path が必要\n        db.collection('products').doc(id).get()\n        // ドキュメント から 取り出したいデータ を取り出す\n        .then(doc => {\n            const data = doc.data();\n            // useState の setProduct にdata を渡して product を更新させる\n            setProduct(data)\n        })\n    }, []);\n    \n    // const uid = getUserId(selector)\n    // const username = getUsername(selector)\n\n        // 画像があるかないか判断する しなければ 仮画像が入る\n        // const images = (props.images.length > 0) ? props.images : [{path:NoImage}]\n    \n    // -------------------------------------\n    //  AddProduct関数\n    //  useCallBack は 子コンポネートに渡すために使う\n    // -------------------------------------     \n    const addProduct = useCallback((selectedSize) => {\n      const timestamp = FirebaseTimestamp.now();\n      dispatch(addProductToCart({\n        added_at: timestamp,\n        description: product.description,\n        images: product.images,\n        name: product.name,\n        price: product.price,\n        productId: product.id,\n        quantity: 1,\n        // sizes: product.sizes,\n        size: selectedSize,\n        state: product.state,\n        category: product.category,\n        shippingArea: product.shippingArea,\n        shippingFee: product.shippingFee,\n        shippingMethod: product.shippingMethod,\n        shippingDay: product.shippingDay,\n\n      }))\n    },[product])\n\n    // -------------------------------------\n    //  AddLike関数\n    //  useCallBack は 子コンポネートに渡すために使う\n    // -------------------------------------     \n    const addLike = useCallback(() => {\n      if(!isLiked) {\n        setIsLiked((isLiked) => !isLiked)\n        const timestamp = FirebaseTimestamp.now();\n        dispatch(addProductToLike({\n          added_at: timestamp,\n          description: product.description,\n          images: product.images,\n          name: product.name,\n          price: product.price,\n          productId: product.id,\n          quantity: 1,\n        }))\n      } else {\n        setIsLiked((isLiked) => !isLiked)\n        return db.collection('users').doc(uid)\n        .collection('like').doc(id)\n        .delete()\n      }\n    },[product,isLiked])\n\n    // -------------------------------------\n    //  returnCodeToBr関数\n    //  HTML-react-parser で 正規表現を使用して <br> タグを開業につける\n    // -------------------------------------  \n   const returnCodeToBr = (text) => {\n     if(text === \"\") {\n       return text\n     } else {\n       return HTMLReactParser(text.replace(/\\r?\\n/g,'<br />'))\n     }\n   };\n\n return(\n  <div className=\"common__item\">\n  <div className=\"common__center\">\n    <h2>商品詳細</h2>\n     {/* product が存在していたら */}\n         {product && (\n            // <div className=\"common__center\">\n                <ContentsPage>\n              <Contents>\n              <ImageSwiper images={product.images} />\n             </Contents>\n             <CenterSpacer />\n             <Contents>\n              <h2>{product.name}</h2>\n              <Price>{product.price.toLocaleString()}円</Price>\n{/* \n            {ButtonLists.map((Lists,List) => {\n            return <ProductButton addProduct={addProduct} key={List} label={Lists.label} color={Lists.color} path={Lists.path} icon={Lists.icon} />\n        })} */}\n\n{/* <ProductButton sizes={product.sizes} product={product} addProduct={addProduct} label={'購入手続き'} color={'button__red'} icon={<FaIcons.FaCartPlus />} /> */}\n<ProductButton addProduct={addLike} label={'お気に入りに追加'} color={'button__pink'} icon={<AiIcons.AiOutlineHeart />} />\n              <p>{returnCodeToBr(product.description)}</p>\n              <SizeTable addProduct={addProduct} product={product} sizes={product.sizes} />\n              <hr />\n\n              <IconContext.Provider value={{color: '#747474'}}>\n              {/* <Table>\n               <Head>\n               <AiIcons.AiFillFolder />\n                 <p><strong>カテゴリー</strong></p>\n                </Head>\n                <Text>{product.category}</Text>\n               </Table> */}\n\n               <Table>\n               <Head>\n               <AiIcons.AiFillEye />\n                 <p><strong>商品状態</strong></p>\n                </Head>\n                <Text>{product.state}</Text>\n               </Table>\n\n               {/* <Table>\n               <Head>\n               <FaIcons.FaToolbox />\n                 <p><strong>個数</strong></p>\n                </Head>\n                <Text>{product.quantity}</Text>\n               </Table> */}\n\n               <Table>\n               <Head>\n               <FaIcons.FaMoneyBillWaveAlt />\n                 <p><strong>送料負担</strong></p>\n                </Head>\n                <Text>{product.shippingFee}</Text> \n               </Table>\n\n               <Table>\n               <Head>\n               <MdIcons.MdLocalShipping />\n                 <p><strong>配送方法</strong></p>\n                </Head>\n                <Text>{product.shippingMethod}</Text> \n               </Table>\n\n               <Table>\n               <Head>\n               <AiIcons.AiOutlineFieldTime />\n                 <p><strong>発送目安</strong></p>\n                </Head>\n                <Text>{product.shippingDay}</Text>\n               </Table>\n\n               <Table>\n               <Head>\n               <RiIcons.RiMapPinLine />\n                 <p><strong>配送地域</strong></p>\n                </Head>\n                <Text>{product.shippingArea}</Text>\n               </Table>\n\n               </IconContext.Provider>\n\n               <hr />\n\n              {/* {TableLists.map((Lists,List) => {\n            return <ProductTable key={List} icon={Lists.icon} name={Lists.name} text={Lists.text} />\n        })} */}\n\n              {/* <p>{product.state}</p> */}\n        {/* <p>{product.categorys}</p> */}\n        {/* <p>{product.shippingArea}</p> */}\n        {/* <p>{product.shippingFee}</p> */}\n        {/* <p>{product.shippingMethod}</p> */}\n        {/* <p>{product.shippingDay}</p> */}\n\n             </Contents>\n             </ContentsPage>\n            // </div>\n            \n         )}\n      \n     </div>\n     </div>\n )\n}\n\nexport default ProductDetail;","import React, {useEffect} from 'react';\nimport {ProductCard} from '../components/Products';\nimport {useDispatch, useSelector} from \"react-redux\";\n// import {useDispatch} from \"react-redux\";\nimport {getProducts} from \"../reducks/products/selectors\";\nimport {fetchProducts} from \"../reducks/products/operations\";\nimport styled from 'styled-components';\n// import {Pagenation} from '../components/UIkit';\n\nconst Products = styled.div`\n    display:flex;\n    flex-wrap: wrap;\n    justify-content:center;\n    padding-top:3em;\n`;\n\nconst ProductList = () => {\n    const dispatch = useDispatch()\n    const selector = useSelector(state => state);\n    const products = getProducts(selector)\n\n    // query・gender・category 定数の作成 \n    // query クエリパラメーターを定義 ?gender= のこと\n    const query = selector.router.location.search;\n    // gender・category .testメソッド で 正規表現(?gender=) の後ろに値を取り出せるか を検証\n    // const gender = /^\\?gender=/.test(query) ? query.split('?gender=')[1] : \"\";\n    const category = /^\\?category=/.test(query) ? query.split('?category=')[1] : \"\";\n    // const search = /^\\?search=/.test(query) ? query.split('?search=')[1] : '';\n\n    useEffect(() => {\n        dispatch(fetchProducts(category));\n    },[query])\n\n    \n    console.log(products)\n\n    return (\n        <div className=\"common__item\">\n       <div className=\"common__center\">\n       <h2>商品一覧</h2>\n       <Products>\n                {/* {products.length > 0 && (\n                    products.map(product => ( <ProductCardnkey={product.id} id={product.id} name={product.name} images={product.images} price={product.price} />))\n                )} */}\n                {products.length > 0 ? (\n    products.map(product =>  <ProductCard key={product.id} id={product.id} name={product.name} images={product.images} price={product.price} /> )\n  ) : (\n      <p>カートの中に商品がありません!!</p>\n  )}\n        </Products>\n        {/* <Pagenation /> */}\n        </div>\n        </div>\n    );\n};\n\nexport default ProductList;\n\n\n\n\n ","export default __webpack_public_path__ + \"static/media/mypage-img.d0d33dfa.jpg\";","// import React, { useEffect,useState,useCallback } from 'react';\n// import { db, FirebaseTimestamp } from '../firebase/index';\n// import { useSelector,useDispatch } from \"react-redux\";\n// // import {ImageArea} from '../components/UIkit';\n// import styled from 'styled-components';\n// import {ProductButton,ImageSwiper} from '../components/Products';\n// import * as AiIcons from \"react-icons/ai\";\n// import * as FaIcons from \"react-icons/fa\";\n// import * as MdIcons from \"react-icons/md\";\n// import * as RiIcons from \"react-icons/ri\";\n// import {IconContext} from 'react-icons';\n// import {addProductToCart, addProductToLike} from '../reducks/users/operations';\n// import {getUserId} from '../reducks/users/selectors';\n\n// const CenterSpacer = styled.div`\n//  margin: 0 1em;\n// `;\n\n\n// const Table = styled.div`\n//  display:flex;\n//  align-items: center;\n//  text-align:center;\n//  justify-content: center;\n// `;\n\n// const Text = styled.p`\n//  padding-left:0.8em;\n// `;\n\n// const Head = styled.div`\n//  display:flex;\n//  align-items: center;\n//   p{\n//       padding-left:0.5em;\n//   }\n// `;\n\n// const Contents = styled.div`\n//    width: 50%;\n//    h2 {\n//        padding-top:0;\n//    }\n// `;\n\n// const ContentsPage = styled.div`\n//    display:flex;\n//    justify-content:center;\n//    padding-top:5em;\n// `;\n\n// const Price = styled.p`\n//   font-size: 2.5em;\n//   font-weight:bold;\n// `;\n\n\n\n\n// const User = () => {\n//       // useState setProduct を使用して product を 更新させる\n//       const [users,setUsers] = useState(null);\n//     // 現在のStateを取得する\n//     const selector = useSelector((state) => state);\n//     const dispatch = useDispatch();\n//     // const uid = getUserId(selector);\n//     // 現在の Syore の URL の pathname を取得する\n//     const path = selector.router.location.pathname;\n//     // 定数id には、2番目のpathname(id)を取得する\n//     console.log(path)\n//     const uid = path.split('/user/')[1];\n//     console.log(uid)\n\n//     // const ButtonLists = [\n//     //     {\n//     //       label: '購入手続き',\n//     //       color: 'button__red',\n//     //       path: '/signup',\n//     //       icon: <FaIcons.FaCartPlus />\n//     //     },\n//     //     {\n//     //       label: 'お気に入り',\n//     //       path: '/signin',\n//     //       color: 'button__pink',\n//     //       icon: <AiIcons.AiOutlineHeart />\n//     //       }\n//     //   ];\n\n\n//     // -------------------------------------\n//     //  Firebase から ファイルを取得する\n//     // (return をレンダーしてから useEffect を読み込む)\n//     // -------------------------------------\n//     useEffect(() => {\n//         // collection の products から id を取得する\n//         // id を取得するには、上記の selecor と path が必要\n//         db.collection('users').doc(uid).get()\n//         // ドキュメント から 取り出したいデータ を取り出す\n//         .then(doc => {\n//             const data = doc.data();\n//             // useState の setProduct にdata を渡して product を更新させる\n//             setUsers(data)\n//         })\n//     }, []);\n    \n//     // const uid = getUserId(selector)\n//     // const username = getUsername(selector)\n\n//         // 画像があるかないか判断する しなければ 仮画像が入る\n//         // const images = (props.images.length > 0) ? props.images : [{path:NoImage}]\n    \n//     // -------------------------------------\n//     //  AddProduct関数\n//     //  useCallBack は 子コンポネートに渡すために使う\n//     // -------------------------------------     \n//     const addUsers = useCallback(() => {\n//       const timestamp = FirebaseTimestamp.now();\n//       dispatch(addProductToCart({\n//         added_at: timestamp,\n//         name: users.name,\n//       }))\n//     },[users])\n\n//  return(\n//      <>\n//      {/* product が存在していたら */}\n//          {users && (\n//           <p>{users.username}</p>\n\n//          )}\n      \n//      </>\n//  )\n// }\n\n// export default User;\n\n// import React from 'react';\n// import {UserButton} from '../components/User';\n// import styled from 'styled-components';\n// import { getUserId,getUsername,getUseremail,getUserPost,getPrefecture,getCity,getOther,getDescription,getImages } from '../reducks/users/selectors';\n// import {useSelector,useDispatch} from \"react-redux\";\n// import {Snackbars} from '../components/UIkit';\n// import * as AiIcons from \"react-icons/ai\";\n// import {UserMenus} from '../components/User';\n// // import{Test} from '../components/Home';\n\n// const Container = styled.div`\n//   display: -ms-flexbox;\n//   display: -webkit-box;\n//   display: -webkit-flex;\n//   display: flex;\n//   margin: 0 auto;\n//   max-width: 1080px;\n// `;\n\n// const Main = styled.main`\n//   width: calc(100% - 300px);\n// `;\n\n// const CenterSpacer = styled.div`\n//  margin: 0 1em;\n// `;\n\n// const ButtonArea = styled.div`\n//     display: flex;\n//     justify-content: center;\n// `;\n\n\n// const Sidebar = styled.aside`\n//   width: 300px;\n// `;\n\n// const Contents = styled.aside`\n// align-items:center;\n//   display:flex;\n// justify-content:center;\n// `;\n\n// const Title= styled.h3`\n//  font-size: 1.5em;\n//  font-weight: bold;\n// `;\n\n// const Content= styled.div`\n//  p {\n//     text-align:left;\n//     font-weight: bold;\n//  }\n// `;\n\n// const BackStyle= styled.p`\n//  background-color: #efefef;\n//  border-radius: 0.5em;\n//  padding: 0.5em 1em;\n//  font-weight: normal !important;\n//  margin: 1em 0;\n// `;\n\n\n// const User = (props) => {\n//     const dispatch = useDispatch();\n//     const selector = useSelector(state => state);\n\n//     const uid = getUserId(selector);\n//     const username = getUsername(selector);\n//     // const email = getUserMail(selector);\n//     const userEmail = getUseremail(selector)\n//     const post = getUserPost(selector);\n//     const prefecture = getPrefecture(selector);\n//     const city = getCity(selector);\n//     const other = getOther(selector);\n//     const description = getDescription(selector);\n//     const images = getImages(selector);\n    \n    \n//     // const MenuLists1 = [\n//     //     {\n//     //         text: 'お知らせ',\n//     //         path: '/user/notification'\n//     //     },\n//     //     {\n//     //         text: 'いいねした商品',\n//     //         path: '/user/like'\n//     //     },\n//     // ]\n\n//     // const MenuLists2 = [\n//     //     {\n//     //         text: '商品を出品する',\n//     //         path: '/product/edit'\n//     //     },\n//     //     {\n//     //         text: '出品した商品',\n//     //         path: '#'\n//     //     }\n//     // ]\n\n//     // const MenuLists3 = [\n//     //     {\n//     //         text: 'お問い合わせ',\n//     //         path: '#'\n//     //     },\n//     //     // {\n//     //     //     text: 'ログアウト',\n//     //     //     path: '#'\n//     //     // }\n//     // ]\n   \n//  return(\n//      <>\n\n//      <div className=\"common__item\">\n//      <div className=\"common__center\">\n//          <Container>\n//          <Sidebar >\n//        <UserMenus />\n//     </Sidebar>\n\n//            <CenterSpacer />\n\n//            <Main>\n//                <Snackbars\n//                icon={<AiIcons.AiFillNotification />}\n//                text={\"あなたはまだ会員情報を記入していません。記入してください。\"}\n//                color={\"snackbars-news\"}\n//                />\n//                <Title>あなたの設定</Title>\n\n//            <Contents>\n\n//             {/* <UserImage images={images} /> */}\n//            {/* <p><img src=\"https://placehold.jp/200x200.png\" alt=\"画像\"/></p> */}\n//            {/* <div>\n//                <p>id: {uid}</p>\n\n//            </div> */}\n//            </Contents>\n\n//            <Content>\n//            {images}\n//            <p>ユーザー名</p>\n//            <BackStyle>{username}</BackStyle>\n//            <p>メールアドレス</p>\n//            <BackStyle>{userEmail}</BackStyle>\n//            <p>住所</p>\n//            <BackStyle>{post}</BackStyle>\n//            <BackStyle>{prefecture}</BackStyle>\n//            <BackStyle>{city}</BackStyle>\n//            <BackStyle>{other}</BackStyle>\n//            <p>自己紹介</p>\n//            <BackStyle>{description}</BackStyle>\n\n//            {/* <Test link={'/contact'} /> */}\n\n//            </Content>\n\n//           <ButtonArea>\n//           {/* <AccountButton text={'内容を修正する'} onClick={() => dispatch(push('/product/edit/'+id))} /> */}\n//           <UserButton id={uid} />\n\n//           </ButtonArea>\n\n//            </Main>\n//          </Container>\n//      </div>\n//      </div>\n \n//      </>\n//  )\n// }\n\n// export default User;\n\n\n// データ読み込み\nimport React,{useState,useCallback,useEffect} from 'react';\nimport styled from 'styled-components';\nimport {db} from '../firebase';\nimport {UserMenus,UserEditButton} from '../components/User';\nimport {ImageSwiper} from '../components/Products';\nimport {useDispatch,useSelector} from \"react-redux\";\nimport { getUserId,getUsername } from '../reducks/users/selectors';\nimport image from '../assets/img/mypage-img.jpg';\n\nconst media = {\n  sp: '@media(max-width: 650px)'\n}\n\nconst Container = styled.div`\n  display: -ms-flexbox;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: flex;\n  margin: 0 auto;\n  max-width: 1080px;\n`;\n\nconst Sidebar = styled.aside`\n  width: 300px;\n  ${media.sp} {\n        display: none;\n   }\n`;\n\nconst Title= styled.h3`\n font-size: 1.5em;\n font-weight: bold;\n padding-top:1em;\n`;\n\nconst Main = styled.main`\n  width: calc(100% - 300px);\n  p {\n    padding:0;\n    font-weight: bold;\n    padding: 1em 0 4em 0;\n  }\n  img {\n    width:350px;\n    ${media.sp} {\n      width: 100%;\n   }\n  } \n  ${media.sp} {\n      width: 100%;\n      padding: 0 1em;\n   }\n`;\n\nconst CenterSpacer = styled.div`\n margin: 0 1em;\n ${media.sp} {\n      display: none;\n   }\n`;\n\nconst Center = styled.div`\n text-align: center;\n`;\n\nconst Button = styled.button`\n text-align: center;\n margin: 0 auto;\n`;\n\nconst BackStyle = styled.div`\n text-align: center;\n padding: 1em;\n background-color:  #efefef;\n border-radius: 1em;\n width: 100%;\n margin: 1em 0;\n span {\n   font-weight: bold;\n }\n`;\n\nconst Informations = styled.div`\n padding: 2.5em 0;\n`;\n\nconst Item = styled.div`\ntext-align: left;\n label {\n  text-align: left;\n }\n`;\n\nconst MbMenu = styled.div`\n display: none;\n ${media.sp} {\n      display: block;\n   }\n`;\n\nconst User = () => {\n  const dispatch = useDispatch();\n  　const selector = useSelector((state) => state);\n  const uid = getUserId(selector);\n  // id取得のためにpathを取得する\n  const path = selector.router.location.pathname;\n  const id = path.split('/user/')[1];\n\n  const username = getUsername(selector);\n\n  const [user, setUser] = useState(null);\n\n  // レンダー が走った後に useEffect が走る\n  useEffect (() => {\n    // pathにより抽出したid\n    db.collection('users').doc(id).get()\n    // document を受け取る\n    .then(doc => {\n      // document の data を取得\n       const data = doc.data();\n       // setUse が user が更新する\n       setUser(data)\n    })\n   }, []);\n\n  return(\n    <div className=\"common__item\">\n     <div className=\"common__center\">\n     <Container>\n    <Sidebar>\n       <UserMenus />\n    </Sidebar>\n    <CenterSpacer />\n    <Main>\n     <Title>ユーザー</Title>\n       <p>こんにちは {username} さん<br />今日も素敵なお買い物をしましょう!!</p>\n       <img src={image} alt=\"image\"/>\n  </Main>\n</Container>\n<MbMenu>\n<UserMenus />\n</MbMenu>\n     </div>\n    </div>\n  )\n};\n\nexport default User;","export default __webpack_public_path__ + \"static/media/cart-img.674afccb.jpg\";","import React,{useCallback} from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { getProductsInCart } from '../reducks/users/selectors';\nimport {CartItem} from '../components/Products';\nimport styled from 'styled-components';\nimport {push} from 'connected-react-router';\nimport {PrimaryButton} from '../components/UIkit';\nimport image from '../assets/img/cart-img.jpg';\n\nconst Buttons = styled.div`\n   padding-top: 3em;\n`;\n\nconst Items = styled.div`\n   padding-top: 1em;\n`;\n\nconst Button = styled.button`\n    margin: 0 auto;\n    padding: 1.1em 3em;\n    background: #ea352d;\n    transition: all ease-out .3s; \n    color: #fff;\n    border-radius:2em;\n    width:100%;\n    max-width: 15em;\n    margin-bottom:1em; \n    label{\n      font-size: 1.2em;\n    }\n    :hover{\n    padding: 1.1em 3em;\n    background: #aa2e28;\n    color: #fff;\n    transition: all ease-out .3s;\n    border-radius:2em;\n    label{\n      font-size: 1.2em; \n    }\n    }\n`;\n\nconst Image = styled.img`\n width: 100%;\n max-width: 15em;\n`;\n\nconst ButtonArea = styled.div`\npadding-top: 2em;\n`;\n\nconst Text = styled.p`\n font-weight: bold;\n color: #ea352d;\n padding: 3em 0 2em 0;\n`;\n\nconst CartList = () => {\n    const selector = useSelector((state) => state);\n    const dispatch = useDispatch();\n    const productsInCart = getProductsInCart(selector); \n    // console test ↓\n    console.log(productsInCart)\n\n    const goToOder = useCallback(() => {\n      dispatch(push('/order/confirm'));\n     }, []);\n\n     const goToHome = useCallback(() => {\n      dispatch(push('/'));\n     }, []);\n   \n\n return(\n   <div className=\"common__item\">\n      <div className=\"common__center\">\n          <h2>ショッピングカート</h2>\n        <Items>\n            {/* {productsInCart.length > 0 && (\n                productsInCart.map(product => <CartItem key={product.cartId} product={product}  /> )\n            )} */}\n\n{productsInCart.length > 0 ? (\n  productsInCart.map(product => <CartItem key={product.cartId} product={product}  /> )\n) : (\n  <>\n   <Text>商品がありません</Text>\n  <Image src={image} alt=\"image\"/>\n  </>\n)}\n\n        </Items>\n        {/* <Button  onClick={goToOder} >レジへ進む</Button> */}\n\n        <PrimaryButton \n      style={'primary__red'} onClick={() => dispatch(goToOder)} label={'レジへ進む'}\n     />\n\n\n<PrimaryButton \n      style={'primary__red-solid'} onClick={() => dispatch(goToHome)} label={'ホームに戻る'}\n     />\n  \n\n      </div>\n   </div>\n )\n}\n\nexport default CartList;\n","import React,{useCallback} from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { getProductsInLike } from '../reducks/users/selectors';\nimport {LikeItem} from '../components/Products';\nimport styled from 'styled-components';\nimport {PrimaryButton} from '../components/UIkit';\nimport {push} from 'connected-react-router';\nimport image from '../assets/img/cart-img.jpg';\n\nconst Buttons = styled.div`\n padding-top: 3em;\n`;\n\nconst Items = styled.div`\n padding-top: 1em;\n`;\n\nconst Image = styled.img`\n width: 100%;\n max-width: 15em;\n`;\n\nconst ButtonArea = styled.div`\npadding-top: 2em;\n`;\n\nconst Text = styled.p`\n font-weight: bold;\n color: #ea352d;\n padding: 3em 0 2em 0;\n`;\n\n\n\nconst LikeList = () => {\n    const selector = useSelector((state) => state);\n    const dispatch = useDispatch();\n    // selector から getProductsInCart関数 を呼び出す (現在のカートにある情報)\n    const productsInLike = getProductsInLike(selector);\n        // console test ↓\n        console.log(productsInLike)\n    \n        const goToHome = useCallback(() => {\n          dispatch(push('/'));\n         }, []);\n\n return(\n  <div className=\"common__item\">\n  <div className=\"common__center\">\n          <h2>あなたのお気に入り商品</h2>\n        <Items>\n            {/* カート情報 productsInCart関数 を コンポネート で.map する */}\n            {/* {productsInLike.length > 0 && (\n                productsInLike.map(product => <LikeItem key={product.likeId} product={product} /> )\n            )} */}\n            {productsInLike.length > 0 ? (\n  productsInLike.map(product => <LikeItem key={product.likeId} product={product} /> )\n) : (\n    <>\n     <Text>商品がありません</Text>\n    <Image src={image} alt=\"image\"/>\n    </>\n)}\n        </Items>\n\n<ButtonArea>\n<PrimaryButton \n      style={'primary__red-solid'} onClick={() => dispatch(goToHome)} label={'ホームに戻る'}\n     />\n</ButtonArea>\n      </div>\n   </div>\n )\n}\n\nexport default LikeList;\n\n\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Main = styled.p`\n    font-size:3em;\n    font-weight: bold;\n    color: #747474;\n`;\n\nconst Error = () => {\n\n return(\n    <div className=\"common__center\">\n    <div className=\"common__page\">\n      <Main>404 not found</Main>\n      <p>申し訳ございません。こちらのページは存在しないか削除されています。</p>\n    </div>\n  </div>\n )\n}\n\nexport default Error;","import { db, FirebaseTimestamp } from \"../../firebase\";\nimport {push} from 'connected-react-router';\nimport { FaSnapchat } from \"react-icons/fa\";\nimport {fetchNotificationsAction} from './actions';\n\nconst notificationsRef = db.collection('notifications')\n\nexport const fetchNotifications = () => {\nreturn async (dispatch) => {\n notificationsRef.orderBy('updated_at', 'desc').get()\n   .then(snapshots => {\n      const notificationList = []\n      snapshots.forEach(snapshot => {\n         const notification = snapshot.data();\n         notificationList.push(notification)\n      })\n      dispatch(fetchNotificationsAction(notificationList))\n   })\n  }\n};\n\nexport const saveNotification = ({subject,text,type}) => {\n    return async (dispatch) => {\n      const timestamp = FirebaseTimestamp.now()\n  \n      const data = {\n        text: text,\n        type: type,\n        subject: subject,\n        updated_at: timestamp,\n      }\n\n//   if (id === \"\") {\n    const ref = notificationsRef.doc();\n    const id = ref.id;\n    data.id = id\n    data.created_at = timestamp\n// }\n\n\n      return notificationsRef.doc(id).set(data)\n      .then(()=>{\n          dispatch(push('/'))\n      }).catch((error) => {\n          throw new Error(error)\n      })\n    }\n  }","import {createSelector} from 'reselect';\n\nconst notificationsSelector = (state) => state.notifications;\n\nexport const getNotifications = createSelector(\n    [notificationsSelector],\n    state => state.list\n);","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport {NotificationChip} from '../components/User';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {UserMenus,UserEditButton} from '../components/User';\n// 修正\nimport {fetchNotifications} from \"../reducks/Notification/operations\";\nimport {getNotifications} from \"../reducks/Notification/selectors\";\n\nconst media = {\n  sp: '@media(max-width: 650px)'\n}\n\n// const Products = styled.div`\n//     display:flex;\n//     flex-wrap: wrap;\n//     justify-content:center;\n//     padding-top:3em;\n// `;\n\nconst Container = styled.div`\n  display: -ms-flexbox;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: flex;\n  margin: 0 auto;\n  max-width: 1080px;\n`;\n\nconst Sidebar = styled.aside`\n  width: 300px;\n  ${media.sp} {\n        display: none;\n   }\n`;\n\nconst Title= styled.h3`\n font-size: 1.5em;\n font-weight: bold;\n padding-top:1em;\n`;\n\nconst Main = styled.main`\n  width: calc(100% - 300px);\n  p {\n    padding:0;\n  }\n  ${media.sp} {\n      width: 100%;\n      padding: 0 1em;\n   }\n`;\n\nconst Chips = styled.main`\n  padding-top: 1em;\n`;\n\nconst CenterSpacer = styled.div`\n margin: 0 1em;\n ${media.sp} {\n      display: none;\n   }\n`;\n\nconst Center = styled.div`\n text-align: center;\n`;\n\nconst Button = styled.button`\n text-align: center;\n margin: 0 auto;\n`;\n\nconst BackStyle = styled.div`\n text-align: center;\n padding: 1em;\n background-color:  #efefef;\n border-radius: 1em;\n width: 100%;\n margin: 1em 0;\n span {\n   font-weight: bold;\n }\n`;\n\nconst Informations = styled.div`\n padding: 2.5em 0;\n`;\n\nconst Item = styled.div`\ntext-align: left;\n label {\n  text-align: left;\n }\n`;\n\nconst MbMenu = styled.div`\n display: none;\n ${media.sp} {\n      display: block;\n   }\n`;\n\n\nconst Notification = () => {\n    const dispatch = useDispatch()\n    const selector = useSelector(state => state);\n    const notifications = getNotifications(selector)\n\n\n\n// 修正    \n    useEffect(() => {\n        dispatch(fetchNotifications());\n    },[])\n\n\n    return (\n      <div className=\"common__item\">\n      <div className=\"common__center\">\n      <Container>\n     <Sidebar >\n        <UserMenus />\n     </Sidebar>\n     <CenterSpacer />\n     <Main>\n     <h2>通知</h2>\n        <Chips>\n          {notifications.length > 0 && (\n            notifications.map(notification => (\n              <NotificationChip\n               key={notification.id} id={notification.id} text={notification.text} subject={notification.subject}\n              />\n            ))\n          )}\n        </Chips>\n      <Chips>\n      </Chips>\n   </Main>\n </Container>\n <MbMenu>\n<UserMenus />\n</MbMenu>\n      </div>\n      \n\n     </div>\n \n    );\n};\n\nexport default Notification;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\n\nconst Category = () => {\n    return (\n  <div>\n  </div>    );\n};\n\nexport default Category;","import React,{useCallback,useState,useEffect} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport styled from 'styled-components';\nimport {ImageArea} from '../components/Products';\n// import {push} from \"connected-react-router\"\n// import { signInAction } from '../reducks/users/actions';\n// import {signIn} from \"../reducks/users/operations\"\nimport {SignInput,PrimaryButton,SelectBox,TextArea} from '../components/UIkit';\nimport {push} from 'connected-react-router';\n\nimport {userEdit} from '../reducks/users/operations';\nimport {db} from \"../firebase/index\";\n\nconst Form = styled.div`\n    p {\n        padding: 0.8em 0;\n        line-height: 0.5em;\n        cursor: pointer;\n    }\n`;\n\nconst Title = styled.h3`\n    font-size: 1.25em;\n    text-align:left;\n    font-weight: bold;\n    border-bottom: solid 1px #ddd;\n    margin:2em 0 1.7em 0;\n`;\n\nconst Contents = styled.div`\n    padding: 0 0 7em 0;\n`;\n\nconst Button = styled.button`\n   \n    margin: 2em auto 0 auto;\n    padding: 1.1em 3em;\n    background: #ea352d;\n    transition: all ease-out .3s;\n    color: #fff;\n    border-radius:2em;\n    width:100%;\n    max-width: 15em;\n    margin-bottom:1em; \n    label{\n      font-size: 1.2em;\n    }\n    :hover{\n    padding: 1.1em 3em;\n    background: #aa2e28;\n    color: #fff;\n    transition: all ease-out .3s;\n    border-radius:2em;\n    label{\n      font-size: 1.2em;\n    }\n    }\n`;\n\n// const Texts = styled.div`\n//         margin-top: 2em;\n// `;\n\nconst UserEdit = () => {\n    const dispatch = useDispatch();\n     // ----------------------------------\n    // DBデータ 出力 (URLからidを取得する)\n    // ----------------------------------\n    // window.location.pathname でU RL を取得する\n    // .split で /product/edit' 後のs番目の要素(id)を取得\n    let id = window.location.pathname.split('/user/edit')[1];\n    console.log(\"Before split /\", id)\n\n    if (id !== \"\") {\n        id =  id.split('/')[1]\n        console.log(\"After split / \",id)\n      }\n\n    const [email, setEmail] = useState(\"\"),\n          [images, setImages] = useState([]),\n          [username, setUsername] = useState(\"\"),\n          [prefecture, setPrefecture] = useState(\"\"),\n          [city, setCity] = useState(\"\"),\n          [other, setOther] = useState(\"\"),\n          [post, setPost] = useState(\"\"),\n          [description, setDescription] = useState(\"\");\n          // [password, setPassword] = useState(\"\"),\n          // [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const inputEmail = useCallback((event) => {\n        setEmail(event.target.value)\n    },[setEmail]);\n    const inputUsername = useCallback((event) => {\n        setUsername(event.target.value)\n    },[setUsername]);\n    const prefectures  =  [\n      {id: \"select5\", name: '選択してください'},\n      {id: \"Hokaido\", name: '北海道'},\n      {id: \"Aomori\", name: '青森県'},\n      {id: \"Iwate\", name: '岩手県'},\n      {id: \"Miyagi\", name: '宮城県'},\n      {id: \"Akita\", name: '秋田県'},\n      {id: \"Yamagata\", name: '山形県'},\n      {id: \"Hukushima\", name: '福島県'},\n      {id: \"Ibaragi\", name: '茨城県'},\n      {id: \"Tochigi\", name: '栃木県'},\n      {id: \"Gunma\", name: '群馬県'},\n      {id: \"Saitama\", name: '埼玉県'},\n      {id: \"Chiba\", name: '千葉県'},\n      {id: \"Tokyo\", name: '東京都'},\n      {id: \"Kanagawa\", name: '神奈川県'},\n      {id: \"Nigata\", name: '新潟県'},\n      {id: \"Toyama\", name: '富山県'},\n      {id: \"Ishikawa\", name: '石川県'},\n      {id: \"Hukui\", name: '福井県'},\n      {id: \"Yamanashi\", name: '山梨県'},\n      {id: \"Nagano\", name: '長野県'},\n      {id: \"Gihu\", name: '岐阜県'},\n      {id: \"Shizuoka\", name: '静岡県'},\n      {id: \"Aichi\", name: '愛知県'},\n      {id: \"Mie\", name: '三重県'},\n      {id: \"Shiga\", name: '滋賀県'},\n      {id: \"Kyoto\", name: '京都府'},\n      {id: \"Osaka\", name: '大阪府'},\n      {id: \"Hyogo\", name: '兵庫県'},\n      {id: \"Nara\", name: '奈良県'},\n      {id: \"Wakayama\", name: '和歌山県'},\n      {id: \"Totori\", name: '鳥取県'},\n      {id: \"Shimane\", name: '島根県'},\n      {id: \"Okayama\", name: '岡山県'},\n      {id: \"Hiroshima\", name: '広島県'},\n      {id: \"Yamaguchi\", name: '山口県'},\n      {id: \"Tokushima\", name: '徳島県'},\n      {id: \"Kagawa\", name: '香川県'},\n      {id: \"Ehime\", name: '愛媛県'},\n      {id: \"Kochi\", name: '高知県'},\n      {id: \"Hukuoka\", name: '福岡県'},\n      {id: \"Saga\", name: '佐賀県'},\n      {id: \"Nagasaki\", name: '長崎県'},\n      {id: \"Kumamoto\", name: '熊本県'},\n      {id: \"Oita\", name: '大分県'},\n      {id: \"Miyazaki\", name: '宮崎県'},\n      {id: \"Kagoshima\", name: '鹿児島県'},\n      {id: \"Okinawa\", name: '沖縄県'}\n  ];\n    const inputCity = useCallback((event) => {\n      setCity(event.target.value)\n  },[setCity]);\n  const inputOther = useCallback((event) => {\n    setOther(event.target.value)\n},[setOther]);\nconst inputPost = useCallback((event) => {\n  setPost(event.target.value)\n},[setPost]);\nconst inputDescription = useCallback((event) => {\n  setDescription(event.target.value)\n},[setDescription]);\n    // const inputPassword = useCallback((event) => {\n    //     setPassword(event.target.value)\n    // },[setPassword]);\n    // const inputConfirmPassword = useCallback((event) => {\n    //     setConfirmPassword(event.target.value)\n    // },[setConfirmPassword]);\n    \n\n    // const selector = useSelector((state) => state);\n    // console.log(selector.router)\n\n\n  // firenaseからproduct情報を編集できるようにする関数 useEffect を使う\n  useEffect(()=> {\n    if (id !== \"\") {\n      db.collection('users').doc(id).get()\n      .then(snapshot => {\n        const data = snapshot.data();\n        console.log(data);\n        setUsername(data.username);\n        setEmail(data.email);\n        setPrefecture(data.prefecture);\n        setCity(data.city);\n        setOther(data.other);\n        setPost(data.post);\n        setDescription(data.description);\n        setImages(data.images);\n      })\n    }\n  }, [id]);\n\n return(\n  <div className=\"common__item\">\n    <div className=\"common__center back__gray\">\n<Form>\n      <h2>あなたの情報</h2>\n      <Contents>\n      <Title>基本情報</Title>\n     <SignInput\n      placeholder={\"メールアドレス\"}\n      label={\"メールアドレス\"}\n      type={\"email\"}\n      name={\"email\"}\n      id={\"email\"}\n      className={\"email\"}\n      autocomplete={\"off\"}\n      value={email}\n      onChange={inputEmail}\n     />\n\n<SignInput\n      placeholder={\"ユーザー名\"}\n      label={\"ユーザー名\"}\n      type={\"text\"}\n      name={\"text\"}\n      id={\"text\"}\n      className={\"name\"}\n      autocomplete={\"off\"}\n      value={username}\n      onChange={inputUsername}\n     />\n\n     <Title>ユーザー詳細情報</Title>\n\n     <SignInput\n      placeholder={\"入力してください\"}\n      label={\"郵便番号\"}\n      type={\"text\"}\n      name={\"post\"}\n      id={\"post\"}\n      className={\"post\"}\n      autocomplete={\"off\"}\n      value={post}\n      onChange={inputPost}\n     />\n\n     <SelectBox \n     name={\"prefecture\"}\n     id={\"prefecture\"}\n     label={\"住所(都道府県)\"}\n     options={prefectures}\n     select={setPrefecture}\n     value={prefecture}\n     />\n\n     <SignInput\n      placeholder={\"入力してください\"}\n      label={\"住所(市町村)\"}\n      type={\"text\"}\n      name={\"city\"}\n      id={\"city\"}\n      className={\"city\"}\n      autocomplete={\"off\"}\n      value={city}\n      onChange={inputCity}\n     />\n\n<SignInput\n      placeholder={\"入力してください\"}\n      label={\"住所(番地・建物名・部屋番号)\"}\n      type={\"text\"}\n      name={\"other\"}\n      id={\"other\"}\n      className={\"other\"}\n      autocomplete={\"off\"}\n      value={other}\n      onChange={inputOther}\n     />\n\n<Title>プロフィール情報</Title>\n\n<ImageArea images={images} setImages={setImages} />\n<TextArea onChange={inputDescription} value={description} label={\"プロフィール内容\"} />\n\n{/* <SignInput\n      placeholder={\"パスワード\"}\n      label={\"パスワード\"}\n      type={\"password\"}\n      name={\"password\"}\n      id={\"password\"}\n      className={\"password\"}\n      autocomplete={\"off\"}\n      value={password}\n      onChange={inputPassword}\n     />\n\n<SignInput\n      placeholder={\"パスワード確認\"}\n      label={\"パスワード\"}\n      type={\"password\"}\n      name={\"password\"}\n      id={\"password\"}\n      className={\"password\"}\n      autocomplete={\"off\"}\n      value={confirmPassword}\n      onChange={inputConfirmPassword}\n     /> */}\n\n     {/* <PrimaryButton \n     label={\"変更を保存する\"}\n    //  onClick={() => dispatch(userEdit(username, email, password, confirmPassword))}\n    onClick={() => dispatch(userEdit(id,username, email, prefecture,city,other,post,description,images))}\n     /> */}\n\n{/* <Button onClick={() => dispatch(userEdit(id,username, email, prefecture,city,other,post,description,images))}>\n  編集を保存する\n</Button> */}\n\n<PrimaryButton \n      style={'primary__red'} onClick={() => dispatch(userEdit({\n        id: id,\n        username: username, \n        email, \n        prefecture,city: prefecture,city,\n        other: other,\n        post: post,\n        description: description,\n        images: images\n        }))} label={'編集を保存する'}\n     />\n\n</Contents>\n{/* <Texts>\n<p onClick={() => dispatch(push('/signin'))}>アカウントをお持ちの方はこちら</p>\n<p onClick={() => dispatch(push('/signin/reset'))}>パスワードをお忘れの方はこちら</p>\n</Texts> */}\n\n</Form>\n</div>\n     </div>\n )\n}\n\nexport default UserEdit;","import React,{useState} from 'react';\nimport JsonDate from \"../MOCK_DATA.json\";\nimport styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nconst App = styled.div`\n text-align:center;\n`;\n\nconst User = styled.div`\nmargin: 2em auto;\n background-color: #ddd;\n width: 100%;\n max-width: 600px;\n border-radius: 0.5em;\n padding: 1em;\n border: solid 2px #bcbcbc;\n`;\n\n    // .slice で ファイルをスライスする\n    const JsonList = () => {\n    const [users, setUsers] = useState(JsonDate.slice(0, 50));\n    const [pageNumber, setPageNumber] = useState(0);\n\n    const usersPerPage = 10;\n    const pagesVisited = pageNumber * usersPerPage;\n\n    const displayUsers = users.slice(pagesVisited, pagesVisited + usersPerPage)\n    .map((user) => {\n        return(\n        <User>\n          <h3>{user.firstName}</h3>\n          <h3>{user.lastName}</h3>\n          <h3>{user.email}</h3>\n        </User>\n        );\n    });\n\n    const pageCount = Math.ceil(users.length / usersPerPage);\n    const changePage = ({selected}) => {\n     setPageNumber(selected)\n    };\n\n return(\n   <App>\n       {displayUsers}\n       <ReactPaginate \n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"}\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousClassName={\"previousBttn\"}\n        nextLinkClassName={\"nextBttn\"}\n        disableInitialCallback={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"}\n       />\n   </App>\n );\n}\n\nexport default JsonList;","import { db, FirebaseTimestamp } from \"../../firebase\";\nimport {push} from 'connected-react-router';\n\nconst contactsRef = db.collection('contacts')\n\nexport const saveContact = ({name,type,subject,text,email}) => {\n    return async (dispatch) => {\n      const timestamp = FirebaseTimestamp.now()\n  \n      const data = {\n        name: name,\n        email: email,\n        type: type,\n        subject: subject,\n        text: text,\n        updated_at: timestamp,\n      }\n\n//   if (id === \"\") {\n    const ref = contactsRef.doc();\n    const id = ref.id;\n    data.id = id\n    data.created_at = timestamp\n// }\n\n\n      return contactsRef.doc(id).set(data)\n      .then(()=>{\n          dispatch(push('/'))\n      }).catch((error) => {\n          throw new Error(error)\n      })\n    }\n  }","import React,{useState,useCallback,useEffect} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport styled from 'styled-components';\nimport {UserMenus} from '../components/User';\nimport {push} from 'connected-react-router';\nimport {saveContact} from '../reducks/Contacts/operations';\nimport { db } from '../firebase';\nimport {TextInput,SelectBox,TextArea,PrimaryButton} from '../components/UIkit';\n\nconst media = {\n  sp: '@media(max-width: 650px)'\n}\n\nconst Container = styled.div`\n  display: -ms-flexbox;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: flex;\n  margin: 0 auto;\n  max-width: 1080px;\n`;\n\nconst Main = styled.main`\n  width: calc(100% - 300px);\n  ${media.sp} {\n      width: 100%;\n   }\n`;\n\nconst CenterSpacer = styled.div`\n margin: 0 1em;\n ${media.sp} {\n      display: none;\n   }\n`;\n\nconst ButtonArea = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\n\nconst Sidebar = styled.aside`\n  width: 300px;\n  ${media.sp} {\n        display: none;\n   }\n`;\n\nconst Contents = styled.aside`\nalign-items:center;\n  display:flex;\njustify-content:center;\n`;\n\nconst Title= styled.h3`\n font-size: 1.5em;\n font-weight: bold;\n`;\n\nconst Content= styled.div`\n p {\n    text-align:left;\n    font-weight: bold;\n }\n`;\n\nconst BackStyle= styled.p`\n background-color: #efefef;\n border-radius: 0.5em;\n padding: 0.5em 1em;\n font-weight: normal !important;\n margin: 1em 0;\n`;\n\nconst Button = styled.button`\n    margin: 0 auto;\n    padding: 1.1em 3em;\n    background: #ea352d;\n    transition: all ease-out .3s;\n    color: #fff;\n    border-radius:2em;\n    width:100%;\n    max-width: 15em;\n    margin-bottom:1em; \n    label{\n      font-size: 1.2em;\n    }\n    :hover{\n    padding: 1.1em 3em;\n    background: #aa2e28;\n    color: #fff;\n    transition: all ease-out .3s;\n    border-radius:2em;\n    label{\n      font-size: 1.2em;\n    }\n    }\n`;\n\nconst Notification = () => {\n  const dispatch = useDispatch();\n\n      // ----------------------------------\n    // DBデータ 出力 (URLからidを取得する)\n    // ----------------------------------\n    // window.location.pathname でU RL を取得する\n    // .split で /product/edit' 後のs番目の要素(id)を取得\n    let id = window.location.pathname.split('/contact') [1];\n    console.log(\"Before split /\", id)\n    \n    // id が空でない場合\n    if(id !== \"\") {\n        // id に .split で / をつける\n        id = id.split('/')[1]\n        console.log(\"After split /\",id);\n    }\n    \n\n  const [type, setType] = useState(\"\"),\n        [name, setName] = useState(\"\"),\n        [subject, setSubject] = useState(\"\"),\n        [email, setEmail] = useState(\"\"),\n        [text, setText] = useState(\"\")\n\n  const types =  [\n    {id: \"select1\", name: '選択してください'},\n    {id: \"service\", name: 'サービスについて'},\n    {id: \"other\", name: 'その他'},\n];\nconst inputEmail = useCallback((event) => {\n  setEmail(event.target.value)\n},[setEmail]);\n\nconst inputName = useCallback((event) => {\n  setName(event.target.value)\n},[setName]);\n\nconst inputSubject = useCallback((event) => {\n  setSubject(event.target.value)\n},[setSubject]);\n\nconst inputText = useCallback((event) => {\n  setText(event.target.value)\n},[setText]);\n   \n\n        // DBから商品情報を取得する (DBから持ってきた情報を useState のローカルState に反映)\n        useEffect(() => {\n          // id が空でない場合\n          if (id !== \"\") {\n              // productsCollection から products の id を取得する\n            db.collection('contacts').doc(id).get()\n            // snapshot に id情報を渡し、処理を行う\n              .then(snapshot => {\n                  // 定数data に 引数snapshotに .data を設定\n                  const data = snapshot.data();\n                  // useState で設定した ローカルステート に data をマージする\n                  setType(data.type);\n                  setName(data.name);\n                  setSubject(data.subject);\n                  setText(data.text);\n              })\n          }\n      }, [id])\n\n      \n return(\n\n<div className=\"common__item\">\n<div className=\"common__center\">\n    <Container>\n    <Sidebar >\n       <UserMenus />\n    </Sidebar>\n\n      <CenterSpacer />\n\n      <Main>\n      <Title>お問い合わせ</Title>\n\n      <SelectBox \n     name={\"type\"}\n     id={\"type\"}\n     label={\"問い合わせ種類\"}\n     options={types}\n     select={setType}\n     value={type}\n     />\n\n\n<TextInput\n      label={\"名前\"}\n      placeholder={\"田中太郎\"}\n      type={\"text\"}\n      required={true}\n      name={\"name\"}\n      id={\"name\"}\n      className={\"name\"}\n      autocomplete={\"off\"}\n      value={name}\n      onChange={inputName}\n     />  \n\n<TextInput\n      label={\"メールアドレス\"}\n      placeholder={\"sample@email.com\"}\n      type={\"text\"}\n      required={true}\n      name={\"email\"}\n      id={\"email\"}\n      className={\"email\"}\n      autocomplete={\"off\"}\n      value={email}\n      onChange={inputEmail}\n     />  \n\n      <TextInput\n      label={\"件名\"}\n      placeholder={\"入力してください\"}\n      type={\"text\"}\n      required={true}\n      name={\"subject\"}\n      id={\"subject\"}\n      className={\"subject\"}\n      autocomplete={\"off\"}\n      value={subject}\n      onChange={inputSubject}\n     />  \n\n<TextArea onChange={inputText} label={'本文'} value={text} />\n\n     {/* <Button onClick={() => dispatch(saveContact(id,type,subject,text,name))}>\n       送信の確認\n     </Button> */}\n\n\n     <PrimaryButton \n      style={'primary__red'} onClick={() => dispatch(saveContact({\n        id: id,\n        type: type,\n        email: email,\n        subject: subject,\n        text: text,\n        name: name,\n        email: email\n      }))} label={'送信の確認'}\n     />\n\n      </Main>\n    </Container>\n</div>\n</div>\n\n )\n}\n\nexport default Notification;","import React,{useState,useEffect} from 'react';\n// import {SampleCard} from './';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {ProductCard} from '../components/Products';\nimport {getProducts} from \"../reducks/products/selectors\";\nimport {fetchProducts} from \"../reducks/products/operations\";\n// import {Page} from '../components/UIkit';\nimport {Page2} from '../components/UIkit';\nimport styled from 'styled-components';\n\nconst Products = styled.div`\n    display:flex;\n    flex-wrap: wrap;\n    justify-content:center;\n    padding-top:3em;\n`;\n\n// const test = [\n//     {\"id\":1,\"firstName\":\"Akiduki\",\"lastName\":\"Tanezane\",\"email\":\"Akiduki@gmail.com\"},\n//     {\"id\":2,\"firstName\":\"Takahasgi\",\"lastName\":\"Akitane\",\"email\":\"Takahashi@gmail.com\"},\n//     {\"id\":3,\"firstName\":\"Tikushi\",\"lastName\":\"Hirokado\",\"email\":\"Tikushi@gmail.com\"},\n//     {\"id\":4,\"firstName\":\"Harada\",\"lastName\":\"Takatane\",\"email\":\"Harada@gmail.com\"},\n//     {\"id\":5,\"firstName\":\"Tikushi\",\"lastName\":\"Korekado\",\"email\":\"Tikushi@gmail.com\"},\n//     {\"id\":6,\"firstName\":\"Tatibana\",\"lastName\":\"Akitoshi\",\"email\":\"Tatibana@gmail.com\"},\n//     {\"id\":7,\"firstName\":\"Ryuzozi\",\"lastName\":\"Takanobu\",\"email\":\"Ryuzozi@gmail.com\"},\n//     {\"id\":8,\"firstName\":\"Tatibana\",\"lastName\":\"Muneshige\",\"email\":\"Tatibana@gmail.com\"},\n//     {\"id\":9,\"firstName\":\"Takahashi\",\"lastName\":\"Ayouun\",\"email\":\"Takahashi@gmail.com\"},\n//     {\"id\":10,\"firstName\":\"Tatibana\",\"lastName\":\"Dosetsu\",\"email\":\"Tatibana@gmail.com\"},\n//     {\"id\":11,\"firstName\":\"Otomo\",\"lastName\":\"Yoshimune\",\"email\":\"Otomo@gmail.com\"},\n//     {\"id\":12,\"firstName\":\"Shimadu\",\"lastName\":\"Takahisa\",\"email\":\"Shimadu@gmail.com\"}\n//     ]\n\n// Map する データ\nconst TestPage = () => {\n    const dispatch = useDispatch()\n    const selector = useSelector(state => state);\n    const posts = getProducts(selector)\n//  const [posts, setPosts] = useState(test);\n\nconst query = selector.router.location.search;\nconst category = /^\\?category=/.test(query) ? query.split('?category=')[1] : \"\";\n\nconst [showPerPage, setShowPerPage] = useState(8)\n\n const [pagination, setPagination] = useState({\n     start: 0,\n     end: showPerPage,\n });\n\n const onPaginationChange = (start,end) => {\n    // console.log(start,end);\n    setPagination({start:start,end:end})\n};\n\nconsole.log(posts);\n\nuseEffect(() => {\n    dispatch(fetchProducts(category));\n},[query])\n\n return(\n    <div className=\"common__item\">\n    <div className=\"common__center\">\n        <h2>商品</h2>\n      <Products>\n   {posts.slice(pagination.start,pagination.end).map((post) => (\n    //    <SampleCard key={post.id} firstName={post.firstName} lastName={post.lastName} email={post.email}  />\n       <ProductCard key={post.id} id={post.id} name={post.name} images={post.images} price={post.price} />\n   ))}\n   {/* <Page showPerPage={showPerPage} \n         onPaginationChange={onPaginationChange} \n         total={posts.length}\n         /> */}\n         </Products>\n          <Page2 showPerPage={showPerPage} \n         onPaginationChange={onPaginationChange} \n         total={posts.length}\n         />\n  </div> \n  </div> \n)\n}\n\nexport default TestPage;\n\n// import React from 'react';\n// import { useSelector,useDispatch } from 'react-redux';\n// import { getProductsInCart } from '../reducks/users/selectors';\n// import {CartItem} from '../components/Products';\n// import {PrimaryButton} from '../components/UIkit';\n// // import styled from 'styled-components';\n// import {push} from 'connected-react-router';\n\n// // const Buttons = styled.div`\n// //  padding-top: 3em;\n// // `;\n\n// // const Items = styled.div`\n// //  padding-top: 1em;\n// // `;\n\n// const TestPage = () => {\n//     const selector = useSelector((state) => state);\n//     const dispatch = useDispatch();\n//     // selector から getProductsInCart関数 を呼び出す (現在のカートにある情報)\n//     const productsInCart = getProductsInCart(selector);\n\n//  return(\n//    <div>\n     \n//           <h2>ショッピングカート</h2>\n \n//             {/* カート情報 productsInCart関数 を コンポネート で.map する */}\n//             {productsInCart.length > 0 && (\n//                 productsInCart.map(product => <CartItem key={product.id} product={product} /> )\n//             )}\n\n//         <PrimaryButton label={\"レジへすすむ\"} onClick={() => dispatch(push('/order/confirm'))} />\n//         <PrimaryButton label={\"買い物を続ける\"} onClick={() => dispatch(push('/'))} />\n       \n//       </div>\n\n//  )\n// }\n\n// export default TestPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {NotificationItem} from '../components/User';\nimport {useDispatch} from \"react-redux\";\nimport {UserMenus} from '../components/User';\n\nconst Container = styled.div`\n  display: -ms-flexbox;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: flex;\n  margin: 0 auto;\n  max-width: 1080px;\n`;\n\nconst Main = styled.main`\n  width: calc(100% - 300px);\n`;\n\nconst CenterSpacer = styled.div`\n margin: 0 1em;\n`;\n\nconst ButtonArea = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\n\nconst Sidebar = styled.aside`\n  width: 300px;\n`;\n\nconst Contents = styled.aside`\nalign-items:center;\n  display:flex;\njustify-content:center;\n`;\n\nconst Title= styled.h3`\n font-size: 1.5em;\n font-weight: bold;\n`;\n\nconst Content= styled.div`\n p {\n    text-align:left;\n    font-weight: bold;\n }\n`;\n\nconst BackStyle= styled.p`\n background-color: #efefef;\n border-radius: 0.5em;\n padding: 0.5em 1em;\n font-weight: normal !important;\n margin: 1em 0;\n`;\n\n\n// const MenuLists1 = [\n//   {\n//       text: 'お知らせ',\n//       path: '/user/notification'\n//   },\n//   {\n//       text: 'いいねした商品',\n//       path: '/user/like'\n//   },\n// ]\n\n// const MenuLists2 = [\n//   {\n//       text: '商品を出品する',\n//       path: '/product/edit'\n//   },\n//   {\n//       text: '出品した商品',\n//       path: '/user/products/history'\n//   }\n// ]\n\n// const MenuLists3 = [\n//   {\n//       text: 'お問い合わせ',\n//       path: '/contact'\n//   }\n// ]\n\nconst Notifications = [\n  {\n    day: '2021/08/23',\n    text: 'こんにちは、商品を出品または購入しましょう。'\n  },\n  {\n    day: '2021/06/09',\n    text: '利用規約が改訂されました。ご確認ください。'\n},\n]\n\nconst UserProductsHistory = () => {\n  const dispatch = useDispatch();\n   \n return(\n<>\n\n<div className=\"common__item\">\n<div className=\"common__center\">\n    <Container>\n    <Sidebar >\n       <UserMenus />\n    </Sidebar>\n\n      <CenterSpacer />\n\n      <Main>\n      <Title>お知らせ</Title>\n\n      \n      {Notifications.map((Lists,List) => {\n       return<NotificationItem key={List} text={Lists.text} day={Lists.day} />\n   })}\n\n      </Main>\n    </Container>\n</div>\n</div>\n\n</>\n\n )\n}\n\nexport default UserProductsHistory;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Card = styled.div`\n    margin: 0 0.8em 1em 0;\n    background-color:#fff;\n    width: 100%;\n    max-width: 16em;\n    border-radius:1em;\n    border: solid 2px #eaeaea;\n    position: relative;\n    transition: all ease-out .3s;\n    cursor: pointer;\n    img {\n        border-radius: 0.8em 0.8em 0 0;\n        /* width: 100%; */\n        width: 255.7px;\n    　　height: 255.7px;\n    　　object-fit: cover;\n    }\n    :hover{\n        transition: all ease-out .3s;\n        background-color: #f5f5f5;;\n    }\n`;\n\n\nconst SampleCard = (props) => {\n   \n return(\n  <div>\n    <Card>\n        {props.firstName}\n        {props.lastName}\n        {props.email}\n    </Card>\n  </div> \n )\n}\n\nexport default SampleCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {NotificationItem} from '../components/User';\nimport {useDispatch} from \"react-redux\";\n\nimport {UserMenus} from '../components/User';\n\nconst Container = styled.div`\n  display: -ms-flexbox;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: flex;\n  margin: 0 auto;\n  max-width: 1080px;\n`;\n\nconst Main = styled.main`\n  width: calc(100% - 300px);\n`;\n\nconst CenterSpacer = styled.div`\n margin: 0 1em;\n`;\n\nconst ButtonArea = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\n\nconst Sidebar = styled.aside`\n  width: 300px;\n`;\n\nconst Contents = styled.aside`\nalign-items:center;\n  display:flex;\njustify-content:center;\n`;\n\nconst Title= styled.h3`\n font-size: 1.5em;\n font-weight: bold;\n`;\n\nconst Content= styled.div`\n p {\n    text-align:left;\n    font-weight: bold;\n }\n`;\n\nconst BackStyle= styled.p`\n background-color: #efefef;\n border-radius: 0.5em;\n padding: 0.5em 1em;\n font-weight: normal !important;\n margin: 1em 0;\n`;\n\n\n// const MenuLists1 = [\n//   {\n//       text: 'お知らせ',\n//       path: '/user/notification'\n//   },\n//   {\n//       text: 'いいねした商品',\n//       path: '/user/like'\n//   },\n// ]\n\n// const MenuLists2 = [\n//   {\n//       text: '商品を出品する',\n//       path: '/product/edit'\n//   },\n//   {\n//       text: '出品した商品',\n//       path: '/user/products/history'\n//   }\n// ]\n\n// const MenuLists3 = [\n//   {\n//       text: 'お問い合わせ',\n//       path: '/contact'\n//   }\n// ]\n\nconst Notifications = [\n  {\n    day: '2021/08/23',\n    text: 'こんにちは、商品を出品または購入しましょう。'\n  },\n  {\n    day: '2021/06/09',\n    text: '利用規約が改訂されました。ご確認ください。'\n},\n]\n\nconst UserProducts = () => {\n  const dispatch = useDispatch();\n   \n return(\n<>\n\n<div className=\"common__item\">\n<div className=\"common__center\">\n    <Container>\n    <Sidebar >\n       <UserMenus />\n    </Sidebar>\n\n      <CenterSpacer />\n\n      <Main>\n      <Title>あなたの出品した商品</Title>\n\n      \n      {Notifications.map((Lists,List) => {\n       return<NotificationItem key={List} text={Lists.text} day={Lists.day} />\n   })}\n\n      </Main>\n    </Container>\n</div>\n</div>\n\n</>\n\n )\n}\n\nexport default UserProducts;","import React,{useCallback, useMemo} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CartItem} from \"../components/Products\";\nimport styled from 'styled-components';\nimport {TextDetail,PrimaryButton} from '../components/UIkit';\nimport{getProductsInCart} from '../reducks//users/selectors';\nimport {orderProduct} from '../reducks/products/operations';\n\n\nconst media = {\n  sp: '@media(max-width: 650px)'\n}\n\nconst Flex = styled.div`\n    display:flex;\n    justify-content:center;\n    flex-wrap : wrap;\n    /* justify-content:center;\n    height: auto;\n    align-items: flex-start;\n    flex-wrap : wrap; */\n    hr {\n      margin: 0.5em 0;\n    }\n`;\n\nconst CartDetail = styled.div`\n    margin: 0 2.5em;\n    text-align:left;\n    background-color: #f5f5f5;\n    border-radius:0.5em;\n    padding:2em 2.5em;\n    display: inline-block;\n    ${media.sp} {\n    margin: 2em 0 0 0;\n    width: 100%;\n   }\n\n`;\n\n\nconst OrderConfirm = () => {\n    const selector = useSelector((state) => state);\n    const dispatch = useDispatch();\n    // selector から情報を持ってくる\n    const productsInCart = getProductsInCart(selector);\n\n    // ----------------------    \n    // 商品の合計金額を求める関数\n    //  useMemo は計算・再計算時 に使う \n    // .reduceで使う sum(初期値0) は前回の計算結果を受け取る\n    // ----------------------\n  const subTotal = useMemo(() => {\n    return productsInCart.reduce((sum, product) => sum += product.price, 0)\n  }, [productsInCart]);\n\n    // ----------------------    \n    // 送料を求める関数\n    // ----------------------\n    const shippingFee = (subTotal >= 10000) ? 0:210;\n\n    // ----------------------    \n    // 税を求める関数\n    // ----------------------\n    　const tax = subTotal * 0.1;\n\n    // ----------------------    \n    // 合計金額を求める関数\n    // ----------------------\n    const total = subTotal + shippingFee + tax;\n\n    // ----------------------    \n    // orderProduct関数(operation) ボタンで呼び出す\n    // ----------------------\n    const order = useCallback(() => {\n        dispatch(orderProduct(productsInCart,total))\n    },[productsInCart,total])\n\n    console.log(order)\n\n\n return(\n    <div className=\"common__item\">\n       <div className=\"common__center\">\n           <h2>注文の確認</h2>\n            <Flex>\n             <div>\n             {productsInCart.length > 0 && (\n                  productsInCart.map(product => <CartItem key={product.id} product={product} /> )\n              )}\n             </div>\n             <CartDetail>\n              <TextDetail label={\"商品合計\"} value={\"￥\" + subTotal.toLocaleString()} />\n              <TextDetail label={\"消費税\"} value={\"￥\" + tax} />\n              <TextDetail label={\"送料\"} value={\"￥\" + shippingFee.toLocaleString()} />\n              <hr />\n              <TextDetail label={\"合計(税込)\"} value={\"￥\" + total.toLocaleString()} />\n             </CartDetail>\n            </Flex>\n            {/* <button onClick={order}>注文する</button> */}\n\n            <PrimaryButton \n      style={'primary__red'} onClick={() => dispatch(order)} label={'注文する'}\n     />\n    </div>\n    </div>\n )\n}\n\nexport default OrderConfirm;","import React,{useState,useEffect} from 'react';\n// import {SampleCard} from './';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {ProductCard} from '../components/Products';\nimport {getProducts} from \"../reducks/products/selectors\";\nimport {fetchProducts} from \"../reducks/products/operations\";\n// import {Page} from '../components/UIkit';\nimport {Page2} from '../components/UIkit';\nimport styled from 'styled-components';\n\nconst Products = styled.div`\n    display:flex;\n    flex-wrap: wrap;\n    justify-content:center;\n    padding-top:3em;\n`;\n\n// const test = [\n//     {\"id\":1,\"firstName\":\"Akiduki\",\"lastName\":\"Tanezane\",\"email\":\"Akiduki@gmail.com\"},\n//     {\"id\":2,\"firstName\":\"Takahasgi\",\"lastName\":\"Akitane\",\"email\":\"Takahashi@gmail.com\"},\n//     {\"id\":3,\"firstName\":\"Tikushi\",\"lastName\":\"Hirokado\",\"email\":\"Tikushi@gmail.com\"},\n//     {\"id\":4,\"firstName\":\"Harada\",\"lastName\":\"Takatane\",\"email\":\"Harada@gmail.com\"},\n//     {\"id\":5,\"firstName\":\"Tikushi\",\"lastName\":\"Korekado\",\"email\":\"Tikushi@gmail.com\"},\n//     {\"id\":6,\"firstName\":\"Tatibana\",\"lastName\":\"Akitoshi\",\"email\":\"Tatibana@gmail.com\"},\n//     {\"id\":7,\"firstName\":\"Ryuzozi\",\"lastName\":\"Takanobu\",\"email\":\"Ryuzozi@gmail.com\"},\n//     {\"id\":8,\"firstName\":\"Tatibana\",\"lastName\":\"Muneshige\",\"email\":\"Tatibana@gmail.com\"},\n//     {\"id\":9,\"firstName\":\"Takahashi\",\"lastName\":\"Ayouun\",\"email\":\"Takahashi@gmail.com\"},\n//     {\"id\":10,\"firstName\":\"Tatibana\",\"lastName\":\"Dosetsu\",\"email\":\"Tatibana@gmail.com\"},\n//     {\"id\":11,\"firstName\":\"Otomo\",\"lastName\":\"Yoshimune\",\"email\":\"Otomo@gmail.com\"},\n//     {\"id\":12,\"firstName\":\"Shimadu\",\"lastName\":\"Takahisa\",\"email\":\"Shimadu@gmail.com\"}\n//     ]\n\n// Map する データ\nconst TestPage = () => {\n    const dispatch = useDispatch()\n    const selector = useSelector(state => state);\n    const posts = getProducts(selector)\n//  const [posts, setPosts] = useState(test);\n\nconst query = selector.router.location.search;\nconst category = /^\\?category=/.test(query) ? query.split('?category=')[1] : \"\";\n\nconst [showPerPage, setShowPerPage] = useState(8)\n\n const [pagination, setPagination] = useState({\n     start: 0,\n     end: showPerPage,\n });\n\n const onPaginationChange = (start,end) => {\n    // console.log(start,end);\n    setPagination({start:start,end:end})\n};\n\nconsole.log(posts);\n\nuseEffect(() => {\n    dispatch(fetchProducts(category));\n},[query])\n\n return(\n    <div className=\"common__item\">\n    <div className=\"common__center\">\n        <h2>商品</h2>\n      <Products>\n\n\n   {/* {posts.slice(pagination.start,pagination.end).map((post) => (\n    //    <SampleCard key={post.id} firstName={post.firstName} lastName={post.lastName} email={post.email}  />\n       <ProductCard key={post.id} id={post.id} name={post.name} images={post.images} price={post.price} />\n   ))} */}\n\n{posts.length > 0 ? (\n    posts.slice(pagination.start,pagination.end).map((post) => (\n        //    <SampleCard key={post.id} firstName={post.firstName} lastName={post.lastName} email={post.email}  />\n           <ProductCard key={post.id} id={post.id} name={post.name} images={post.images} price={post.price} />\n       ) )\n  ) : (\n      <p>該当の商品がありません</p>\n  )}\n\n   {/* <Page showPerPage={showPerPage} \n         onPaginationChange={onPaginationChange} \n         total={posts.length}\n         /> */}\n         \n         </Products>\n          <Page2 showPerPage={showPerPage} \n         onPaginationChange={onPaginationChange} \n         total={posts.length}\n         />\n  </div> \n  </div> \n)\n}\n\nexport default TestPage;\n\n// import React from 'react';\n// import { useSelector,useDispatch } from 'react-redux';\n// import { getProductsInCart } from '../reducks/users/selectors';\n// import {CartItem} from '../components/Products';\n// import {PrimaryButton} from '../components/UIkit';\n// // import styled from 'styled-components';\n// import {push} from 'connected-react-router';\n\n// // const Buttons = styled.div`\n// //  padding-top: 3em;\n// // `;\n\n// // const Items = styled.div`\n// //  padding-top: 1em;\n// // `;\n\n// const TestPage = () => {\n//     const selector = useSelector((state) => state);\n//     const dispatch = useDispatch();\n//     // selector から getProductsInCart関数 を呼び出す (現在のカートにある情報)\n//     const productsInCart = getProductsInCart(selector);\n\n//  return(\n//    <div>\n     \n//           <h2>ショッピングカート</h2>\n \n//             {/* カート情報 productsInCart関数 を コンポネート で.map する */}\n//             {productsInCart.length > 0 && (\n//                 productsInCart.map(product => <CartItem key={product.id} product={product} /> )\n//             )}\n\n//         <PrimaryButton label={\"レジへすすむ\"} onClick={() => dispatch(push('/order/confirm'))} />\n//         <PrimaryButton label={\"買い物を続ける\"} onClick={() => dispatch(push('/'))} />\n       \n//       </div>\n\n//  )\n// }\n\n// export default TestPage;\n","import React,{useState,useCallback,useEffect} from 'react';\nimport styled from 'styled-components';\nimport {db} from '../firebase';\nimport {PrimaryButton} from '../components/UIkit';\nimport {UserMenus,UserEditButton} from '../components/User';\nimport {ImageSwiper} from '../components/Products';\nimport {useDispatch,useSelector} from \"react-redux\";\nimport { getUserId } from '../reducks/users/selectors';\nimport { push } from 'connected-react-router';\nimport HTMLReactParser from 'html-react-parser';\n\nconst media = {\n  sp: '@media(max-width: 650px)'\n}\n\nconst Container = styled.div`\n  display: -ms-flexbox;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: flex;\n  margin: 0 auto;\n  max-width: 1080px;\n  \n`;\n\nconst Sidebar = styled.aside`\n  width: 300px;\n  ${media.sp} {\n        display: none;\n   }\n`;\n\nconst Title= styled.h3`\n font-size: 1.5em;\n font-weight: bold;\n padding-top:1em;\n`;\n\nconst Main = styled.main`\n  width: calc(100% - 300px);\n  p {\n    padding:0;\n  }\n  ${media.sp} {\n      width: 100%;\n      /* padding: 0 1em; */\n   }\n`;\n\nconst CenterSpacer = styled.div`\n margin: 0 1em;\n ${media.sp} {\n      display: none;\n   }\n`;\n\nconst Center = styled.div`\n text-align: center;\n`;\n\nconst Button = styled.button`\n text-align: center;\n margin: 0 auto;\n`;\n\nconst BackStyle = styled.div`\n text-align: center;\n padding: 1em;\n background-color:  #efefef;\n border-radius: 1em;\n width: 100%;\n margin: 1em 0;\n span {\n   font-weight: bold;\n }\n ${media.sp} {\n  padding: 1em 0;\n   }\n`;\n\nconst Informations = styled.div`\n padding: 2.5em 0;\n`;\n\nconst Item = styled.div`\ntext-align: left;\n label {\n  text-align: left;\n }\n`;\n\nconst MbMenu = styled.div`\n display: none;\n ${media.sp} {\n      display: block;\n   }\n`;\n\nconst UserInfo = (props) => {\n  const dispatch = useDispatch();\n  　const selector = useSelector((state) => state);\n  const uid = getUserId(selector);\n  // id取得のためにpathを取得する\n  const path = selector.router.location.pathname;\n  const id = path.split('/user/info/')[1];\n\n  const [user, setUser] = useState(null);\n\n  // レンダー が走った後に useEffect が走る\n  useEffect (() => {\n    // pathにより抽出したid\n    db.collection('users').doc(id).get()\n    // document を受け取る\n    .then(doc => {\n      // document の data を取得\n       const data = doc.data();\n       // setUse が user が更新する\n       setUser(data)\n    })\n   }, []);\n\n       // -------------------------------------\n    //  returnCodeToBr関数\n    //  HTML-react-parser で 正規表現を使用して <br> タグを開業につける\n    // -------------------------------------  \n    const returnCodeToBr = (text) => {\n      if(text === \"\") {\n        return text\n      } else {\n        return HTMLReactParser(text.replace(/\\r?\\n/g,'<br />'))\n      }\n    };\n \n\n  return(\n    <div className=\"common__item\">\n     <div className=\"common__center\">\n     <Container>\n    <Sidebar >\n       <UserMenus />\n    </Sidebar>\n    <CenterSpacer />\n    <Main>\n         {/* user (useState) が存在したら */}\n         {user && (\n         // jsx がかける\n        <>\n          <Title>ユーザー情報</Title>\n          <ImageSwiper images={user.images} />\n          <Informations>\n          <Title>基本情報</Title>\n\n       <Item>\n       <label>ユーザー名</label>\n          <BackStyle>\n          <p>{user.username}</p>\n          </BackStyle>\n       </Item>\n\n          <Item>\n          <label>紹介</label>\n          <BackStyle>\n          <p> {returnCodeToBr(user.description)}</p>\n          </BackStyle>\n          </Item>\n          \n          <Title>詳細情報</Title>\n\n          <Item>\n          <label>郵便番号</label>\n          <BackStyle>\n          <p>{user.post}</p>\n          </BackStyle>\n          </Item>\n          \n          <Item>\n          <label>住所(都道府県)</label>\n          <BackStyle>\n          <p>{user.prefecture}</p>\n          </BackStyle>\n          </Item>\n          \n          <Item>\n          <label>住所(市町村)</label>\n          <BackStyle>\n          <p>{user.city}</p>\n          </BackStyle>\n          </Item>       \n\n          <Item>\n          <label>住所(番地・その他)</label>\n          <BackStyle>\n          <p>{user.other}</p>\n          </BackStyle>\n          </Item>\n\n          </Informations>\n        </>\n       )}\n\n       <Center>\n       {/* <UserEditButton id={uid} /> */}\n\n       <PrimaryButton \n      style={'primary__red'} onClick={() => dispatch(push('/user/edit/'+uid))} label={'編集する'}\n     />\n      </Center>\n  </Main>\n</Container>\n<MbMenu>\n<UserMenus />\n</MbMenu>\n     </div>\n    </div>\n  )\n};\n\nexport default UserInfo;","import React,{useState,useCallback,useEffect} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport styled from 'styled-components';\nimport {UserMenus} from '../components/User';\nimport {push} from 'connected-react-router';\nimport {saveNotification} from '../reducks/Notification/operations';\nimport { db } from '../firebase';\n\nimport {TextInput,SelectBox,TextArea,PrimaryButton} from '../components/UIkit';\n\nconst Container = styled.div`\n  display: -ms-flexbox;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: flex;\n  margin: 0 auto;\n  max-width: 1080px;\n`;\n\nconst Main = styled.main`\n  width: calc(100% - 300px);\n`;\n\nconst CenterSpacer = styled.div`\n margin: 0 1em;\n`;\n\nconst ButtonArea = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\n\nconst Sidebar = styled.aside`\n  width: 300px;\n`;\n\nconst Contents = styled.aside`\nalign-items:center;\n  display:flex;\njustify-content:center;\n`;\n\nconst Title= styled.h3`\n font-size: 1.5em;\n font-weight: bold;\n`;\n\nconst Content= styled.div`\n p {\n    text-align:left;\n    font-weight: bold;\n }\n`;\n\nconst BackStyle= styled.p`\n background-color: #efefef;\n border-radius: 0.5em;\n padding: 0.5em 1em;\n font-weight: normal !important;\n margin: 1em 0;\n`;\n\nconst Button = styled.button`\n    margin: 0 auto;\n    padding: 1.1em 3em;\n    background: #ea352d;\n    transition: all ease-out .3s;\n    color: #fff;\n    border-radius:2em;\n    width:100%;\n    max-width: 15em;\n    margin-bottom:1em; \n    label{\n      font-size: 1.2em;\n    }\n    :hover{\n    padding: 1.1em 3em;\n    background: #aa2e28;\n    color: #fff;\n    transition: all ease-out .3s;\n    border-radius:2em;\n    label{\n      font-size: 1.2em;\n    }\n    }\n`;\n\nconst NotificationForm = () => {\n  const dispatch = useDispatch();\n\n    // ----------------------------------\n    // DBデータ 出力 (URLからidを取得する)\n    // ----------------------------------\n    // window.location.pathname でU RL を取得する\n    // .split で /product/edit' 後のs番目の要素(id)を取得\n    let id = window.location.pathname.split('/notification/form') [1];\n    console.log(\"Before split /\", id)\n    \n    // id が空でない場合\n    if(id !== \"\") {\n        // id に .split で / をつける\n        id = id.split('/')[1]\n        console.log(\"After split /\",id);\n    }\n    \n\n  const [type, setType] = useState(\"\"),\n        [subject, setSubject] = useState(\"\"),\n        [text, setText] = useState(\"\")\n\n  const types =  [\n    {id: \"select1\", name: '選択してください'},\n    {id: \"service\", name: 'お知らせ'},\n    {id: \"other\", name: '重要な報告'},\n];\n\nconst inputSubject = useCallback((event) => {\n  setSubject(event.target.value)\n},[setSubject]);\n\nconst inputText = useCallback((event) => {\n  setText(event.target.value)\n},[setText]);\n   \n\n        // DBから商品情報を取得する (DBから持ってきた情報を useState のローカルState に反映)\n        useEffect(() => {\n          // id が空でない場合\n          if (id !== \"\") {\n              // productsCollection から products の id を取得する\n            db.collection('contacts').doc(id).get()\n            // snapshot に id情報を渡し、処理を行う\n              .then(snapshot => {\n                  // 定数data に 引数snapshotに .data を設定\n                  const data = snapshot.data();\n                  // useState で設定した ローカルステート に data をマージする\n                  setType(data.type);\n                  setSubject(data.subject);\n                  setText(data.text);\n              })\n          }\n      }, [id])\n\n      \n return(\n\n<div className=\"common__item\">\n<div className=\"common__center\">\n    <Container>\n    <Sidebar >\n       <UserMenus />\n    </Sidebar>\n\n      <CenterSpacer />\n\n      <Main>\n      <Title>お知らせの作成</Title>\n\n      <SelectBox \n     name={\"type\"}\n     id={\"type\"}\n     label={\"お知らせの種類\"}\n     options={types}\n     select={setType}\n     value={type}\n     />\n\n      <TextInput\n      label={\"件名\"}\n      placeholder={\"入力してください\"}\n      type={\"text\"}\n      required={true}\n      name={\"subject\"}\n      id={\"subject\"}\n      className={\"subject\"}\n      autocomplete={\"off\"}\n      value={subject}\n      onChange={inputSubject}\n     />  \n\n<TextArea onChange={inputText} value={text} />\n{/* \n     <Button onClick={() => dispatch(saveNotification({\n       id: id,\n       type: type,\n       subject: subject,\n       text: text\n     }))}>\n       送信の確認\n     </Button> */}\n\n     <PrimaryButton \n      style={'primary__red'} onClick={() => dispatch(saveNotification({\n       id: id,\n       type: type,\n       subject: subject,\n       text: text\n      }))} label={'投稿する'}\n     />\n\n      </Main>\n    </Container>\n</div>\n</div>\n\n )\n}\n\nexport default NotificationForm;","import React, {useEffect} from 'react';\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { fetchOrdersHistory } from '../reducks/users/operations';\nimport { getOrdersHistory } from '../reducks/users/selectors';\nimport { OrderHistoryItem } from '../components/Products';\nimport styled from 'styled-components';\n\nconst media = {\n    sp: '@media(max-width: 650px)'\n  }\n\nconst Lists = styled.div`\n    /* width: 47em; */\n    width:100%;\n    /* text-align: center; */\n    margin-left: auto;\n    margin-right: auto;\n    ${media.sp} {\n     width:100%;\n   }\n`;\n\nconst OrderHistory = () => {\n    const dispatch = useDispatch();\n    const selector = useSelector((state)  => state)\n    // reduxのstoreを取得\n    const orders = getOrdersHistory(selector);\n\n    // Ation を呼び出す\n    useEffect(() => {\n        dispatch(fetchOrdersHistory())\n    },[])\n\n    // 初期のorderを取得 Array\n    console.log(orders);\n\n    return (\n     <div className=\"common__item\">\n        <div className=\"common__center\">\n            <Lists>\n\n\n            {orders.length > 0 ? (\n   orders.map(order => <OrderHistoryItem order={order} key={order.id} />)\n) : (\n    <div>商品がありません</div>\n)}\n\n           {/* {orders.length > 0 && (\n               orders.map(order => <OrderHistoryItem order={order} key={order.id} />)\n           )} */}\n           </Lists>\n        </div>\n        </div>\n    );\n};\n\nexport default OrderHistory;","import {CardElement} from '@stripe/react-stripe-js';\nimport {showLoadingAction, hideLoadingAction} from \"../loading/actions\";\nimport { db } from '../../firebase';\nimport {push} from \"connected-react-router\";\nimport {updateUserStateAction} from '../../reducks/users/actions';\n\n// Headers を コンストっラクター で作成 js(クライアント側) でHeader用の関数を作れる\nconst headers = new Headers();\n// Header にContentTypeを設定 (今回はjsonでbodyに渡す)\nheaders.set('Content-type', 'application/json');\n// あなたのデプロイURLを記述\nconst BASE_URL = \"https://ec-site-903fe.web.app\";\n\n\n// -------------------------------------------\n// createCustomer関数\n// これは customerData関数 にて引数(email,paymentMethodId, uid)を渡して使用している\n// -------------------------------------------\nconst createCustomer = async (email,paymentMethodId, uid) => {\n  const response = await fetch(BASE_URL+\"/v1/customer\",{\n     method: 'POST',\n     headers: headers,\n     body: JSON.stringify({\n         email: email,\n         paymentMethod: paymentMethodId,\n         userId: uid\n     })\n  });\n\n  // データをjsonで受け取る\n  const customerResponse = await response.json()\n  // 受け取った Json を js で使用できる オブジェクト型 に変更し body に返す処理\n  return JSON.parse(customerResponse.body)\n}\n\n// -------------------------------------------\n// retrievePaymentMethod関数 ここ\n// これは customerData関数 にて引数(email,paymentMethodId, uid)を渡して使用している\n// -------------------------------------------\nexport const retrievePaymentMethod = async (paymentMethodId) => {\n  const response = await fetch(BASE_URL+\"/v1/paymentMethod\",{\n     method: 'POST',\n     headers: headers,\n     body: JSON.stringify({\n         paymentMethodId: paymentMethodId\n     })\n  });\n\n  // データをjsonで受け取る\n  const paymentMethodResponse = await response.json()\n  // 受け取った Json を js で使用できる オブジェクト型 に変更し body に返す処理\n  const paymentMethod = JSON.parse(paymentMethodResponse.body);\n  console.log(paymentMethod);\n  return paymentMethod.card\n}\n\n// -------------------------------------------\n// updatePaymentMethod関数 ここ\n// updatePaymentMethod api を呼び出す関数\n// -------------------------------------------\nconst updatePaymentMethod = async (customerId, prevPaymentMethodId, nextPaymentMethodId) => {\n  const response = await fetch(BASE_URL + \"/v1/updatePaymentMethod\", {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify({\n      customerId: customerId,\n      prevPaymentMethodId: prevPaymentMethodId,\n      nextPaymentMethodId: nextPaymentMethodId\n    })\n  })\n\n  const paymentMethodResponse = await response.json()\n  const paymentMethod = JSON.parse(paymentMethodResponse.body);\n  return paymentMethod.card\n}\n\n// -------------------------------------------\n// registerCard関数 (引数: stripe ・ elements は PaymentEdit.jsx のボタンに関係する)\n// -------------------------------------------\nexport const registerCard = (stripe,elements,customerId) => {\n\n    // getState で ユーザー情報を取得する\nreturn async (dispatch, getState) => {\n    const user = getState().users\n    const email = user.email\n    const uid = user.uid\n\n    dispatch(showLoadingAction(\"登録中...\"));\n\n    // ----------------------------------------\n      // Stripeバリデーション\n      // ----------------------------------------\n\n      // stripe elements (Editでの引数) が Null または undefind ならエラーになる\n    if (!stripe || !elements) {\n        // Stripe.js has not loaded yet. Make sure to disable\n        // form submission until Stripe.js has loaded.\n        console.error(\"Does not exist stripe or elements\");\n      dispatch(hideLoadingAction());\n        return;\n      }\n  \n      // Get a reference to a mounted CardElement. Elements knows how\n      // to find your CardElement because there can only ever be one of\n      // each type of element.\n      // Editの CardElement のカード情報のエレメント要素を取得\n      const cardElement = elements.getElement(CardElement);\n  \n      // Use your card Element with other Stripe.js APIs\n      const {error, paymentMethod} = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n      });\n  \n\n      if (error) {\n        console.log('[error]', error);\n        dispatch(hideLoadingAction());\n        alert('error')\n        return;\n      } \n\n      //paymentMethod の .idキー を取得\n      const paymentMethodId = paymentMethod.id \n\n      // 初めてカードを登録する場合の処理 (カード情報・顧客の作成)\n      if(customerId === \"\") {\n      // 未処理\n      console.log(email, paymentMethodId, uid)\n      // createCustomer関数 に 引数 (email,paymentMethodId, uid, username) を渡す\n      const customerData = await createCustomer(email,paymentMethodId, uid)\n\n      // customerDataの処理 成功・失敗 処理\n      // customer を作成できず失敗 → アラート\n      if(customerData.id === '') {\n        dispatch(hideLoadingAction());\n          alert('カード情報の登録に失敗しました。')\n          return;\n          // それ以外(成功)の時\n          // DB と Redux の情報を更新する\n      } else {\n        // アップデートする情報のオブジェクト\n          const updateUserState = {\n            customer_id: customerData.id,\n            payment_method_id: paymentMethodId\n          }\n\n          // ユーザーidに紐づかせて updateUserState をアップデートする\n          db.collection('users').doc(uid)\n          .update(updateUserState)\n          .then(() => {\n            // 処理ができれば、updateUserStateAction に updateUserState を渡し、urlに移動する\n            // updateUserStateAction は users のaction につくる\n            dispatch(hideLoadingAction());\n            alert('カード情報に成功しました。');\n            dispatch(updateUserStateAction(updateUserState))\n            dispatch(push('/user'))\n          }).catch((error) => {\n            // このままでは stripeでは顧客ができて、firebaseではエラー (データの不整合)\n            // delete stripe customer\n\n            dispatch(hideLoadingAction());\n            alert('カード情報の登録に失敗しました。');\n            return;\n\n          })\n      }\n\n      // すでに登録してる顧客\n    } else {\n      // Store から 現在のusersの payment_method_id 情報をとってくる\n        const prevPaymentMethodId = getState().users.payment_method_id\n        const updatedPaymentMethod = await updatePaymentMethod(customerId, prevPaymentMethodId, paymentMethodId)\n\n        // updatePaymentMethodが空の時\n        if(!updatedPaymentMethod) {\n          dispatch(hideLoadingAction());\n          alert('お客様情報の登録に失敗しました')\n        } else {\n          // 成功した時 firebaseの payment_method_id のみを変更(更新)する\n          const userState = {\n            payment_method_id: paymentMethodId\n          }\n          db.collection('users').doc(uid)\n          .update(userState)\n          .then(() => {\n            dispatch(updateUserStateAction(userState))\n            dispatch(hideLoadingAction());\n            alert('お客様情報を更新しました')\n            dispatch(push('/user'))\n          }).catch(() => {\n            dispatch(hideLoadingAction());\n            alert('お客様情報の更新に失敗しました')\n          })\n        }\n\n        \n    }\n\n  }\n}","import React,{useCallback,useState,useEffect, useMemo} from 'react';\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport {push} from 'connected-react-router';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { registerCard,retrievePaymentMethod } from '../../reducks/payments/operations';\nimport {PrimaryButton, TextDetail} from '../../components/UIkit';\nimport { getPaymentMethodId,getCustomerId } from '../../reducks/users/selectors';\nimport styled from 'styled-components';\n\nconst MainText = styled.h3`\n padding: 2em 0;\n font-size: 1.2em;\n font-weight: bold;\n`;\n\n\nconst ButtonArea = styled.div`\npadding-top: 2em;\n`;\n\nconst PaymentEdit = () => {\n   const dispatch = useDispatch();\n   // Stripe定数\n   const stripe = useStripe();\n   // elements定数は checkOutWrapper.jsxのもつパブリックkey情報をもつコンポ年とタグから情報を持つ\n   const elements = useElements();\n   const selector = useSelector((state) => state);\n\n   const customerId = getCustomerId(selector);\n   const paymentMethodId = getPaymentMethodId(selector);\n\n   const [card,setCard] = useState({});\n\n   const register = useCallback(() => {\n      dispatch(registerCard(stripe,elements,customerId))\n      console.log('押されました')\n   },[stripe,elements,customerId])\n\n   const goBackToMyPage = useCallback(() => {\n      dispatch(push('/'))\n   },[])\n\n   useEffect(()=> {\n     (async() => {\n       const cardData = await retrievePaymentMethod(paymentMethodId)\n       // 処理が成功していたら\n       if (cardData) {\n          setCard(cardData)\n       }\n     })()\n   }, [paymentMethodId])\n\n   const cardNumber = useMemo(() => {\n     if(card.last4) {\n        return \"**** **** ****\" + card.last4\n     } else {\n        return \"未登録\"\n     }\n   }, [card])\n\n   \n return(\n    <div className=\"common__item\">\n       <div className=\"common__center\">\n          <h2>クレジットカード情報の登録・編集</h2>\n          <MainText>現在登録されていカード情報</MainText>\n          <TextDetail label={card.brand} value={cardNumber} />\n          <hr />\n          <MainText>新しく登録・変更する</MainText>\n       <CardElement\n  options={{\n    style: {\n      base: {\n        fontSize: '16px',\n        color: '#424770',\n        '::placeholder': {\n          color: '#aab7c4',\n        },\n      },\n      invalid: {\n        color: '#9e2146',\n      },\n    },\n  }}\n/>\n\n{/* <button onClick={register}>\n   カードを登録する\n</button> */}\n<ButtonArea>\n<PrimaryButton \n      style={'primary__red'} onClick={register} \n      label={'カードを登録・編集する'}\n     />\n\n<PrimaryButton \n      style={'primary__red-solid'} onClick={() => dispatch(goBackToMyPage)} \n      label={'マイページに戻る'}\n     />\n     </ButtonArea>\n\n{/* <button onClick={goBackToMyPage}>\n   マイページに戻る\n</button> */}\n    </div>\n    </div>\n )\n}\n\nexport default PaymentEdit;\n\n\n\n\n\n\n","import React from 'react';\nimport {PaymentEdit} from '../components/Payment';\n\nimport {Elements} from '@stripe/react-stripe-js';\n// 松に /pure をつける\nimport {loadStripe} from '@stripe/stripe-js/pure';\nimport styled from 'styled-components';\n\nconst media = {\n    sp: '@media(max-width: 650px)'\n  }\n  \n\nconst Contents = styled.div`\n\nmargin: 0 auto;\n  /* ${media.sp} {\n    width: 85%;\n   } */\n`;\n\n// loadStripe は 自分のAPIキー\nconst stripePromise = loadStripe('pk_test_51I0JReEqGiSkmz2ni0xMlool4Ky9GL2DvmFPqVjx49f4rmvXoSYbql4HQ5zryKfnsomEs91gzP535269vzbQ1imI00RIirtdrc');\n\nconst CheckoutWrapper = () => {\n  \n return(\n    <div className=\"common__item\">\n    <div className=\"common__center\">\n      {/* Make sure to call `loadStripe` outside of a component’s render to avoid\n      recreating the `Stripe` object on every render.\n      Elements で props に APIキー を渡す (Elements でラップしないと使えない) */}\n      <Contents>\n    <Elements stripe={stripePromise}>\n    <PaymentEdit />\n    </Elements>\n    </Contents>\n    </div>\n    </div>\n )\n}\n\nexport default CheckoutWrapper;\n\n\n\n\n\n\n\n","import React,{useState} from 'react';\n// import {useDispatch} from 'react-redux';\nimport {DropDownNavbar} from '../components/common';\nimport {ImageUpload} from '../components/UIkit';\nimport {ProductOther,Loading,ImageUp} from '../components/UIkit';\nimport {Carousel} from '../components/Home';\nimport {TimeText,TestButtonModal,NotificationBar,TestNot,ColorChange} from '../components/User';\n\n\nconst Test = (props) => {\n  // const dispatch = useDispatch();\n  const [images, setImages] = useState(\"\");\n\n return(\n  <div>\n    {/* <DropDownNavbar /> */}\n    {/* <ImageUpload /> */}\n    {/* <ProductOther /> */}\n    {/* <Carousel /> */}\n    {/* <TimeText> */}\n    {/* <TestButtonModal /> */}\n    {/* <NotificationBar /> */}\n    {/* <TestNot/> */}\n    {/* <ColorChange /> */}\n    {/* <Loading /> */}\n\n\n    <ImageUp images={images} setImages={setImages} />\n  </div> \n )\n}\n\nexport default Test;\n\n\n\n","import React,{useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listenAuthState } from './reducks/users/operations';\nimport {getIsSignedIn} from './reducks/users/selectors';\n\n// propsで children を受け取る\nconst Auth = ({children}) => {\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const isSingedIn = getIsSignedIn(selector);\n\n useEffect(() => {\n     if(!isSingedIn) {\n         dispatch(listenAuthState())\n     }\n    },[]);\n\n  if(!isSingedIn) {\n      return <></>\n  }  else {\n    return children\n  }\n}\n\nexport default Auth;","import React from 'react';\nimport {Route, Switch} from \"react-router\";\nimport {Home,Reset,SignIn,SignUp,UserMyPage,Admin,About,Works,ProductEdit,ProductDetail,Test,User,CartList,LikeList,Error,Notification,Category,ProductList,UserEdit,JsonList,Contact,TestPage,UserProducts,UserProductsHistory,Products,OrderConfirm,UserInfo,NotificationForm,OrderHistory,CheckoutWrapper} from \"./templates\";\n// 認証設定\nimport Auth from './Auth';\n\nconst Router = () => {\n    return(\n        <Switch>\n\n            <Route exact path={\"/\"} component={Home} />\n            <Route exact path={\"/signin\"} component={SignIn} />\n            <Route exact path={\"/signup\"} component={SignUp} />\n            <Route exact path={\"/signin/reset\"} component={Reset} />\n            <Route exact path={\"/test\"} component={Test} />\n            <Route exact path={\"/error\"} component={Error} />\n            {/* <Route exact path={\"/product/edit\"} component={ProductEdit} /> */}\n            {/* <Route exact path={\"/about\"} component={About} />\n            <Route exact path={\"/contact\"} component={Contact} />\n            <Route exact path={\"/works\"} component={Works} /> */}\n            {/* build default ↓ */}\n            {/* <Route component={Home} /> */}\n\n\n            <Auth>\n                {/* 正規表現 (/:id)? をつけると、商品ごとのid を表示できる :id は変数 ()? はあってもなくてもマッチするもの */}\n                <Route exact path={\"(/)?\"} component={Home} />\n               <Route path={\"/product/edit(/:id)?\"} component={ProductEdit} />\n               <Route path={\"/jsonList\"} component={JsonList} />\n               {/* <Route exact path={\"/user\"} component={User} /> */}\n               <Route exact path={\"/product/:id\"} component={ProductDetail} />\n               <Route exact path={\"/cart\"} component={CartList} />\n               <Route exact path={\"/user/like\"} component={LikeList} />\n               {/* <Route exact path={\"/user/notification\"} component={Notification} /> */}\n               <Route exact path={\"/user/category\"} component={Category} />\n               <Route exact path={\"/productList\"} component={ProductList} />\n               <Route exact path={\"/contact\"} component={Contact} />\n               <Route exact path={\"/contact/:id\"} component={Contact} />\n               {/* <Route exact path={\"/user/edit\"} component={UserEdit} /> */}\n               <Route path={\"/user/edit(/:id)?\"} component={UserEdit} />\n               <Route path={\"/TestPage\"} component={TestPage} />\n               {/* <Route path={\"/user/product\"} component={UserProducts} /> */}\n               <Route path={\"/user/products/history\"} component={UserProductsHistory} />\n               <Route path={\"/products(/:id)?\"} component={Products} />\n               <Route path={\"/order/confirm\"} component={OrderConfirm} />\n\n               <Route path={\"/order/history\"} component={OrderHistory} />\n               {/* <Route path={\"/user(/:id)?\"} component={ProductEdit} />\n               <Route path={\"/user/edit(/:id)?\"} component={ProductEdit} /> */}\n               <Route path={\"/user/info(/:id)?\"} component={UserInfo} />\n               <Route exact path={\"/user\"} component={User} />\n               {/* <Route exact path={\"/user/info\"} component={UserInfo} /> */}\n               <Route path={\"/notification/form(/:id)?\"} component={NotificationForm} />\n               <Route exact path={\"/user/notification\"} component={Notification} />\n               <Route exact path={\"/user/payment/edit\"} component={CheckoutWrapper} />\n               \n               \n\n               \n               \n            \n            {/* <Route exact path={\"/product/edit\"} component={ProductEdit} /> */}\n            </Auth>\n\n        </Switch>\n    )\n}\n\nexport default Router;","import React from 'react';\nimport './App.css';\nimport Router from './Router';\n\nfunction App() {\n  return (\n     <main>\n       <Router />\n     </main>\n  )\n}\n\nexport default App;","import {\n    createStore as reduxCreateStore,\n    combineReducers,\n    applyMiddleware\n} from 'redux';\n// ③非同期処理\nimport thunk from 'redux-thunk';\n\nimport {connectRouter, routerMiddleware} from \"connected-react-router\";\n// ② routing設定\nimport {UsersReducer} from \"../users/reducers\";\nimport {ProductsReducer} from \"../products/reducers\";\nimport {ContactsReducer} from \"../Contacts/reducers\";\nimport {NotificationsReducer} from \"../Notification/reducers\";\n// import {CategoriesReducer} from \"../categories/reducers\";\n\n// ② routing設定 (history) 追加\nexport default function createStore(history) {\n    return reduxCreateStore (\n        combineReducers({\n            // ② routing設定\n            router: connectRouter(history),\n            users: UsersReducer,\n            products: ProductsReducer,\n            contacts: ContactsReducer,\n            notifications: NotificationsReducer\n            // categories: CategoriesReducer\n        }),\n       // ② routing設定\n        applyMiddleware(\n           routerMiddleware(history),\n           // ③非同期処理\n           thunk\n        )\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// storeとの接続\nimport {Provider} from 'react-redux';\nimport createStore from './reducks/store/store';\nimport {Header,Navbar,Footer,FooterLink} from './components/common';\n\n//\n\n// CSS\nimport './assets/style/reset.css';\nimport './assets/style/common.css';\n\n// ② routing機能\nimport {ConnectedRouter} from \"connected-react-router\";\nimport * as History from \"history\";\n//\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ② routing機能 ⇨ Store\nconst history = History.createBrowserHistory();\n//\n\n// ② routing機能 (history) 追加\nexport const store = createStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* ② routing機能 */}\n    <ConnectedRouter history={history}>\n      {/* <Navbar /> */}\n      <Header />\n     <App />\n     <FooterLink/>\n      <Footer />\n    </ConnectedRouter >\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}